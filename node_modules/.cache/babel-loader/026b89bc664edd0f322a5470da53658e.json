{"ast":null,"code":"import React$1, { useRef, useContext, useEffect } from 'react';\nimport { classNames } from '../../utilities/css.js';\nimport { Checkbox as Checkbox$1 } from '../Checkbox/Checkbox.js';\nimport { ResourceListContext } from '../../utilities/resource-list/context.js';\nimport styles from './CheckableButton.scss.js';\n\nfunction CheckableButton(_ref) {\n  let {\n    accessibilityLabel,\n    label = '',\n    onToggleAll,\n    selected,\n    selectMode,\n    plain,\n    measuring,\n    disabled,\n    smallScreen\n  } = _ref;\n  const checkBoxRef = useRef(null);\n  const {\n    registerCheckableButtons\n  } = useContext(ResourceListContext);\n  let currentKey = 'bulkLg';\n\n  if (plain) {\n    currentKey = 'plain';\n  } else if (smallScreen) {\n    currentKey = 'bulkSm';\n  }\n\n  useEffect(() => {\n    if (checkBoxRef.current && registerCheckableButtons) {\n      registerCheckableButtons(currentKey, checkBoxRef.current);\n    }\n  }, [currentKey, registerCheckableButtons]);\n  const className = plain ? classNames(styles.CheckableButton, styles['CheckableButton-plain']) : classNames(styles.CheckableButton, selectMode && styles['CheckableButton-selectMode'], selected && styles['CheckableButton-selected'], measuring && styles['CheckableButton-measuring']);\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: className,\n    onClick: onToggleAll\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Checkbox\n  }, /*#__PURE__*/React$1.createElement(Checkbox$1, {\n    label: accessibilityLabel,\n    labelHidden: true,\n    checked: selected,\n    disabled: disabled,\n    onChange: onToggleAll,\n    ref: checkBoxRef\n  })), /*#__PURE__*/React$1.createElement(\"span\", {\n    className: styles.Label\n  }, label));\n}\n\nexport { CheckableButton };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/CheckableButton/CheckableButton.js"],"names":["React$1","useRef","useContext","useEffect","classNames","Checkbox","Checkbox$1","ResourceListContext","styles","CheckableButton","accessibilityLabel","label","onToggleAll","selected","selectMode","plain","measuring","disabled","smallScreen","checkBoxRef","registerCheckableButtons","currentKey","current","className","createElement","onClick","labelHidden","checked","onChange","ref","Label"],"mappings":"AAAA,OAAOA,OAAP,IAAkBC,MAAlB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,QAAQ,IAAIC,UAArB,QAAuC,yBAAvC;AACA,SAASC,mBAAT,QAAoC,0CAApC;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,SAASC,eAAT,OAUG;AAAA,MAVsB;AACvBC,IAAAA,kBADuB;AAEvBC,IAAAA,KAAK,GAAG,EAFe;AAGvBC,IAAAA,WAHuB;AAIvBC,IAAAA,QAJuB;AAKvBC,IAAAA,UALuB;AAMvBC,IAAAA,KANuB;AAOvBC,IAAAA,SAPuB;AAQvBC,IAAAA,QARuB;AASvBC,IAAAA;AATuB,GAUtB;AACD,QAAMC,WAAW,GAAGlB,MAAM,CAAC,IAAD,CAA1B;AACA,QAAM;AACJmB,IAAAA;AADI,MAEFlB,UAAU,CAACK,mBAAD,CAFd;AAGA,MAAIc,UAAU,GAAG,QAAjB;;AAEA,MAAIN,KAAJ,EAAW;AACTM,IAAAA,UAAU,GAAG,OAAb;AACD,GAFD,MAEO,IAAIH,WAAJ,EAAiB;AACtBG,IAAAA,UAAU,GAAG,QAAb;AACD;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,WAAW,CAACG,OAAZ,IAAuBF,wBAA3B,EAAqD;AACnDA,MAAAA,wBAAwB,CAACC,UAAD,EAAaF,WAAW,CAACG,OAAzB,CAAxB;AACD;AACF,GAJQ,EAIN,CAACD,UAAD,EAAaD,wBAAb,CAJM,CAAT;AAKA,QAAMG,SAAS,GAAGR,KAAK,GAAGX,UAAU,CAACI,MAAM,CAACC,eAAR,EAAyBD,MAAM,CAAC,uBAAD,CAA/B,CAAb,GAAyEJ,UAAU,CAACI,MAAM,CAACC,eAAR,EAAyBK,UAAU,IAAIN,MAAM,CAAC,4BAAD,CAA7C,EAA6EK,QAAQ,IAAIL,MAAM,CAAC,0BAAD,CAA/F,EAA6HQ,SAAS,IAAIR,MAAM,CAAC,2BAAD,CAAhJ,CAA1G;AACA,SAAO,aAAaR,OAAO,CAACwB,aAAR,CAAsB,KAAtB,EAA6B;AAC/CD,IAAAA,SAAS,EAAEA,SADoC;AAE/CE,IAAAA,OAAO,EAAEb;AAFsC,GAA7B,EAGjB,aAAaZ,OAAO,CAACwB,aAAR,CAAsB,KAAtB,EAA6B;AAC3CD,IAAAA,SAAS,EAAEf,MAAM,CAACH;AADyB,GAA7B,EAEb,aAAaL,OAAO,CAACwB,aAAR,CAAsBlB,UAAtB,EAAkC;AAChDK,IAAAA,KAAK,EAAED,kBADyC;AAEhDgB,IAAAA,WAAW,EAAE,IAFmC;AAGhDC,IAAAA,OAAO,EAAEd,QAHuC;AAIhDI,IAAAA,QAAQ,EAAEA,QAJsC;AAKhDW,IAAAA,QAAQ,EAAEhB,WALsC;AAMhDiB,IAAAA,GAAG,EAAEV;AAN2C,GAAlC,CAFA,CAHI,EAYf,aAAanB,OAAO,CAACwB,aAAR,CAAsB,MAAtB,EAA8B;AAC9CD,IAAAA,SAAS,EAAEf,MAAM,CAACsB;AAD4B,GAA9B,EAEfnB,KAFe,CAZE,CAApB;AAeD;;AAED,SAASF,eAAT","sourcesContent":["import React$1, { useRef, useContext, useEffect } from 'react';\nimport { classNames } from '../../utilities/css.js';\nimport { Checkbox as Checkbox$1 } from '../Checkbox/Checkbox.js';\nimport { ResourceListContext } from '../../utilities/resource-list/context.js';\nimport styles from './CheckableButton.scss.js';\n\nfunction CheckableButton({\n  accessibilityLabel,\n  label = '',\n  onToggleAll,\n  selected,\n  selectMode,\n  plain,\n  measuring,\n  disabled,\n  smallScreen\n}) {\n  const checkBoxRef = useRef(null);\n  const {\n    registerCheckableButtons\n  } = useContext(ResourceListContext);\n  let currentKey = 'bulkLg';\n\n  if (plain) {\n    currentKey = 'plain';\n  } else if (smallScreen) {\n    currentKey = 'bulkSm';\n  }\n\n  useEffect(() => {\n    if (checkBoxRef.current && registerCheckableButtons) {\n      registerCheckableButtons(currentKey, checkBoxRef.current);\n    }\n  }, [currentKey, registerCheckableButtons]);\n  const className = plain ? classNames(styles.CheckableButton, styles['CheckableButton-plain']) : classNames(styles.CheckableButton, selectMode && styles['CheckableButton-selectMode'], selected && styles['CheckableButton-selected'], measuring && styles['CheckableButton-measuring']);\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: className,\n    onClick: onToggleAll\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Checkbox\n  }, /*#__PURE__*/React$1.createElement(Checkbox$1, {\n    label: accessibilityLabel,\n    labelHidden: true,\n    checked: selected,\n    disabled: disabled,\n    onChange: onToggleAll,\n    ref: checkBoxRef\n  })), /*#__PURE__*/React$1.createElement(\"span\", {\n    className: styles.Label\n  }, label));\n}\n\nexport { CheckableButton };\n"]},"metadata":{},"sourceType":"module"}