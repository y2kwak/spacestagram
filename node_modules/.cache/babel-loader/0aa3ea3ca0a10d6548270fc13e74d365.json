{"ast":null,"code":"import { isElementInViewport as isElementInViewport$1 } from './is-element-in-viewport.js';\nconst FOCUSABLE_SELECTOR = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]';\nconst KEYBOARD_FOCUSABLE_SELECTORS = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]:not([tabindex=\"-1\"])';\n\nconst handleMouseUpByBlurring = _ref => {\n  let {\n    currentTarget\n  } = _ref;\n  return currentTarget.blur();\n};\n\nfunction nextFocusableNode(node, filter) {\n  const allFocusableElements = [...document.querySelectorAll(FOCUSABLE_SELECTOR)];\n  const sliceLocation = allFocusableElements.indexOf(node) + 1;\n  const focusableElementsAfterNode = allFocusableElements.slice(sliceLocation);\n\n  for (const focusableElement of focusableElementsAfterNode) {\n    if (isElementInViewport$1(focusableElement) && (!filter || filter && filter(focusableElement))) {\n      return focusableElement;\n    }\n  }\n\n  return null;\n}\n\nfunction findFirstFocusableNode(element) {\n  let onlyDescendants = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (!onlyDescendants && matches(element, FOCUSABLE_SELECTOR)) {\n    return element;\n  }\n\n  return element.querySelector(FOCUSABLE_SELECTOR);\n} // Popover needs to be able to find its activator even if it is disabled, which FOCUSABLE_SELECTOR doesn't support.\n\n\nfunction findFirstFocusableNodeIncludingDisabled(element) {\n  const focusableSelector = `a,button,frame,iframe,input:not([type=hidden]),select,textarea,*[tabindex]`;\n\n  if (matches(element, focusableSelector)) {\n    return element;\n  }\n\n  return element.querySelector(focusableSelector);\n}\n\nfunction focusFirstFocusableNode(element) {\n  let onlyDescendants = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  var _findFirstFocusableNo;\n\n  (_findFirstFocusableNo = findFirstFocusableNode(element, onlyDescendants)) == null ? void 0 : _findFirstFocusableNo.focus();\n}\n\nfunction focusNextFocusableNode(node, filter) {\n  const nextFocusable = nextFocusableNode(node, filter);\n\n  if (nextFocusable && nextFocusable instanceof HTMLElement) {\n    nextFocusable.focus();\n    return true;\n  }\n\n  return false;\n}\n\nfunction findFirstKeyboardFocusableNode(element) {\n  let onlyDescendants = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (!onlyDescendants && matches(element, KEYBOARD_FOCUSABLE_SELECTORS)) {\n    return element;\n  }\n\n  return element.querySelector(KEYBOARD_FOCUSABLE_SELECTORS);\n}\n\nfunction focusFirstKeyboardFocusableNode(element) {\n  let onlyDescendants = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  const firstFocusable = findFirstKeyboardFocusableNode(element, onlyDescendants);\n\n  if (firstFocusable) {\n    firstFocusable.focus();\n    return true;\n  }\n\n  return false;\n}\n\nfunction findLastKeyboardFocusableNode(element) {\n  let onlyDescendants = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (!onlyDescendants && matches(element, KEYBOARD_FOCUSABLE_SELECTORS)) {\n    return element;\n  }\n\n  const allFocusable = element.querySelectorAll(KEYBOARD_FOCUSABLE_SELECTORS);\n  return allFocusable[allFocusable.length - 1];\n}\n\nfunction focusLastKeyboardFocusableNode(element) {\n  let onlyDescendants = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  const lastFocusable = findLastKeyboardFocusableNode(element, onlyDescendants);\n\n  if (lastFocusable) {\n    lastFocusable.focus();\n    return true;\n  }\n\n  return false;\n}\n\nfunction matches(node, selector) {\n  if (node.matches) {\n    return node.matches(selector);\n  }\n\n  const matches = (node.ownerDocument || document).querySelectorAll(selector);\n  let i = matches.length;\n\n  while (--i >= 0 && matches.item(i) !== node) return i > -1;\n}\n\nexport { findFirstFocusableNode, findFirstFocusableNodeIncludingDisabled, findFirstKeyboardFocusableNode, findLastKeyboardFocusableNode, focusFirstFocusableNode, focusFirstKeyboardFocusableNode, focusLastKeyboardFocusableNode, focusNextFocusableNode, handleMouseUpByBlurring, nextFocusableNode };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/utilities/focus.js"],"names":["isElementInViewport","isElementInViewport$1","FOCUSABLE_SELECTOR","KEYBOARD_FOCUSABLE_SELECTORS","handleMouseUpByBlurring","currentTarget","blur","nextFocusableNode","node","filter","allFocusableElements","document","querySelectorAll","sliceLocation","indexOf","focusableElementsAfterNode","slice","focusableElement","findFirstFocusableNode","element","onlyDescendants","matches","querySelector","findFirstFocusableNodeIncludingDisabled","focusableSelector","focusFirstFocusableNode","_findFirstFocusableNo","focus","focusNextFocusableNode","nextFocusable","HTMLElement","findFirstKeyboardFocusableNode","focusFirstKeyboardFocusableNode","firstFocusable","findLastKeyboardFocusableNode","allFocusable","length","focusLastKeyboardFocusableNode","lastFocusable","selector","ownerDocument","i","item"],"mappings":"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","sourcesContent":["import { isElementInViewport as isElementInViewport$1 } from './is-element-in-viewport.js';\n\nconst FOCUSABLE_SELECTOR = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]';\nconst KEYBOARD_FOCUSABLE_SELECTORS = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]:not([tabindex=\"-1\"])';\nconst handleMouseUpByBlurring = ({\n  currentTarget\n}) => currentTarget.blur();\nfunction nextFocusableNode(node, filter) {\n  const allFocusableElements = [...document.querySelectorAll(FOCUSABLE_SELECTOR)];\n  const sliceLocation = allFocusableElements.indexOf(node) + 1;\n  const focusableElementsAfterNode = allFocusableElements.slice(sliceLocation);\n\n  for (const focusableElement of focusableElementsAfterNode) {\n    if (isElementInViewport$1(focusableElement) && (!filter || filter && filter(focusableElement))) {\n      return focusableElement;\n    }\n  }\n\n  return null;\n}\nfunction findFirstFocusableNode(element, onlyDescendants = true) {\n  if (!onlyDescendants && matches(element, FOCUSABLE_SELECTOR)) {\n    return element;\n  }\n\n  return element.querySelector(FOCUSABLE_SELECTOR);\n} // Popover needs to be able to find its activator even if it is disabled, which FOCUSABLE_SELECTOR doesn't support.\n\nfunction findFirstFocusableNodeIncludingDisabled(element) {\n  const focusableSelector = `a,button,frame,iframe,input:not([type=hidden]),select,textarea,*[tabindex]`;\n\n  if (matches(element, focusableSelector)) {\n    return element;\n  }\n\n  return element.querySelector(focusableSelector);\n}\nfunction focusFirstFocusableNode(element, onlyDescendants = true) {\n  var _findFirstFocusableNo;\n\n  (_findFirstFocusableNo = findFirstFocusableNode(element, onlyDescendants)) == null ? void 0 : _findFirstFocusableNo.focus();\n}\nfunction focusNextFocusableNode(node, filter) {\n  const nextFocusable = nextFocusableNode(node, filter);\n\n  if (nextFocusable && nextFocusable instanceof HTMLElement) {\n    nextFocusable.focus();\n    return true;\n  }\n\n  return false;\n}\nfunction findFirstKeyboardFocusableNode(element, onlyDescendants = true) {\n  if (!onlyDescendants && matches(element, KEYBOARD_FOCUSABLE_SELECTORS)) {\n    return element;\n  }\n\n  return element.querySelector(KEYBOARD_FOCUSABLE_SELECTORS);\n}\nfunction focusFirstKeyboardFocusableNode(element, onlyDescendants = true) {\n  const firstFocusable = findFirstKeyboardFocusableNode(element, onlyDescendants);\n\n  if (firstFocusable) {\n    firstFocusable.focus();\n    return true;\n  }\n\n  return false;\n}\nfunction findLastKeyboardFocusableNode(element, onlyDescendants = true) {\n  if (!onlyDescendants && matches(element, KEYBOARD_FOCUSABLE_SELECTORS)) {\n    return element;\n  }\n\n  const allFocusable = element.querySelectorAll(KEYBOARD_FOCUSABLE_SELECTORS);\n  return allFocusable[allFocusable.length - 1];\n}\nfunction focusLastKeyboardFocusableNode(element, onlyDescendants = true) {\n  const lastFocusable = findLastKeyboardFocusableNode(element, onlyDescendants);\n\n  if (lastFocusable) {\n    lastFocusable.focus();\n    return true;\n  }\n\n  return false;\n}\n\nfunction matches(node, selector) {\n  if (node.matches) {\n    return node.matches(selector);\n  }\n\n  const matches = (node.ownerDocument || document).querySelectorAll(selector);\n  let i = matches.length;\n\n  while (--i >= 0 && matches.item(i) !== node) return i > -1;\n}\n\nexport { findFirstFocusableNode, findFirstFocusableNodeIncludingDisabled, findFirstKeyboardFocusableNode, findLastKeyboardFocusableNode, focusFirstFocusableNode, focusFirstKeyboardFocusableNode, focusLastKeyboardFocusableNode, focusNextFocusableNode, handleMouseUpByBlurring, nextFocusableNode };\n"]},"metadata":{},"sourceType":"module"}