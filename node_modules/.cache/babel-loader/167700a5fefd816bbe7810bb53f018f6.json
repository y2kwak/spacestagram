{"ast":null,"code":"import React$1 from 'react';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport styles from './Icon.scss.js';\nconst COLORS_WITH_BACKDROPS = ['base', 'critical', 'highlight', 'success', 'warning'];\n\nfunction Icon(_ref) {\n  let {\n    source,\n    color,\n    backdrop,\n    accessibilityLabel\n  } = _ref;\n  let sourceType;\n\n  if (typeof source === 'function') {\n    sourceType = 'function';\n  } else if (source === 'placeholder') {\n    sourceType = 'placeholder';\n  } else {\n    sourceType = 'external';\n  }\n\n  if (color && sourceType === 'external') {\n    // eslint-disable-next-line no-console\n    console.warn('Recoloring external SVGs is not supported. Set the intended color on your SVG instead.');\n  }\n\n  if (backdrop && color && !COLORS_WITH_BACKDROPS.includes(color)) {\n    // eslint-disable-next-line no-console\n    console.warn(`The ${color} variant does not have a supported backdrop color`);\n  }\n\n  const className = classNames(styles.Icon, color && styles[variationName('color', color)], color && styles.applyColor, backdrop && styles.hasBackdrop);\n  const SourceComponent = source;\n  const contentMarkup = {\n    function: /*#__PURE__*/React$1.createElement(SourceComponent, {\n      className: styles.Svg,\n      focusable: \"false\",\n      \"aria-hidden\": \"true\"\n    }),\n    placeholder: /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Placeholder\n    }),\n    external: /*#__PURE__*/React$1.createElement(\"img\", {\n      className: styles.Img,\n      src: `data:image/svg+xml;utf8,${source}`,\n      alt: \"\",\n      \"aria-hidden\": \"true\"\n    })\n  };\n  return /*#__PURE__*/React$1.createElement(\"span\", {\n    className: className,\n    \"aria-label\": accessibilityLabel\n  }, contentMarkup[sourceType]);\n}\n\nexport { Icon };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/Icon/Icon.js"],"names":["React$1","classNames","variationName","styles","COLORS_WITH_BACKDROPS","Icon","source","color","backdrop","accessibilityLabel","sourceType","console","warn","includes","className","applyColor","hasBackdrop","SourceComponent","contentMarkup","function","createElement","Svg","focusable","placeholder","Placeholder","external","Img","src","alt"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,wBAA1C;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,MAAMC,qBAAqB,GAAG,CAAC,MAAD,EAAS,UAAT,EAAqB,WAArB,EAAkC,SAAlC,EAA6C,SAA7C,CAA9B;;AACA,SAASC,IAAT,OAKG;AAAA,MALW;AACZC,IAAAA,MADY;AAEZC,IAAAA,KAFY;AAGZC,IAAAA,QAHY;AAIZC,IAAAA;AAJY,GAKX;AACD,MAAIC,UAAJ;;AAEA,MAAI,OAAOJ,MAAP,KAAkB,UAAtB,EAAkC;AAChCI,IAAAA,UAAU,GAAG,UAAb;AACD,GAFD,MAEO,IAAIJ,MAAM,KAAK,aAAf,EAA8B;AACnCI,IAAAA,UAAU,GAAG,aAAb;AACD,GAFM,MAEA;AACLA,IAAAA,UAAU,GAAG,UAAb;AACD;;AAED,MAAIH,KAAK,IAAIG,UAAU,KAAK,UAA5B,EAAwC;AACtC;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAa,wFAAb;AACD;;AAED,MAAIJ,QAAQ,IAAID,KAAZ,IAAqB,CAACH,qBAAqB,CAACS,QAAtB,CAA+BN,KAA/B,CAA1B,EAAiE;AAC/D;AACAI,IAAAA,OAAO,CAACC,IAAR,CAAc,OAAML,KAAM,mDAA1B;AACD;;AAED,QAAMO,SAAS,GAAGb,UAAU,CAACE,MAAM,CAACE,IAAR,EAAcE,KAAK,IAAIJ,MAAM,CAACD,aAAa,CAAC,OAAD,EAAUK,KAAV,CAAd,CAA7B,EAA8DA,KAAK,IAAIJ,MAAM,CAACY,UAA9E,EAA0FP,QAAQ,IAAIL,MAAM,CAACa,WAA7G,CAA5B;AACA,QAAMC,eAAe,GAAGX,MAAxB;AACA,QAAMY,aAAa,GAAG;AACpBC,IAAAA,QAAQ,EAAE,aAAanB,OAAO,CAACoB,aAAR,CAAsBH,eAAtB,EAAuC;AAC5DH,MAAAA,SAAS,EAAEX,MAAM,CAACkB,GAD0C;AAE5DC,MAAAA,SAAS,EAAE,OAFiD;AAG5D,qBAAe;AAH6C,KAAvC,CADH;AAMpBC,IAAAA,WAAW,EAAE,aAAavB,OAAO,CAACoB,aAAR,CAAsB,KAAtB,EAA6B;AACrDN,MAAAA,SAAS,EAAEX,MAAM,CAACqB;AADmC,KAA7B,CANN;AASpBC,IAAAA,QAAQ,EAAE,aAAazB,OAAO,CAACoB,aAAR,CAAsB,KAAtB,EAA6B;AAClDN,MAAAA,SAAS,EAAEX,MAAM,CAACuB,GADgC;AAElDC,MAAAA,GAAG,EAAG,2BAA0BrB,MAAO,EAFW;AAGlDsB,MAAAA,GAAG,EAAE,EAH6C;AAIlD,qBAAe;AAJmC,KAA7B;AATH,GAAtB;AAgBA,SAAO,aAAa5B,OAAO,CAACoB,aAAR,CAAsB,MAAtB,EAA8B;AAChDN,IAAAA,SAAS,EAAEA,SADqC;AAEhD,kBAAcL;AAFkC,GAA9B,EAGjBS,aAAa,CAACR,UAAD,CAHI,CAApB;AAID;;AAED,SAASL,IAAT","sourcesContent":["import React$1 from 'react';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport styles from './Icon.scss.js';\n\nconst COLORS_WITH_BACKDROPS = ['base', 'critical', 'highlight', 'success', 'warning'];\nfunction Icon({\n  source,\n  color,\n  backdrop,\n  accessibilityLabel\n}) {\n  let sourceType;\n\n  if (typeof source === 'function') {\n    sourceType = 'function';\n  } else if (source === 'placeholder') {\n    sourceType = 'placeholder';\n  } else {\n    sourceType = 'external';\n  }\n\n  if (color && sourceType === 'external') {\n    // eslint-disable-next-line no-console\n    console.warn('Recoloring external SVGs is not supported. Set the intended color on your SVG instead.');\n  }\n\n  if (backdrop && color && !COLORS_WITH_BACKDROPS.includes(color)) {\n    // eslint-disable-next-line no-console\n    console.warn(`The ${color} variant does not have a supported backdrop color`);\n  }\n\n  const className = classNames(styles.Icon, color && styles[variationName('color', color)], color && styles.applyColor, backdrop && styles.hasBackdrop);\n  const SourceComponent = source;\n  const contentMarkup = {\n    function: /*#__PURE__*/React$1.createElement(SourceComponent, {\n      className: styles.Svg,\n      focusable: \"false\",\n      \"aria-hidden\": \"true\"\n    }),\n    placeholder: /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Placeholder\n    }),\n    external: /*#__PURE__*/React$1.createElement(\"img\", {\n      className: styles.Img,\n      src: `data:image/svg+xml;utf8,${source}`,\n      alt: \"\",\n      \"aria-hidden\": \"true\"\n    })\n  };\n  return /*#__PURE__*/React$1.createElement(\"span\", {\n    className: className,\n    \"aria-label\": accessibilityLabel\n  }, contentMarkup[sourceType]);\n}\n\nexport { Icon };\n"]},"metadata":{},"sourceType":"module"}