{"ast":null,"code":"const MINUTE = 60;\nconst HOUR = MINUTE * 60;\n\nfunction ensureTwoDigits(num) {\n  return num > 9 ? String(num) : `0${num}`;\n}\n\nfunction secondsToTimeComponents(seconds) {\n  return {\n    hours: Math.floor(seconds / HOUR),\n    minutes: Math.floor(seconds % HOUR / MINUTE),\n    seconds: seconds % MINUTE\n  };\n}\n\nfunction secondsToTimestamp(numSeconds) {\n  const {\n    hours,\n    minutes,\n    seconds\n  } = secondsToTimeComponents(numSeconds);\n  const hasHours = numSeconds > HOUR;\n  const hoursText = hasHours ? `${hours}:` : '';\n  const minutesText = `${hasHours ? ensureTwoDigits(minutes) : minutes}:`;\n  const secondsText = `${ensureTwoDigits(seconds)}`;\n  return `${hoursText}${minutesText}${secondsText}`;\n}\n\nfunction secondsToDurationTranslationKey(numSeconds) {\n  const {\n    hours,\n    minutes,\n    seconds\n  } = secondsToTimeComponents(numSeconds);\n  let durationKey = 'Polaris.VideoThumbnail.playButtonA11yLabel.duration';\n\n  if (hours) {\n    durationKey += `.hours.${hours > 1 ? 'other' : 'one'}`;\n\n    if (seconds) {\n      if (minutes > 1) {\n        durationKey += `${seconds > 1 ? '.minutesAndSeconds' : '.minutesAndSecond'}`;\n      } else if (minutes === 1) {\n        durationKey += `${seconds > 1 ? '.minuteAndSeconds' : '.minuteAndSecond'}`;\n      } else {\n        durationKey += `${seconds > 1 ? '.andSeconds' : '.andSecond'}`;\n      }\n    } else if (minutes) {\n      durationKey += `${minutes > 1 ? '.andMinutes' : '.andMinute'}`;\n    } else {\n      durationKey += '.only';\n    }\n  } else if (minutes) {\n    durationKey += `.minutes.${minutes > 1 ? 'other' : 'one'}`;\n\n    if (seconds) {\n      durationKey += `${seconds > 1 ? '.andSeconds' : '.andSecond'}`;\n    } else {\n      durationKey += '.only';\n    }\n  } else if (seconds) {\n    durationKey += seconds > 1 ? '.seconds.other' : '.seconds.one';\n  }\n\n  return durationKey;\n}\n\nexport { ensureTwoDigits, secondsToDurationTranslationKey, secondsToTimeComponents, secondsToTimestamp };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/utilities/duration.js"],"names":["MINUTE","HOUR","ensureTwoDigits","num","String","secondsToTimeComponents","seconds","hours","Math","floor","minutes","secondsToTimestamp","numSeconds","hasHours","hoursText","minutesText","secondsText","secondsToDurationTranslationKey","durationKey"],"mappings":"AAAA,MAAMA,MAAM,GAAG,EAAf;AACA,MAAMC,IAAI,GAAGD,MAAM,GAAG,EAAtB;;AACA,SAASE,eAAT,CAAyBC,GAAzB,EAA8B;AAC5B,SAAOA,GAAG,GAAG,CAAN,GAAUC,MAAM,CAACD,GAAD,CAAhB,GAAyB,IAAGA,GAAI,EAAvC;AACD;;AACD,SAASE,uBAAT,CAAiCC,OAAjC,EAA0C;AACxC,SAAO;AACLC,IAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWH,OAAO,GAAGL,IAArB,CADF;AAELS,IAAAA,OAAO,EAAEF,IAAI,CAACC,KAAL,CAAWH,OAAO,GAAGL,IAAV,GAAiBD,MAA5B,CAFJ;AAGLM,IAAAA,OAAO,EAAEA,OAAO,GAAGN;AAHd,GAAP;AAKD;;AACD,SAASW,kBAAT,CAA4BC,UAA5B,EAAwC;AACtC,QAAM;AACJL,IAAAA,KADI;AAEJG,IAAAA,OAFI;AAGJJ,IAAAA;AAHI,MAIFD,uBAAuB,CAACO,UAAD,CAJ3B;AAKA,QAAMC,QAAQ,GAAGD,UAAU,GAAGX,IAA9B;AACA,QAAMa,SAAS,GAAGD,QAAQ,GAAI,GAAEN,KAAM,GAAZ,GAAiB,EAA3C;AACA,QAAMQ,WAAW,GAAI,GAAEF,QAAQ,GAAGX,eAAe,CAACQ,OAAD,CAAlB,GAA8BA,OAAQ,GAArE;AACA,QAAMM,WAAW,GAAI,GAAEd,eAAe,CAACI,OAAD,CAAU,EAAhD;AACA,SAAQ,GAAEQ,SAAU,GAAEC,WAAY,GAAEC,WAAY,EAAhD;AACD;;AACD,SAASC,+BAAT,CAAyCL,UAAzC,EAAqD;AACnD,QAAM;AACJL,IAAAA,KADI;AAEJG,IAAAA,OAFI;AAGJJ,IAAAA;AAHI,MAIFD,uBAAuB,CAACO,UAAD,CAJ3B;AAKA,MAAIM,WAAW,GAAG,qDAAlB;;AAEA,MAAIX,KAAJ,EAAW;AACTW,IAAAA,WAAW,IAAK,UAASX,KAAK,GAAG,CAAR,GAAY,OAAZ,GAAsB,KAAM,EAArD;;AAEA,QAAID,OAAJ,EAAa;AACX,UAAII,OAAO,GAAG,CAAd,EAAiB;AACfQ,QAAAA,WAAW,IAAK,GAAEZ,OAAO,GAAG,CAAV,GAAc,oBAAd,GAAqC,mBAAoB,EAA3E;AACD,OAFD,MAEO,IAAII,OAAO,KAAK,CAAhB,EAAmB;AACxBQ,QAAAA,WAAW,IAAK,GAAEZ,OAAO,GAAG,CAAV,GAAc,mBAAd,GAAoC,kBAAmB,EAAzE;AACD,OAFM,MAEA;AACLY,QAAAA,WAAW,IAAK,GAAEZ,OAAO,GAAG,CAAV,GAAc,aAAd,GAA8B,YAAa,EAA7D;AACD;AACF,KARD,MAQO,IAAII,OAAJ,EAAa;AAClBQ,MAAAA,WAAW,IAAK,GAAER,OAAO,GAAG,CAAV,GAAc,aAAd,GAA8B,YAAa,EAA7D;AACD,KAFM,MAEA;AACLQ,MAAAA,WAAW,IAAI,OAAf;AACD;AACF,GAhBD,MAgBO,IAAIR,OAAJ,EAAa;AAClBQ,IAAAA,WAAW,IAAK,YAAWR,OAAO,GAAG,CAAV,GAAc,OAAd,GAAwB,KAAM,EAAzD;;AAEA,QAAIJ,OAAJ,EAAa;AACXY,MAAAA,WAAW,IAAK,GAAEZ,OAAO,GAAG,CAAV,GAAc,aAAd,GAA8B,YAAa,EAA7D;AACD,KAFD,MAEO;AACLY,MAAAA,WAAW,IAAI,OAAf;AACD;AACF,GARM,MAQA,IAAIZ,OAAJ,EAAa;AAClBY,IAAAA,WAAW,IAAIZ,OAAO,GAAG,CAAV,GAAc,gBAAd,GAAiC,cAAhD;AACD;;AAED,SAAOY,WAAP;AACD;;AAED,SAAShB,eAAT,EAA0Be,+BAA1B,EAA2DZ,uBAA3D,EAAoFM,kBAApF","sourcesContent":["const MINUTE = 60;\nconst HOUR = MINUTE * 60;\nfunction ensureTwoDigits(num) {\n  return num > 9 ? String(num) : `0${num}`;\n}\nfunction secondsToTimeComponents(seconds) {\n  return {\n    hours: Math.floor(seconds / HOUR),\n    minutes: Math.floor(seconds % HOUR / MINUTE),\n    seconds: seconds % MINUTE\n  };\n}\nfunction secondsToTimestamp(numSeconds) {\n  const {\n    hours,\n    minutes,\n    seconds\n  } = secondsToTimeComponents(numSeconds);\n  const hasHours = numSeconds > HOUR;\n  const hoursText = hasHours ? `${hours}:` : '';\n  const minutesText = `${hasHours ? ensureTwoDigits(minutes) : minutes}:`;\n  const secondsText = `${ensureTwoDigits(seconds)}`;\n  return `${hoursText}${minutesText}${secondsText}`;\n}\nfunction secondsToDurationTranslationKey(numSeconds) {\n  const {\n    hours,\n    minutes,\n    seconds\n  } = secondsToTimeComponents(numSeconds);\n  let durationKey = 'Polaris.VideoThumbnail.playButtonA11yLabel.duration';\n\n  if (hours) {\n    durationKey += `.hours.${hours > 1 ? 'other' : 'one'}`;\n\n    if (seconds) {\n      if (minutes > 1) {\n        durationKey += `${seconds > 1 ? '.minutesAndSeconds' : '.minutesAndSecond'}`;\n      } else if (minutes === 1) {\n        durationKey += `${seconds > 1 ? '.minuteAndSeconds' : '.minuteAndSecond'}`;\n      } else {\n        durationKey += `${seconds > 1 ? '.andSeconds' : '.andSecond'}`;\n      }\n    } else if (minutes) {\n      durationKey += `${minutes > 1 ? '.andMinutes' : '.andMinute'}`;\n    } else {\n      durationKey += '.only';\n    }\n  } else if (minutes) {\n    durationKey += `.minutes.${minutes > 1 ? 'other' : 'one'}`;\n\n    if (seconds) {\n      durationKey += `${seconds > 1 ? '.andSeconds' : '.andSecond'}`;\n    } else {\n      durationKey += '.only';\n    }\n  } else if (seconds) {\n    durationKey += seconds > 1 ? '.seconds.other' : '.seconds.one';\n  }\n\n  return durationKey;\n}\n\nexport { ensureTwoDigits, secondsToDurationTranslationKey, secondsToTimeComponents, secondsToTimestamp };\n"]},"metadata":{},"sourceType":"module"}