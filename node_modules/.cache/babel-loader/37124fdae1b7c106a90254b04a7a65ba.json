{"ast":null,"code":"import React$1, { useCallback } from 'react';\nimport { classNames } from '../../../../utilities/css.js';\nimport { Scrollable as Scrollable$1 } from '../../../Scrollable/Scrollable.js';\nimport { useToggle as useToggle$1 } from '../../../../utilities/use-toggle.js';\nimport { Checkbox as Checkbox$1 } from '../Checkbox/Checkbox.js';\nimport styles from './Option.scss.js';\n\nvar _ref = /*#__PURE__*/React$1.createElement(Scrollable$1.ScrollTo, null);\n\nfunction Option(_ref2) {\n  let {\n    label,\n    value,\n    id,\n    select,\n    active,\n    allowMultiple,\n    disabled,\n    role,\n    media,\n    onClick,\n    section,\n    index\n  } = _ref2;\n  const {\n    value: focused,\n    toggle: toggleFocused\n  } = useToggle$1(false);\n  const handleClick = useCallback(() => {\n    if (disabled) {\n      return;\n    }\n\n    onClick(section, index);\n  }, [disabled, index, onClick, section]);\n  const mediaMarkup = media ? /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Media\n  }, media) : null;\n  const singleSelectClassName = classNames(styles.SingleSelectOption, focused && styles.focused, disabled && styles.disabled, select && styles.select, active && styles.active);\n  const multiSelectClassName = classNames(styles.Label, disabled && styles.disabled, active && styles.active, select && styles.select);\n  const checkBoxRole = role === 'option' ? 'presentation' : undefined;\n  const optionMarkup = allowMultiple ? /*#__PURE__*/React$1.createElement(\"label\", {\n    htmlFor: id,\n    className: multiSelectClassName\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Checkbox\n  }, /*#__PURE__*/React$1.createElement(Checkbox$1, {\n    id: id,\n    value: value,\n    checked: select,\n    active: active,\n    disabled: disabled,\n    onChange: handleClick,\n    role: checkBoxRole\n  })), mediaMarkup, label) : /*#__PURE__*/React$1.createElement(\"button\", {\n    id: id,\n    type: \"button\",\n    className: singleSelectClassName,\n    onClick: handleClick,\n    disabled: disabled,\n    onFocus: toggleFocused,\n    onBlur: toggleFocused,\n    \"aria-pressed\": active\n  }, mediaMarkup, label);\n  const scrollMarkup = active ? _ref : null;\n  return /*#__PURE__*/React$1.createElement(\"li\", {\n    key: id,\n    className: styles.Option,\n    tabIndex: -1\n  }, scrollMarkup, optionMarkup);\n}\n\nexport { Option };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/OptionList/components/Option/Option.js"],"names":["React$1","useCallback","classNames","Scrollable","Scrollable$1","useToggle","useToggle$1","Checkbox","Checkbox$1","styles","_ref","createElement","ScrollTo","Option","label","value","id","select","active","allowMultiple","disabled","role","media","onClick","section","index","focused","toggle","toggleFocused","handleClick","mediaMarkup","className","Media","singleSelectClassName","SingleSelectOption","multiSelectClassName","Label","checkBoxRole","undefined","optionMarkup","htmlFor","checked","onChange","type","onFocus","onBlur","scrollMarkup","key","tabIndex"],"mappings":"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","sourcesContent":["import React$1, { useCallback } from 'react';\nimport { classNames } from '../../../../utilities/css.js';\nimport { Scrollable as Scrollable$1 } from '../../../Scrollable/Scrollable.js';\nimport { useToggle as useToggle$1 } from '../../../../utilities/use-toggle.js';\nimport { Checkbox as Checkbox$1 } from '../Checkbox/Checkbox.js';\nimport styles from './Option.scss.js';\n\nvar _ref = /*#__PURE__*/React$1.createElement(Scrollable$1.ScrollTo, null);\n\nfunction Option({\n  label,\n  value,\n  id,\n  select,\n  active,\n  allowMultiple,\n  disabled,\n  role,\n  media,\n  onClick,\n  section,\n  index\n}) {\n  const {\n    value: focused,\n    toggle: toggleFocused\n  } = useToggle$1(false);\n  const handleClick = useCallback(() => {\n    if (disabled) {\n      return;\n    }\n\n    onClick(section, index);\n  }, [disabled, index, onClick, section]);\n  const mediaMarkup = media ? /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Media\n  }, media) : null;\n  const singleSelectClassName = classNames(styles.SingleSelectOption, focused && styles.focused, disabled && styles.disabled, select && styles.select, active && styles.active);\n  const multiSelectClassName = classNames(styles.Label, disabled && styles.disabled, active && styles.active, select && styles.select);\n  const checkBoxRole = role === 'option' ? 'presentation' : undefined;\n  const optionMarkup = allowMultiple ? /*#__PURE__*/React$1.createElement(\"label\", {\n    htmlFor: id,\n    className: multiSelectClassName\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Checkbox\n  }, /*#__PURE__*/React$1.createElement(Checkbox$1, {\n    id: id,\n    value: value,\n    checked: select,\n    active: active,\n    disabled: disabled,\n    onChange: handleClick,\n    role: checkBoxRole\n  })), mediaMarkup, label) : /*#__PURE__*/React$1.createElement(\"button\", {\n    id: id,\n    type: \"button\",\n    className: singleSelectClassName,\n    onClick: handleClick,\n    disabled: disabled,\n    onFocus: toggleFocused,\n    onBlur: toggleFocused,\n    \"aria-pressed\": active\n  }, mediaMarkup, label);\n  const scrollMarkup = active ? _ref : null;\n  return /*#__PURE__*/React$1.createElement(\"li\", {\n    key: id,\n    className: styles.Option,\n    tabIndex: -1\n  }, scrollMarkup, optionMarkup);\n}\n\nexport { Option };\n"]},"metadata":{},"sourceType":"module"}