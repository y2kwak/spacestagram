{"ast":null,"code":"import React$1, { useContext } from 'react';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport { VisuallyHidden as VisuallyHidden$1 } from '../VisuallyHidden/VisuallyHidden.js';\nimport { WithinFilterContext } from '../../utilities/within-filter-context.js';\nimport styles from './Badge.scss.js';\nconst PROGRESS_LABELS = {\n  incomplete: 'incomplete',\n  partiallyComplete: 'partiallyComplete',\n  complete: 'complete'\n};\nconst STATUS_LABELS = {\n  info: 'info',\n  success: 'success',\n  warning: 'warning',\n  critical: 'critical',\n  attention: 'attention',\n  new: 'new'\n};\nconst DEFAULT_SIZE = 'medium';\n\nfunction Badge(_ref) {\n  let {\n    children,\n    status,\n    progress,\n    size = DEFAULT_SIZE,\n    statusAndProgressLabelOverride\n  } = _ref;\n  const i18n = useI18n();\n  const withinFilter = useContext(WithinFilterContext);\n  const className = classNames(styles.Badge, status && styles[variationName('status', status)], progress && styles[variationName('progress', progress)], size && size !== DEFAULT_SIZE && styles[variationName('size', size)], withinFilter && styles.withinFilter);\n  let progressLabel = '';\n\n  switch (progress) {\n    case PROGRESS_LABELS.incomplete:\n      progressLabel = i18n.translate('Polaris.Badge.PROGRESS_LABELS.incomplete');\n      break;\n\n    case PROGRESS_LABELS.partiallyComplete:\n      progressLabel = i18n.translate('Polaris.Badge.PROGRESS_LABELS.partiallyComplete');\n      break;\n\n    case PROGRESS_LABELS.complete:\n      progressLabel = i18n.translate('Polaris.Badge.PROGRESS_LABELS.complete');\n      break;\n  }\n\n  let statusLabel = '';\n\n  switch (status) {\n    case STATUS_LABELS.info:\n      statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.info');\n      break;\n\n    case STATUS_LABELS.success:\n      statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.success');\n      break;\n\n    case STATUS_LABELS.warning:\n      statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.warning');\n      break;\n\n    case STATUS_LABELS.critical:\n      statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.critical');\n      break;\n\n    case STATUS_LABELS.attention:\n      statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.attention');\n      break;\n\n    case STATUS_LABELS.new:\n      statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.new');\n      break;\n  }\n\n  const accessibilityLabel = statusAndProgressLabelOverride ? statusAndProgressLabelOverride : i18n.translate('Polaris.Badge.progressAndStatus', {\n    progressLabel,\n    statusLabel\n  });\n  const hasAccessibilityLabel = progressLabel || statusLabel || statusAndProgressLabelOverride;\n  let accessibilityMarkup = hasAccessibilityLabel && /*#__PURE__*/React$1.createElement(VisuallyHidden$1, null, accessibilityLabel);\n\n  if (progressLabel) {\n    accessibilityMarkup = /*#__PURE__*/React$1.createElement(\"span\", {\n      className: styles.Pip\n    }, accessibilityMarkup);\n  }\n\n  return /*#__PURE__*/React$1.createElement(\"span\", {\n    className: className\n  }, accessibilityMarkup, children);\n}\n\nexport { Badge };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/Badge/Badge.js"],"names":["React$1","useContext","useI18n","classNames","variationName","VisuallyHidden","VisuallyHidden$1","WithinFilterContext","styles","PROGRESS_LABELS","incomplete","partiallyComplete","complete","STATUS_LABELS","info","success","warning","critical","attention","new","DEFAULT_SIZE","Badge","children","status","progress","size","statusAndProgressLabelOverride","i18n","withinFilter","className","progressLabel","translate","statusLabel","accessibilityLabel","hasAccessibilityLabel","accessibilityMarkup","createElement","Pip"],"mappings":"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","sourcesContent":["import React$1, { useContext } from 'react';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport { VisuallyHidden as VisuallyHidden$1 } from '../VisuallyHidden/VisuallyHidden.js';\nimport { WithinFilterContext } from '../../utilities/within-filter-context.js';\nimport styles from './Badge.scss.js';\n\nconst PROGRESS_LABELS = {\n  incomplete: 'incomplete',\n  partiallyComplete: 'partiallyComplete',\n  complete: 'complete'\n};\nconst STATUS_LABELS = {\n  info: 'info',\n  success: 'success',\n  warning: 'warning',\n  critical: 'critical',\n  attention: 'attention',\n  new: 'new'\n};\nconst DEFAULT_SIZE = 'medium';\nfunction Badge({\n  children,\n  status,\n  progress,\n  size = DEFAULT_SIZE,\n  statusAndProgressLabelOverride\n}) {\n  const i18n = useI18n();\n  const withinFilter = useContext(WithinFilterContext);\n  const className = classNames(styles.Badge, status && styles[variationName('status', status)], progress && styles[variationName('progress', progress)], size && size !== DEFAULT_SIZE && styles[variationName('size', size)], withinFilter && styles.withinFilter);\n  let progressLabel = '';\n\n  switch (progress) {\n    case PROGRESS_LABELS.incomplete:\n      progressLabel = i18n.translate('Polaris.Badge.PROGRESS_LABELS.incomplete');\n      break;\n\n    case PROGRESS_LABELS.partiallyComplete:\n      progressLabel = i18n.translate('Polaris.Badge.PROGRESS_LABELS.partiallyComplete');\n      break;\n\n    case PROGRESS_LABELS.complete:\n      progressLabel = i18n.translate('Polaris.Badge.PROGRESS_LABELS.complete');\n      break;\n  }\n\n  let statusLabel = '';\n\n  switch (status) {\n    case STATUS_LABELS.info:\n      statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.info');\n      break;\n\n    case STATUS_LABELS.success:\n      statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.success');\n      break;\n\n    case STATUS_LABELS.warning:\n      statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.warning');\n      break;\n\n    case STATUS_LABELS.critical:\n      statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.critical');\n      break;\n\n    case STATUS_LABELS.attention:\n      statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.attention');\n      break;\n\n    case STATUS_LABELS.new:\n      statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.new');\n      break;\n  }\n\n  const accessibilityLabel = statusAndProgressLabelOverride ? statusAndProgressLabelOverride : i18n.translate('Polaris.Badge.progressAndStatus', {\n    progressLabel,\n    statusLabel\n  });\n  const hasAccessibilityLabel = progressLabel || statusLabel || statusAndProgressLabelOverride;\n  let accessibilityMarkup = hasAccessibilityLabel && /*#__PURE__*/React$1.createElement(VisuallyHidden$1, null, accessibilityLabel);\n\n  if (progressLabel) {\n    accessibilityMarkup = /*#__PURE__*/React$1.createElement(\"span\", {\n      className: styles.Pip\n    }, accessibilityMarkup);\n  }\n\n  return /*#__PURE__*/React$1.createElement(\"span\", {\n    className: className\n  }, accessibilityMarkup, children);\n}\n\nexport { Badge };\n"]},"metadata":{},"sourceType":"module"}