{"ast":null,"code":"import React$1, { useState, useMemo } from 'react';\nimport { PortalsManagerContext } from '../../utilities/portals/context.js';\nimport { PortalsContainer as PortalsContainer$1 } from './components/PortalsContainer/PortalsContainer.js';\n\nfunction PortalsManager(_ref) {\n  let {\n    children,\n    container\n  } = _ref;\n  const [portalContainerElement, setPortalContainerElement] = useState(null);\n  const currentContainer = container != null ? container : portalContainerElement;\n  const contextValue = useMemo(() => ({\n    container: currentContainer\n  }), [currentContainer]);\n  return /*#__PURE__*/React$1.createElement(PortalsManagerContext.Provider, {\n    value: contextValue\n  }, children, container ? null : /*#__PURE__*/React$1.createElement(PortalsContainer$1, {\n    ref: setPortalContainerElement\n  }));\n}\n\nexport { PortalsManager };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/PortalsManager/PortalsManager.js"],"names":["React$1","useState","useMemo","PortalsManagerContext","PortalsContainer","PortalsContainer$1","PortalsManager","children","container","portalContainerElement","setPortalContainerElement","currentContainer","contextValue","createElement","Provider","value","ref"],"mappings":"AAAA,OAAOA,OAAP,IAAkBC,QAAlB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,SAASC,qBAAT,QAAsC,oCAAtC;AACA,SAASC,gBAAgB,IAAIC,kBAA7B,QAAuD,mDAAvD;;AAEA,SAASC,cAAT,OAGG;AAAA,MAHqB;AACtBC,IAAAA,QADsB;AAEtBC,IAAAA;AAFsB,GAGrB;AACD,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDT,QAAQ,CAAC,IAAD,CAApE;AACA,QAAMU,gBAAgB,GAAGH,SAAS,IAAI,IAAb,GAAoBA,SAApB,GAAgCC,sBAAzD;AACA,QAAMG,YAAY,GAAGV,OAAO,CAAC,OAAO;AAClCM,IAAAA,SAAS,EAAEG;AADuB,GAAP,CAAD,EAExB,CAACA,gBAAD,CAFwB,CAA5B;AAGA,SAAO,aAAaX,OAAO,CAACa,aAAR,CAAsBV,qBAAqB,CAACW,QAA5C,EAAsD;AACxEC,IAAAA,KAAK,EAAEH;AADiE,GAAtD,EAEjBL,QAFiB,EAEPC,SAAS,GAAG,IAAH,GAAU,aAAaR,OAAO,CAACa,aAAR,CAAsBR,kBAAtB,EAA0C;AACrFW,IAAAA,GAAG,EAAEN;AADgF,GAA1C,CAFzB,CAApB;AAKD;;AAED,SAASJ,cAAT","sourcesContent":["import React$1, { useState, useMemo } from 'react';\nimport { PortalsManagerContext } from '../../utilities/portals/context.js';\nimport { PortalsContainer as PortalsContainer$1 } from './components/PortalsContainer/PortalsContainer.js';\n\nfunction PortalsManager({\n  children,\n  container\n}) {\n  const [portalContainerElement, setPortalContainerElement] = useState(null);\n  const currentContainer = container != null ? container : portalContainerElement;\n  const contextValue = useMemo(() => ({\n    container: currentContainer\n  }), [currentContainer]);\n  return /*#__PURE__*/React$1.createElement(PortalsManagerContext.Provider, {\n    value: contextValue\n  }, children, container ? null : /*#__PURE__*/React$1.createElement(PortalsContainer$1, {\n    ref: setPortalContainerElement\n  }));\n}\n\nexport { PortalsManager };\n"]},"metadata":{},"sourceType":"module"}