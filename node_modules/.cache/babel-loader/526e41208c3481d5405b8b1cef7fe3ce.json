{"ast":null,"code":"import React$1 from 'react';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { classNames } from '../../utilities/css.js';\nimport { errorTextID, InlineError as InlineError$1 } from '../InlineError/InlineError.js';\nimport { Checkbox as Checkbox$1 } from '../Checkbox/Checkbox.js';\nimport { RadioButton as RadioButton$1 } from '../RadioButton/RadioButton.js';\nimport styles from './ChoiceList.scss.js';\n\nfunction ChoiceList(_ref) {\n  let {\n    title,\n    titleHidden,\n    allowMultiple,\n    choices,\n    selected,\n    onChange = noop,\n    error,\n    disabled = false,\n    name: nameProp\n  } = _ref;\n  // Type asserting to any is required for TS3.2 but can be removed when we update to 3.3\n  // see https://github.com/Microsoft/TypeScript/issues/28768\n  const ControlComponent = allowMultiple ? Checkbox$1 : RadioButton$1;\n  const name = useUniqueId('ChoiceList', nameProp);\n  const finalName = allowMultiple ? `${name}[]` : name;\n  const className = classNames(styles.ChoiceList, titleHidden && styles.titleHidden);\n  const titleMarkup = title ? /*#__PURE__*/React$1.createElement(\"legend\", {\n    className: styles.Title\n  }, title) : null;\n  const choicesMarkup = choices.map(choice => {\n    const {\n      value,\n      label,\n      helpText,\n      disabled: choiceDisabled,\n      describedByError\n    } = choice;\n\n    function handleChange(checked) {\n      onChange(updateSelectedChoices(choice, checked, selected, allowMultiple), name);\n    }\n\n    const isSelected = choiceIsSelected(choice, selected);\n    const renderedChildren = choice.renderChildren ? choice.renderChildren(isSelected) : null;\n    const children = renderedChildren ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.ChoiceChildren\n    }, renderedChildren) : null;\n    return /*#__PURE__*/React$1.createElement(\"li\", {\n      key: value\n    }, /*#__PURE__*/React$1.createElement(ControlComponent, {\n      name: finalName,\n      value: value,\n      label: label,\n      disabled: choiceDisabled || disabled,\n      checked: choiceIsSelected(choice, selected),\n      helpText: helpText,\n      onChange: handleChange,\n      ariaDescribedBy: error && describedByError ? errorTextID(finalName) : null\n    }), children);\n  });\n  const errorMarkup = error && /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.ChoiceError\n  }, /*#__PURE__*/React$1.createElement(InlineError$1, {\n    message: error,\n    fieldID: finalName\n  }));\n  return /*#__PURE__*/React$1.createElement(\"fieldset\", {\n    className: className,\n    id: finalName,\n    \"aria-invalid\": error != null\n  }, titleMarkup, /*#__PURE__*/React$1.createElement(\"ul\", {\n    className: styles.Choices\n  }, choicesMarkup), errorMarkup);\n}\n\nfunction noop() {}\n\nfunction choiceIsSelected(_ref2, selected) {\n  let {\n    value\n  } = _ref2;\n  return selected.includes(value);\n}\n\nfunction updateSelectedChoices(_ref3, checked, selected) {\n  let {\n    value\n  } = _ref3;\n  let allowMultiple = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  if (checked) {\n    return allowMultiple ? [...selected, value] : [value];\n  }\n\n  return selected.filter(selectedChoice => selectedChoice !== value);\n}\n\nexport { ChoiceList };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/ChoiceList/ChoiceList.js"],"names":["React$1","useUniqueId","classNames","errorTextID","InlineError","InlineError$1","Checkbox","Checkbox$1","RadioButton","RadioButton$1","styles","ChoiceList","title","titleHidden","allowMultiple","choices","selected","onChange","noop","error","disabled","name","nameProp","ControlComponent","finalName","className","titleMarkup","createElement","Title","choicesMarkup","map","choice","value","label","helpText","choiceDisabled","describedByError","handleChange","checked","updateSelectedChoices","isSelected","choiceIsSelected","renderedChildren","renderChildren","children","ChoiceChildren","key","ariaDescribedBy","errorMarkup","ChoiceError","message","fieldID","id","Choices","includes","filter","selectedChoice"],"mappings":"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","sourcesContent":["import React$1 from 'react';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { classNames } from '../../utilities/css.js';\nimport { errorTextID, InlineError as InlineError$1 } from '../InlineError/InlineError.js';\nimport { Checkbox as Checkbox$1 } from '../Checkbox/Checkbox.js';\nimport { RadioButton as RadioButton$1 } from '../RadioButton/RadioButton.js';\nimport styles from './ChoiceList.scss.js';\n\nfunction ChoiceList({\n  title,\n  titleHidden,\n  allowMultiple,\n  choices,\n  selected,\n  onChange = noop,\n  error,\n  disabled = false,\n  name: nameProp\n}) {\n  // Type asserting to any is required for TS3.2 but can be removed when we update to 3.3\n  // see https://github.com/Microsoft/TypeScript/issues/28768\n  const ControlComponent = allowMultiple ? Checkbox$1 : RadioButton$1;\n  const name = useUniqueId('ChoiceList', nameProp);\n  const finalName = allowMultiple ? `${name}[]` : name;\n  const className = classNames(styles.ChoiceList, titleHidden && styles.titleHidden);\n  const titleMarkup = title ? /*#__PURE__*/React$1.createElement(\"legend\", {\n    className: styles.Title\n  }, title) : null;\n  const choicesMarkup = choices.map(choice => {\n    const {\n      value,\n      label,\n      helpText,\n      disabled: choiceDisabled,\n      describedByError\n    } = choice;\n\n    function handleChange(checked) {\n      onChange(updateSelectedChoices(choice, checked, selected, allowMultiple), name);\n    }\n\n    const isSelected = choiceIsSelected(choice, selected);\n    const renderedChildren = choice.renderChildren ? choice.renderChildren(isSelected) : null;\n    const children = renderedChildren ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.ChoiceChildren\n    }, renderedChildren) : null;\n    return /*#__PURE__*/React$1.createElement(\"li\", {\n      key: value\n    }, /*#__PURE__*/React$1.createElement(ControlComponent, {\n      name: finalName,\n      value: value,\n      label: label,\n      disabled: choiceDisabled || disabled,\n      checked: choiceIsSelected(choice, selected),\n      helpText: helpText,\n      onChange: handleChange,\n      ariaDescribedBy: error && describedByError ? errorTextID(finalName) : null\n    }), children);\n  });\n  const errorMarkup = error && /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.ChoiceError\n  }, /*#__PURE__*/React$1.createElement(InlineError$1, {\n    message: error,\n    fieldID: finalName\n  }));\n  return /*#__PURE__*/React$1.createElement(\"fieldset\", {\n    className: className,\n    id: finalName,\n    \"aria-invalid\": error != null\n  }, titleMarkup, /*#__PURE__*/React$1.createElement(\"ul\", {\n    className: styles.Choices\n  }, choicesMarkup), errorMarkup);\n}\n\nfunction noop() {}\n\nfunction choiceIsSelected({\n  value\n}, selected) {\n  return selected.includes(value);\n}\n\nfunction updateSelectedChoices({\n  value\n}, checked, selected, allowMultiple = false) {\n  if (checked) {\n    return allowMultiple ? [...selected, value] : [value];\n  }\n\n  return selected.filter(selectedChoice => selectedChoice !== value);\n}\n\nexport { ChoiceList };\n"]},"metadata":{},"sourceType":"module"}