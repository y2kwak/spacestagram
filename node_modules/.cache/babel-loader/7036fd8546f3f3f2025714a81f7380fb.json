{"ast":null,"code":"import React$1, { useContext, useCallback } from 'react';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { SearchMinor } from '@shopify/polaris-icons';\nimport { Icon as Icon$1 } from '../../../Icon/Icon.js';\nimport { buttonsFrom } from '../../../Button/utils.js';\nimport { TextField } from '../../../TextField/TextField.js';\nimport { ResourceListContext } from '../../../../utilities/resource-list/context.js';\nimport { Tag as Tag$1 } from '../../../Tag/Tag.js';\nimport { FormLayout as FormLayout$1 } from '../../../FormLayout/FormLayout.js';\nimport { FilterType } from './types.js';\nimport { FilterCreator as FilterCreator$1 } from './components/FilterCreator/FilterCreator.js';\nimport styles from './FilterControl.scss.js';\n\nvar _ref = /*#__PURE__*/React$1.createElement(Icon$1, {\n  source: SearchMinor,\n  color: \"subdued\"\n});\n/** @deprecated This is a private component, do not use it. This component might be removed in a minor version update. Use <Filters /> instead. */\n\n\nfunction FilterControl(_ref2) {\n  let {\n    searchValue,\n    appliedFilters = [],\n    additionalAction,\n    focused = false,\n    filters = [],\n    placeholder,\n    onSearchBlur,\n    onSearchChange,\n    onFiltersChange\n  } = _ref2;\n  // eslint-disable-next-line no-console\n  console.warn('Deprecation: <FilterControl /> is deprecated. This is a private component, do not use it. This component might be removed in a minor version update. Use <Filters /> instead.');\n  const i18n = useI18n();\n  const {\n    selectMode,\n    resourceName\n  } = useContext(ResourceListContext);\n  const filterResourceName = resourceName || {\n    singular: i18n.translate('Polaris.ResourceList.defaultItemSingular'),\n    plural: i18n.translate('Polaris.ResourceList.defaultItemPlural')\n  };\n  const handleAddFilter = useCallback(newFilter => {\n    if (!onFiltersChange) {\n      return;\n    }\n\n    const foundFilter = appliedFilters.find(appliedFilter => idFromFilter(appliedFilter) === idFromFilter(newFilter));\n\n    if (foundFilter) {\n      return;\n    }\n\n    const newAppliedFilters = [...appliedFilters, newFilter];\n    onFiltersChange(newAppliedFilters);\n  }, [onFiltersChange, appliedFilters]);\n  const handleRemoveFilter = useCallback(filterId => {\n    if (!onFiltersChange) {\n      return;\n    }\n\n    const foundIndex = appliedFilters.findIndex(appliedFilter => idFromFilter(appliedFilter) === filterId);\n    const newAppliedFilters = foundIndex >= 0 ? [...appliedFilters.slice(0, foundIndex), ...appliedFilters.slice(foundIndex + 1, appliedFilters.length)] : [...appliedFilters];\n    onFiltersChange(newAppliedFilters);\n  }, [appliedFilters, onFiltersChange]);\n  const getRemoveFilterCallback = useCallback(filterId => {\n    return () => {\n      handleRemoveFilter(filterId);\n    };\n  }, [handleRemoveFilter]);\n  const textFieldLabel = placeholder ? placeholder : i18n.translate('Polaris.ResourceList.FilterControl.textFieldLabel', {\n    resourceNamePlural: filterResourceName.plural.toLocaleLowerCase()\n  });\n\n  if (additionalAction) {\n    additionalAction.disabled = selectMode;\n  }\n\n  const additionalActionButton = additionalAction && buttonsFrom(additionalAction) || null;\n  const filterCreatorMarkup = filters.length > 0 ? /*#__PURE__*/React$1.createElement(FilterCreator$1, {\n    resourceName: filterResourceName,\n    filters: filters,\n    onAddFilter: handleAddFilter,\n    disabled: selectMode\n  }) : null;\n  const appliedFiltersMarkup = appliedFilters.map(appliedFilter => {\n    const activeFilterLabel = getFilterLabel(appliedFilter);\n    const filterId = idFromFilter(appliedFilter);\n    return /*#__PURE__*/React$1.createElement(\"li\", {\n      className: styles.AppliedFilter,\n      key: filterId\n    }, /*#__PURE__*/React$1.createElement(Tag$1, {\n      onRemove: getRemoveFilterCallback(filterId),\n      disabled: selectMode\n    }, activeFilterLabel));\n  });\n  const appliedFiltersWrapper = appliedFilters.length > 0 ? /*#__PURE__*/React$1.createElement(\"ul\", {\n    className: styles.AppliedFilters\n  }, appliedFiltersMarkup) : null;\n  return /*#__PURE__*/React$1.createElement(FormLayout$1, null, /*#__PURE__*/React$1.createElement(TextField, {\n    connectedLeft: filterCreatorMarkup,\n    connectedRight: additionalActionButton,\n    label: textFieldLabel,\n    labelHidden: true,\n    placeholder: textFieldLabel,\n    prefix: _ref,\n    value: searchValue,\n    onChange: onSearchChange,\n    onBlur: onSearchBlur,\n    focused: focused,\n    disabled: selectMode\n  }), appliedFiltersWrapper);\n\n  function getFilterLabel(appliedFilter) {\n    const {\n      key,\n      value,\n      label\n    } = appliedFilter;\n\n    if (label) {\n      return label;\n    }\n\n    const filter = filters.find(filter => {\n      const {\n        minKey,\n        maxKey,\n        operatorText\n      } = filter;\n\n      if (minKey || maxKey) {\n        return filter.key === key || minKey === key || maxKey === key;\n      }\n\n      if (operatorText && typeof operatorText !== 'string') {\n        return filter.key === key || operatorText.filter(_ref3 => {\n          let {\n            key: operatorKey\n          } = _ref3;\n          return operatorKey === key;\n        }).length === 1;\n      }\n\n      return filter.key === key;\n    });\n\n    if (!filter) {\n      return value;\n    }\n\n    const filterOperatorLabel = findOperatorLabel(filter, appliedFilter);\n    const filterLabelByType = findFilterLabelByType(filter, appliedFilter);\n\n    if (!filterOperatorLabel) {\n      return `${filter.label} ${filterLabelByType}`;\n    }\n\n    return `${filter.label} ${filterOperatorLabel} ${filterLabelByType}`;\n  }\n\n  function findFilterLabelByType(filter, appliedFilter) {\n    const {\n      value: appliedFilterValue\n    } = appliedFilter;\n\n    if (filter.type === FilterType.Select) {\n      const foundFilterOption = filter.options.find(option => typeof option === 'string' ? option === appliedFilterValue : option.value === appliedFilterValue);\n\n      if (foundFilterOption) {\n        return typeof foundFilterOption === 'string' ? foundFilterOption : foundFilterOption.label;\n      }\n    }\n\n    if (filter.type === FilterType.DateSelector) {\n      if (filter.key === appliedFilter.key) {\n        const filterLabelKey = `Polaris.ResourceList.DateSelector.FilterLabelForValue.${appliedFilter.value}`;\n        return i18n.translationKeyExists(filterLabelKey) ? i18n.translate(filterLabelKey) : appliedFilter.value;\n      }\n\n      if (appliedFilter.key === filter.maxKey) {\n        return i18n.translate('Polaris.ResourceList.DateSelector.FilterLabelForValue.on_or_before', {\n          date: formatDateForLabelDisplay(appliedFilter.value)\n        });\n      }\n\n      if (appliedFilter.key === filter.minKey) {\n        return i18n.translate('Polaris.ResourceList.DateSelector.FilterLabelForValue.on_or_after', {\n          date: formatDateForLabelDisplay(appliedFilter.value)\n        });\n      }\n    }\n\n    return appliedFilterValue;\n  }\n}\n\nfunction idFromFilter(appliedFilter) {\n  return `${appliedFilter.key}-${appliedFilter.value}`;\n}\n\nfunction formatDateForLabelDisplay(date) {\n  if (isNaN(new Date(date).getTime())) {\n    return date;\n  }\n\n  return new Date(date.replace(/-/g, '/')).toLocaleDateString();\n}\n\nfunction findOperatorLabel(filter, appliedFilter) {\n  const {\n    operatorText\n  } = filter;\n\n  if (filter.type === FilterType.DateSelector && (appliedFilter.key === filter.minKey || appliedFilter.key === filter.maxKey)) {\n    return '';\n  }\n\n  if (!operatorText || typeof operatorText === 'string') {\n    return operatorText;\n  }\n\n  const appliedOperator = operatorText.find(operator => {\n    return operator.key === appliedFilter.key;\n  });\n\n  if (appliedOperator) {\n    return appliedOperator.filterLabel || appliedOperator.optionLabel;\n  }\n}\n\nexport { FilterControl };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/ResourceList/components/FilterControl/FilterControl.js"],"names":["React$1","useContext","useCallback","useI18n","SearchMinor","Icon","Icon$1","buttonsFrom","TextField","ResourceListContext","Tag","Tag$1","FormLayout","FormLayout$1","FilterType","FilterCreator","FilterCreator$1","styles","_ref","createElement","source","color","FilterControl","searchValue","appliedFilters","additionalAction","focused","filters","placeholder","onSearchBlur","onSearchChange","onFiltersChange","console","warn","i18n","selectMode","resourceName","filterResourceName","singular","translate","plural","handleAddFilter","newFilter","foundFilter","find","appliedFilter","idFromFilter","newAppliedFilters","handleRemoveFilter","filterId","foundIndex","findIndex","slice","length","getRemoveFilterCallback","textFieldLabel","resourceNamePlural","toLocaleLowerCase","disabled","additionalActionButton","filterCreatorMarkup","onAddFilter","appliedFiltersMarkup","map","activeFilterLabel","getFilterLabel","className","AppliedFilter","key","onRemove","appliedFiltersWrapper","AppliedFilters","connectedLeft","connectedRight","label","labelHidden","prefix","value","onChange","onBlur","filter","minKey","maxKey","operatorText","operatorKey","filterOperatorLabel","findOperatorLabel","filterLabelByType","findFilterLabelByType","appliedFilterValue","type","Select","foundFilterOption","options","option","DateSelector","filterLabelKey","translationKeyExists","date","formatDateForLabelDisplay","isNaN","Date","getTime","replace","toLocaleDateString","appliedOperator","operator","filterLabel","optionLabel"],"mappings":"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","sourcesContent":["import React$1, { useContext, useCallback } from 'react';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { SearchMinor } from '@shopify/polaris-icons';\nimport { Icon as Icon$1 } from '../../../Icon/Icon.js';\nimport { buttonsFrom } from '../../../Button/utils.js';\nimport { TextField } from '../../../TextField/TextField.js';\nimport { ResourceListContext } from '../../../../utilities/resource-list/context.js';\nimport { Tag as Tag$1 } from '../../../Tag/Tag.js';\nimport { FormLayout as FormLayout$1 } from '../../../FormLayout/FormLayout.js';\nimport { FilterType } from './types.js';\nimport { FilterCreator as FilterCreator$1 } from './components/FilterCreator/FilterCreator.js';\nimport styles from './FilterControl.scss.js';\n\nvar _ref = /*#__PURE__*/React$1.createElement(Icon$1, {\n  source: SearchMinor,\n  color: \"subdued\"\n});\n\n/** @deprecated This is a private component, do not use it. This component might be removed in a minor version update. Use <Filters /> instead. */\nfunction FilterControl({\n  searchValue,\n  appliedFilters = [],\n  additionalAction,\n  focused = false,\n  filters = [],\n  placeholder,\n  onSearchBlur,\n  onSearchChange,\n  onFiltersChange\n}) {\n  // eslint-disable-next-line no-console\n  console.warn('Deprecation: <FilterControl /> is deprecated. This is a private component, do not use it. This component might be removed in a minor version update. Use <Filters /> instead.');\n  const i18n = useI18n();\n  const {\n    selectMode,\n    resourceName\n  } = useContext(ResourceListContext);\n  const filterResourceName = resourceName || {\n    singular: i18n.translate('Polaris.ResourceList.defaultItemSingular'),\n    plural: i18n.translate('Polaris.ResourceList.defaultItemPlural')\n  };\n  const handleAddFilter = useCallback(newFilter => {\n    if (!onFiltersChange) {\n      return;\n    }\n\n    const foundFilter = appliedFilters.find(appliedFilter => idFromFilter(appliedFilter) === idFromFilter(newFilter));\n\n    if (foundFilter) {\n      return;\n    }\n\n    const newAppliedFilters = [...appliedFilters, newFilter];\n    onFiltersChange(newAppliedFilters);\n  }, [onFiltersChange, appliedFilters]);\n  const handleRemoveFilter = useCallback(filterId => {\n    if (!onFiltersChange) {\n      return;\n    }\n\n    const foundIndex = appliedFilters.findIndex(appliedFilter => idFromFilter(appliedFilter) === filterId);\n    const newAppliedFilters = foundIndex >= 0 ? [...appliedFilters.slice(0, foundIndex), ...appliedFilters.slice(foundIndex + 1, appliedFilters.length)] : [...appliedFilters];\n    onFiltersChange(newAppliedFilters);\n  }, [appliedFilters, onFiltersChange]);\n  const getRemoveFilterCallback = useCallback(filterId => {\n    return () => {\n      handleRemoveFilter(filterId);\n    };\n  }, [handleRemoveFilter]);\n  const textFieldLabel = placeholder ? placeholder : i18n.translate('Polaris.ResourceList.FilterControl.textFieldLabel', {\n    resourceNamePlural: filterResourceName.plural.toLocaleLowerCase()\n  });\n\n  if (additionalAction) {\n    additionalAction.disabled = selectMode;\n  }\n\n  const additionalActionButton = additionalAction && buttonsFrom(additionalAction) || null;\n  const filterCreatorMarkup = filters.length > 0 ? /*#__PURE__*/React$1.createElement(FilterCreator$1, {\n    resourceName: filterResourceName,\n    filters: filters,\n    onAddFilter: handleAddFilter,\n    disabled: selectMode\n  }) : null;\n  const appliedFiltersMarkup = appliedFilters.map(appliedFilter => {\n    const activeFilterLabel = getFilterLabel(appliedFilter);\n    const filterId = idFromFilter(appliedFilter);\n    return /*#__PURE__*/React$1.createElement(\"li\", {\n      className: styles.AppliedFilter,\n      key: filterId\n    }, /*#__PURE__*/React$1.createElement(Tag$1, {\n      onRemove: getRemoveFilterCallback(filterId),\n      disabled: selectMode\n    }, activeFilterLabel));\n  });\n  const appliedFiltersWrapper = appliedFilters.length > 0 ? /*#__PURE__*/React$1.createElement(\"ul\", {\n    className: styles.AppliedFilters\n  }, appliedFiltersMarkup) : null;\n  return /*#__PURE__*/React$1.createElement(FormLayout$1, null, /*#__PURE__*/React$1.createElement(TextField, {\n    connectedLeft: filterCreatorMarkup,\n    connectedRight: additionalActionButton,\n    label: textFieldLabel,\n    labelHidden: true,\n    placeholder: textFieldLabel,\n    prefix: _ref,\n    value: searchValue,\n    onChange: onSearchChange,\n    onBlur: onSearchBlur,\n    focused: focused,\n    disabled: selectMode\n  }), appliedFiltersWrapper);\n\n  function getFilterLabel(appliedFilter) {\n    const {\n      key,\n      value,\n      label\n    } = appliedFilter;\n\n    if (label) {\n      return label;\n    }\n\n    const filter = filters.find(filter => {\n      const {\n        minKey,\n        maxKey,\n        operatorText\n      } = filter;\n\n      if (minKey || maxKey) {\n        return filter.key === key || minKey === key || maxKey === key;\n      }\n\n      if (operatorText && typeof operatorText !== 'string') {\n        return filter.key === key || operatorText.filter(({\n          key: operatorKey\n        }) => operatorKey === key).length === 1;\n      }\n\n      return filter.key === key;\n    });\n\n    if (!filter) {\n      return value;\n    }\n\n    const filterOperatorLabel = findOperatorLabel(filter, appliedFilter);\n    const filterLabelByType = findFilterLabelByType(filter, appliedFilter);\n\n    if (!filterOperatorLabel) {\n      return `${filter.label} ${filterLabelByType}`;\n    }\n\n    return `${filter.label} ${filterOperatorLabel} ${filterLabelByType}`;\n  }\n\n  function findFilterLabelByType(filter, appliedFilter) {\n    const {\n      value: appliedFilterValue\n    } = appliedFilter;\n\n    if (filter.type === FilterType.Select) {\n      const foundFilterOption = filter.options.find(option => typeof option === 'string' ? option === appliedFilterValue : option.value === appliedFilterValue);\n\n      if (foundFilterOption) {\n        return typeof foundFilterOption === 'string' ? foundFilterOption : foundFilterOption.label;\n      }\n    }\n\n    if (filter.type === FilterType.DateSelector) {\n      if (filter.key === appliedFilter.key) {\n        const filterLabelKey = `Polaris.ResourceList.DateSelector.FilterLabelForValue.${appliedFilter.value}`;\n        return i18n.translationKeyExists(filterLabelKey) ? i18n.translate(filterLabelKey) : appliedFilter.value;\n      }\n\n      if (appliedFilter.key === filter.maxKey) {\n        return i18n.translate('Polaris.ResourceList.DateSelector.FilterLabelForValue.on_or_before', {\n          date: formatDateForLabelDisplay(appliedFilter.value)\n        });\n      }\n\n      if (appliedFilter.key === filter.minKey) {\n        return i18n.translate('Polaris.ResourceList.DateSelector.FilterLabelForValue.on_or_after', {\n          date: formatDateForLabelDisplay(appliedFilter.value)\n        });\n      }\n    }\n\n    return appliedFilterValue;\n  }\n}\n\nfunction idFromFilter(appliedFilter) {\n  return `${appliedFilter.key}-${appliedFilter.value}`;\n}\n\nfunction formatDateForLabelDisplay(date) {\n  if (isNaN(new Date(date).getTime())) {\n    return date;\n  }\n\n  return new Date(date.replace(/-/g, '/')).toLocaleDateString();\n}\n\nfunction findOperatorLabel(filter, appliedFilter) {\n  const {\n    operatorText\n  } = filter;\n\n  if (filter.type === FilterType.DateSelector && (appliedFilter.key === filter.minKey || appliedFilter.key === filter.maxKey)) {\n    return '';\n  }\n\n  if (!operatorText || typeof operatorText === 'string') {\n    return operatorText;\n  }\n\n  const appliedOperator = operatorText.find(operator => {\n    return operator.key === appliedFilter.key;\n  });\n\n  if (appliedOperator) {\n    return appliedOperator.filterLabel || appliedOperator.optionLabel;\n  }\n}\n\nexport { FilterControl };\n"]},"metadata":{},"sourceType":"module"}