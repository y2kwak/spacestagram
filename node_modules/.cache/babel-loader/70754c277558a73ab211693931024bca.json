{"ast":null,"code":"import { Key } from '../../../../types.js';\nimport React$1, { useState, useCallback, useEffect, useLayoutEffect } from 'react';\nimport { objectSpread2 as _objectSpread2 } from '../../../../_virtual/_rollupPluginBabelHelpers.js';\nimport { EventListener as EventListener$1 } from '../../../EventListener/EventListener.js';\nimport { useUniqueId } from '../../../../utilities/unique-id/hooks.js';\nimport { isServer } from '../../../../utilities/target.js';\nimport { KeypressListener as KeypressListener$1 } from '../../../KeypressListener/KeypressListener.js';\nimport { Popover as Popover$1 } from '../../../Popover/Popover.js';\nimport { ActionList as ActionList$1 } from '../../../ActionList/ActionList.js';\nimport { useToggle as useToggle$1 } from '../../../../utilities/use-toggle.js';\nimport { OptionList as OptionList$1 } from '../../../OptionList/OptionList.js';\nimport { ComboBoxContext } from './context.js';\nimport styles from './ComboBox.scss.js';\n\nfunction ComboBox(_ref) {\n  let {\n    id: idProp,\n    options,\n    selected,\n    textField,\n    preferredPosition,\n    listTitle,\n    allowMultiple,\n    actionsBefore,\n    actionsAfter,\n    contentBefore,\n    contentAfter,\n    emptyState,\n    onSelect,\n    onEndReached\n  } = _ref;\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [selectedOptions, setSelectedOptions] = useState(selected);\n  const [navigableOptions, setNavigableOptions] = useState([]);\n  const {\n    value: popoverActive,\n    setTrue: forcePopoverActiveTrue,\n    setFalse: forcePopoverActiveFalse\n  } = useToggle$1(false);\n  const useIsomorphicLayoutEffect = isServer ? useEffect : useLayoutEffect;\n  const id = useUniqueId('ComboBox', idProp);\n  const getActionsWithIds = useCallback((actions, before) => {\n    if (before) {\n      return navigableOptions.slice(0, actions.length);\n    }\n\n    return navigableOptions.slice(-actions.length);\n  }, [navigableOptions]);\n  const visuallyUpdateSelectedOption = useCallback((newOption, oldOption) => {\n    if (oldOption) {\n      oldOption.active = false;\n    }\n\n    if (newOption) {\n      newOption.active = true;\n    }\n  }, []);\n  const resetVisuallySelectedOptions = useCallback(() => {\n    setSelectedIndex(-1);\n    navigableOptions.forEach(option => {\n      option.active = false;\n    });\n  }, [navigableOptions]);\n  const selectOptionAtIndex = useCallback(newOptionIndex => {\n    if (navigableOptions.length === 0) {\n      return;\n    }\n\n    const oldSelectedOption = navigableOptions[selectedIndex];\n    const newSelectedOption = navigableOptions[newOptionIndex];\n    visuallyUpdateSelectedOption(newSelectedOption, oldSelectedOption);\n    setSelectedIndex(newOptionIndex);\n  }, [navigableOptions, selectedIndex, visuallyUpdateSelectedOption]);\n  const selectNextOption = useCallback(() => {\n    if (navigableOptions.length === 0) {\n      return;\n    }\n\n    let newIndex = selectedIndex;\n\n    if (selectedIndex + 1 >= navigableOptions.length) {\n      newIndex = 0;\n    } else {\n      newIndex++;\n    }\n\n    selectOptionAtIndex(newIndex);\n  }, [navigableOptions, selectOptionAtIndex, selectedIndex]);\n  const selectPreviousOption = useCallback(() => {\n    if (navigableOptions.length === 0) {\n      return;\n    }\n\n    let newIndex = selectedIndex;\n\n    if (selectedIndex <= 0) {\n      newIndex = navigableOptions.length - 1;\n    } else {\n      newIndex--;\n    }\n\n    selectOptionAtIndex(newIndex);\n  }, [navigableOptions, selectOptionAtIndex, selectedIndex]);\n  const selectOptions = useCallback(selected => {\n    selected && onSelect(selected);\n\n    if (!allowMultiple) {\n      resetVisuallySelectedOptions();\n      forcePopoverActiveFalse();\n    }\n  }, [allowMultiple, forcePopoverActiveFalse, onSelect, resetVisuallySelectedOptions]);\n  const handleSelection = useCallback(newSelected => {\n    let newlySelectedOptions = selected;\n\n    if (selected.includes(newSelected)) {\n      newlySelectedOptions.splice(newlySelectedOptions.indexOf(newSelected), 1);\n    } else if (allowMultiple) {\n      newlySelectedOptions.push(newSelected);\n    } else {\n      newlySelectedOptions = [newSelected];\n    }\n\n    selectOptions(newlySelectedOptions);\n  }, [allowMultiple, selectOptions, selected]);\n  const handleEnter = useCallback(event => {\n    if (event.keyCode !== Key.Enter) {\n      return;\n    }\n\n    if (popoverActive && selectedIndex > -1) {\n      const selectedOption = navigableOptions[selectedIndex];\n\n      if (isOption(selectedOption)) {\n        event.preventDefault();\n        handleSelection(selectedOption.value);\n      } else {\n        selectedOption.onAction && selectedOption.onAction();\n      }\n    }\n  }, [handleSelection, navigableOptions, popoverActive, selectedIndex]);\n  const handleBlur = useCallback(() => {\n    forcePopoverActiveFalse();\n    resetVisuallySelectedOptions();\n  }, [forcePopoverActiveFalse, resetVisuallySelectedOptions]);\n  const activatePopover = useCallback(() => {\n    !popoverActive && forcePopoverActiveTrue();\n  }, [forcePopoverActiveTrue, popoverActive]);\n  const updateIndexOfSelectedOption = useCallback(newOptions => {\n    const selectedOption = navigableOptions[selectedIndex];\n\n    if (selectedOption && newOptions.includes(selectedOption)) {\n      selectOptionAtIndex(newOptions.indexOf(selectedOption));\n    } else if (selectedIndex > newOptions.length - 1) {\n      resetVisuallySelectedOptions();\n    } else {\n      selectOptionAtIndex(selectedIndex);\n    }\n  }, [navigableOptions, resetVisuallySelectedOptions, selectOptionAtIndex, selectedIndex]);\n  useEffect(() => {\n    if (selectedOptions !== selected) {\n      setSelectedOptions(selected);\n    }\n  }, [selected, selectedOptions]);\n  useIsomorphicLayoutEffect(() => {\n    let newNavigableOptions = [];\n\n    if (actionsBefore) {\n      newNavigableOptions = newNavigableOptions.concat(actionsBefore);\n    }\n\n    if (options) {\n      newNavigableOptions = newNavigableOptions.concat(options);\n    }\n\n    if (actionsAfter) {\n      newNavigableOptions = newNavigableOptions.concat(actionsAfter);\n    }\n\n    newNavigableOptions = assignOptionIds(newNavigableOptions, id);\n    setNavigableOptions(newNavigableOptions);\n  }, [actionsAfter, actionsBefore, id, options]);\n  useEffect(() => {\n    updateIndexOfSelectedOption(navigableOptions);\n  }, [navigableOptions, updateIndexOfSelectedOption]);\n  let actionsBeforeMarkup;\n\n  if (actionsBefore && actionsBefore.length > 0) {\n    actionsBeforeMarkup = /*#__PURE__*/React$1.createElement(ActionList$1, {\n      actionRole: \"option\",\n      items: getActionsWithIds(actionsBefore, true)\n    });\n  }\n\n  let actionsAfterMarkup;\n\n  if (actionsAfter && actionsAfter.length > 0) {\n    actionsAfterMarkup = /*#__PURE__*/React$1.createElement(ActionList$1, {\n      actionRole: \"option\",\n      items: getActionsWithIds(actionsAfter)\n    });\n  }\n\n  const optionsMarkup = options.length > 0 && /*#__PURE__*/React$1.createElement(OptionList$1, {\n    role: \"presentation\",\n    optionRole: \"option\",\n    options: filterForOptions(navigableOptions),\n    onChange: selectOptions,\n    selected: selectedOptions,\n    title: listTitle,\n    allowMultiple: allowMultiple\n  });\n  const emptyStateMarkup = !actionsAfter && !actionsBefore && !contentAfter && !contentBefore && options.length === 0 && emptyState && /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.EmptyState\n  }, emptyState);\n  const selectedOptionId = selectedIndex > -1 ? `${id}-${selectedIndex}` : undefined;\n  const context = {\n    id,\n    selectedOptionId\n  };\n  return /*#__PURE__*/React$1.createElement(ComboBoxContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    onClick: activatePopover,\n    onKeyDown: activatePopover,\n    \"aria-expanded\": popoverActive,\n    \"aria-owns\": id,\n    \"aria-controls\": id,\n    \"aria-haspopup\": true,\n    onFocus: forcePopoverActiveTrue,\n    onBlur: handleBlur // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n    ,\n    tabIndex: options.length === 0 ? -1 : 0\n  }, /*#__PURE__*/React$1.createElement(KeypressListener$1, {\n    keyCode: Key.DownArrow,\n    handler: selectNextOption\n  }), /*#__PURE__*/React$1.createElement(KeypressListener$1, {\n    keyCode: Key.UpArrow,\n    handler: selectPreviousOption\n  }), /*#__PURE__*/React$1.createElement(EventListener$1, {\n    event: \"keydown\",\n    handler: handleEnter\n  }), /*#__PURE__*/React$1.createElement(KeypressListener$1, {\n    keyCode: Key.Escape,\n    handler: forcePopoverActiveFalse\n  }), /*#__PURE__*/React$1.createElement(Popover$1, {\n    activator: textField,\n    active: popoverActive,\n    onClose: forcePopoverActiveFalse,\n    preferredPosition: preferredPosition,\n    fullWidth: true,\n    autofocusTarget: \"none\"\n  }, /*#__PURE__*/React$1.createElement(Popover$1.Pane, {\n    onScrolledToBottom: onEndReached\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    id: id,\n    role: \"listbox\",\n    \"aria-multiselectable\": allowMultiple\n  }, contentBefore, actionsBeforeMarkup, optionsMarkup, actionsAfterMarkup, contentAfter, emptyStateMarkup)))));\n}\n\nfunction assignOptionIds(options, id) {\n  return options.map((option, optionIndex) => _objectSpread2(_objectSpread2({}, option), {}, {\n    id: `${id}-${optionIndex}`\n  }));\n}\n\nfunction isOption(navigableOption) {\n  return 'value' in navigableOption && navigableOption.value !== undefined;\n}\n\nfunction filterForOptions(mixedArray) {\n  return mixedArray.filter(isOption);\n}\n\nexport { ComboBox };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/Autocomplete/components/ComboBox/ComboBox.js"],"names":["Key","React$1","useState","useCallback","useEffect","useLayoutEffect","objectSpread2","_objectSpread2","EventListener","EventListener$1","useUniqueId","isServer","KeypressListener","KeypressListener$1","Popover","Popover$1","ActionList","ActionList$1","useToggle","useToggle$1","OptionList","OptionList$1","ComboBoxContext","styles","ComboBox","id","idProp","options","selected","textField","preferredPosition","listTitle","allowMultiple","actionsBefore","actionsAfter","contentBefore","contentAfter","emptyState","onSelect","onEndReached","selectedIndex","setSelectedIndex","selectedOptions","setSelectedOptions","navigableOptions","setNavigableOptions","value","popoverActive","setTrue","forcePopoverActiveTrue","setFalse","forcePopoverActiveFalse","useIsomorphicLayoutEffect","getActionsWithIds","actions","before","slice","length","visuallyUpdateSelectedOption","newOption","oldOption","active","resetVisuallySelectedOptions","forEach","option","selectOptionAtIndex","newOptionIndex","oldSelectedOption","newSelectedOption","selectNextOption","newIndex","selectPreviousOption","selectOptions","handleSelection","newSelected","newlySelectedOptions","includes","splice","indexOf","push","handleEnter","event","keyCode","Enter","selectedOption","isOption","preventDefault","onAction","handleBlur","activatePopover","updateIndexOfSelectedOption","newOptions","newNavigableOptions","concat","assignOptionIds","actionsBeforeMarkup","createElement","actionRole","items","actionsAfterMarkup","optionsMarkup","role","optionRole","filterForOptions","onChange","title","emptyStateMarkup","className","EmptyState","selectedOptionId","undefined","context","Provider","onClick","onKeyDown","onFocus","onBlur","tabIndex","DownArrow","handler","UpArrow","Escape","activator","onClose","fullWidth","autofocusTarget","Pane","onScrolledToBottom","map","optionIndex","navigableOption","mixedArray","filter"],"mappings":"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","sourcesContent":["import { Key } from '../../../../types.js';\nimport React$1, { useState, useCallback, useEffect, useLayoutEffect } from 'react';\nimport { objectSpread2 as _objectSpread2 } from '../../../../_virtual/_rollupPluginBabelHelpers.js';\nimport { EventListener as EventListener$1 } from '../../../EventListener/EventListener.js';\nimport { useUniqueId } from '../../../../utilities/unique-id/hooks.js';\nimport { isServer } from '../../../../utilities/target.js';\nimport { KeypressListener as KeypressListener$1 } from '../../../KeypressListener/KeypressListener.js';\nimport { Popover as Popover$1 } from '../../../Popover/Popover.js';\nimport { ActionList as ActionList$1 } from '../../../ActionList/ActionList.js';\nimport { useToggle as useToggle$1 } from '../../../../utilities/use-toggle.js';\nimport { OptionList as OptionList$1 } from '../../../OptionList/OptionList.js';\nimport { ComboBoxContext } from './context.js';\nimport styles from './ComboBox.scss.js';\n\nfunction ComboBox({\n  id: idProp,\n  options,\n  selected,\n  textField,\n  preferredPosition,\n  listTitle,\n  allowMultiple,\n  actionsBefore,\n  actionsAfter,\n  contentBefore,\n  contentAfter,\n  emptyState,\n  onSelect,\n  onEndReached\n}) {\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [selectedOptions, setSelectedOptions] = useState(selected);\n  const [navigableOptions, setNavigableOptions] = useState([]);\n  const {\n    value: popoverActive,\n    setTrue: forcePopoverActiveTrue,\n    setFalse: forcePopoverActiveFalse\n  } = useToggle$1(false);\n  const useIsomorphicLayoutEffect = isServer ? useEffect : useLayoutEffect;\n  const id = useUniqueId('ComboBox', idProp);\n  const getActionsWithIds = useCallback((actions, before) => {\n    if (before) {\n      return navigableOptions.slice(0, actions.length);\n    }\n\n    return navigableOptions.slice(-actions.length);\n  }, [navigableOptions]);\n  const visuallyUpdateSelectedOption = useCallback((newOption, oldOption) => {\n    if (oldOption) {\n      oldOption.active = false;\n    }\n\n    if (newOption) {\n      newOption.active = true;\n    }\n  }, []);\n  const resetVisuallySelectedOptions = useCallback(() => {\n    setSelectedIndex(-1);\n    navigableOptions.forEach(option => {\n      option.active = false;\n    });\n  }, [navigableOptions]);\n  const selectOptionAtIndex = useCallback(newOptionIndex => {\n    if (navigableOptions.length === 0) {\n      return;\n    }\n\n    const oldSelectedOption = navigableOptions[selectedIndex];\n    const newSelectedOption = navigableOptions[newOptionIndex];\n    visuallyUpdateSelectedOption(newSelectedOption, oldSelectedOption);\n    setSelectedIndex(newOptionIndex);\n  }, [navigableOptions, selectedIndex, visuallyUpdateSelectedOption]);\n  const selectNextOption = useCallback(() => {\n    if (navigableOptions.length === 0) {\n      return;\n    }\n\n    let newIndex = selectedIndex;\n\n    if (selectedIndex + 1 >= navigableOptions.length) {\n      newIndex = 0;\n    } else {\n      newIndex++;\n    }\n\n    selectOptionAtIndex(newIndex);\n  }, [navigableOptions, selectOptionAtIndex, selectedIndex]);\n  const selectPreviousOption = useCallback(() => {\n    if (navigableOptions.length === 0) {\n      return;\n    }\n\n    let newIndex = selectedIndex;\n\n    if (selectedIndex <= 0) {\n      newIndex = navigableOptions.length - 1;\n    } else {\n      newIndex--;\n    }\n\n    selectOptionAtIndex(newIndex);\n  }, [navigableOptions, selectOptionAtIndex, selectedIndex]);\n  const selectOptions = useCallback(selected => {\n    selected && onSelect(selected);\n\n    if (!allowMultiple) {\n      resetVisuallySelectedOptions();\n      forcePopoverActiveFalse();\n    }\n  }, [allowMultiple, forcePopoverActiveFalse, onSelect, resetVisuallySelectedOptions]);\n  const handleSelection = useCallback(newSelected => {\n    let newlySelectedOptions = selected;\n\n    if (selected.includes(newSelected)) {\n      newlySelectedOptions.splice(newlySelectedOptions.indexOf(newSelected), 1);\n    } else if (allowMultiple) {\n      newlySelectedOptions.push(newSelected);\n    } else {\n      newlySelectedOptions = [newSelected];\n    }\n\n    selectOptions(newlySelectedOptions);\n  }, [allowMultiple, selectOptions, selected]);\n  const handleEnter = useCallback(event => {\n    if (event.keyCode !== Key.Enter) {\n      return;\n    }\n\n    if (popoverActive && selectedIndex > -1) {\n      const selectedOption = navigableOptions[selectedIndex];\n\n      if (isOption(selectedOption)) {\n        event.preventDefault();\n        handleSelection(selectedOption.value);\n      } else {\n        selectedOption.onAction && selectedOption.onAction();\n      }\n    }\n  }, [handleSelection, navigableOptions, popoverActive, selectedIndex]);\n  const handleBlur = useCallback(() => {\n    forcePopoverActiveFalse();\n    resetVisuallySelectedOptions();\n  }, [forcePopoverActiveFalse, resetVisuallySelectedOptions]);\n  const activatePopover = useCallback(() => {\n    !popoverActive && forcePopoverActiveTrue();\n  }, [forcePopoverActiveTrue, popoverActive]);\n  const updateIndexOfSelectedOption = useCallback(newOptions => {\n    const selectedOption = navigableOptions[selectedIndex];\n\n    if (selectedOption && newOptions.includes(selectedOption)) {\n      selectOptionAtIndex(newOptions.indexOf(selectedOption));\n    } else if (selectedIndex > newOptions.length - 1) {\n      resetVisuallySelectedOptions();\n    } else {\n      selectOptionAtIndex(selectedIndex);\n    }\n  }, [navigableOptions, resetVisuallySelectedOptions, selectOptionAtIndex, selectedIndex]);\n  useEffect(() => {\n    if (selectedOptions !== selected) {\n      setSelectedOptions(selected);\n    }\n  }, [selected, selectedOptions]);\n  useIsomorphicLayoutEffect(() => {\n    let newNavigableOptions = [];\n\n    if (actionsBefore) {\n      newNavigableOptions = newNavigableOptions.concat(actionsBefore);\n    }\n\n    if (options) {\n      newNavigableOptions = newNavigableOptions.concat(options);\n    }\n\n    if (actionsAfter) {\n      newNavigableOptions = newNavigableOptions.concat(actionsAfter);\n    }\n\n    newNavigableOptions = assignOptionIds(newNavigableOptions, id);\n    setNavigableOptions(newNavigableOptions);\n  }, [actionsAfter, actionsBefore, id, options]);\n  useEffect(() => {\n    updateIndexOfSelectedOption(navigableOptions);\n  }, [navigableOptions, updateIndexOfSelectedOption]);\n  let actionsBeforeMarkup;\n\n  if (actionsBefore && actionsBefore.length > 0) {\n    actionsBeforeMarkup = /*#__PURE__*/React$1.createElement(ActionList$1, {\n      actionRole: \"option\",\n      items: getActionsWithIds(actionsBefore, true)\n    });\n  }\n\n  let actionsAfterMarkup;\n\n  if (actionsAfter && actionsAfter.length > 0) {\n    actionsAfterMarkup = /*#__PURE__*/React$1.createElement(ActionList$1, {\n      actionRole: \"option\",\n      items: getActionsWithIds(actionsAfter)\n    });\n  }\n\n  const optionsMarkup = options.length > 0 && /*#__PURE__*/React$1.createElement(OptionList$1, {\n    role: \"presentation\",\n    optionRole: \"option\",\n    options: filterForOptions(navigableOptions),\n    onChange: selectOptions,\n    selected: selectedOptions,\n    title: listTitle,\n    allowMultiple: allowMultiple\n  });\n  const emptyStateMarkup = !actionsAfter && !actionsBefore && !contentAfter && !contentBefore && options.length === 0 && emptyState && /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.EmptyState\n  }, emptyState);\n  const selectedOptionId = selectedIndex > -1 ? `${id}-${selectedIndex}` : undefined;\n  const context = {\n    id,\n    selectedOptionId\n  };\n  return /*#__PURE__*/React$1.createElement(ComboBoxContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    onClick: activatePopover,\n    onKeyDown: activatePopover,\n    \"aria-expanded\": popoverActive,\n    \"aria-owns\": id,\n    \"aria-controls\": id,\n    \"aria-haspopup\": true,\n    onFocus: forcePopoverActiveTrue,\n    onBlur: handleBlur // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n    ,\n    tabIndex: options.length === 0 ? -1 : 0\n  }, /*#__PURE__*/React$1.createElement(KeypressListener$1, {\n    keyCode: Key.DownArrow,\n    handler: selectNextOption\n  }), /*#__PURE__*/React$1.createElement(KeypressListener$1, {\n    keyCode: Key.UpArrow,\n    handler: selectPreviousOption\n  }), /*#__PURE__*/React$1.createElement(EventListener$1, {\n    event: \"keydown\",\n    handler: handleEnter\n  }), /*#__PURE__*/React$1.createElement(KeypressListener$1, {\n    keyCode: Key.Escape,\n    handler: forcePopoverActiveFalse\n  }), /*#__PURE__*/React$1.createElement(Popover$1, {\n    activator: textField,\n    active: popoverActive,\n    onClose: forcePopoverActiveFalse,\n    preferredPosition: preferredPosition,\n    fullWidth: true,\n    autofocusTarget: \"none\"\n  }, /*#__PURE__*/React$1.createElement(Popover$1.Pane, {\n    onScrolledToBottom: onEndReached\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    id: id,\n    role: \"listbox\",\n    \"aria-multiselectable\": allowMultiple\n  }, contentBefore, actionsBeforeMarkup, optionsMarkup, actionsAfterMarkup, contentAfter, emptyStateMarkup)))));\n}\n\nfunction assignOptionIds(options, id) {\n  return options.map((option, optionIndex) => _objectSpread2(_objectSpread2({}, option), {}, {\n    id: `${id}-${optionIndex}`\n  }));\n}\n\nfunction isOption(navigableOption) {\n  return 'value' in navigableOption && navigableOption.value !== undefined;\n}\n\nfunction filterForOptions(mixedArray) {\n  return mixedArray.filter(isOption);\n}\n\nexport { ComboBox };\n"]},"metadata":{},"sourceType":"module"}