{"ast":null,"code":"import React$1, { useCallback } from 'react';\nimport { useI18n } from '../../../../../../utilities/i18n/hooks.js';\nimport { Stack as Stack$1 } from '../../../../../Stack/Stack.js';\nimport { TextField } from '../../../../../TextField/TextField.js';\nimport { useIsMountedRef as useIsMountedRef$1 } from '../../../../../../utilities/use-is-mounted-ref.js';\nimport { Select as Select$1 } from '../../../../../Select/Select.js';\nimport { DateSelector as DateSelector$1 } from '../DateSelector/DateSelector.js';\nimport { FilterType } from '../../types.js';\n\nfunction FilterValueSelector(_ref) {\n  let {\n    filter,\n    filterKey,\n    value,\n    onChange,\n    onFilterKeyChange\n  } = _ref;\n  const i18n = useI18n();\n  const isMounted = useIsMountedRef$1();\n  const {\n    operatorText,\n    type,\n    label\n  } = filter;\n  const showOperatorOptions = type !== FilterType.DateSelector && operatorText && typeof operatorText !== 'string';\n  const handleOperatorOptionChange = useCallback(operatorKey => {\n    onFilterKeyChange(operatorKey);\n\n    if (!value) {\n      return;\n    }\n\n    onChange(value);\n  }, [onChange, onFilterKeyChange, value]);\n\n  if (showOperatorOptions && operatorText.length !== 0 && !isMounted.current) {\n    handleOperatorOptionChange(operatorText[0].key);\n  }\n\n  const operatorOptionsMarkup = showOperatorOptions ? /*#__PURE__*/React$1.createElement(Select$1, {\n    label: label,\n    labelHidden: true,\n    options: buildOperatorOptions(operatorText),\n    value: filterKey,\n    onChange: handleOperatorOptionChange\n  }) : null;\n  const selectedFilterLabel = typeof operatorText === 'string' ? operatorText : '';\n\n  switch (filter.type) {\n    case FilterType.Select:\n      return /*#__PURE__*/React$1.createElement(Stack$1, {\n        vertical: true\n      }, operatorOptionsMarkup, /*#__PURE__*/React$1.createElement(Select$1, {\n        label: selectedFilterLabel,\n        options: filter.options,\n        placeholder: i18n.translate('Polaris.ResourceList.FilterValueSelector.selectFilterValuePlaceholder'),\n        value: value,\n        onChange: onChange\n      }));\n\n    case FilterType.TextField:\n      return /*#__PURE__*/React$1.createElement(Stack$1, {\n        vertical: true\n      }, operatorOptionsMarkup, /*#__PURE__*/React$1.createElement(TextField, {\n        label: selectedFilterLabel,\n        value: value,\n        type: filter.textFieldType,\n        onChange: onChange\n      }));\n\n    case FilterType.DateSelector:\n      return /*#__PURE__*/React$1.createElement(DateSelector$1, {\n        dateOptionType: filter.dateOptionType,\n        filterValue: value,\n        filterKey: filterKey,\n        filterMinKey: filter.minKey,\n        filterMaxKey: filter.maxKey,\n        onFilterValueChange: onChange,\n        onFilterKeyChange: onFilterKeyChange\n      });\n\n    default:\n      return null;\n  }\n}\n\nfunction buildOperatorOptions(operatorText) {\n  if (!operatorText || typeof operatorText === 'string') {\n    return [];\n  }\n\n  return operatorText.map(_ref2 => {\n    let {\n      key,\n      optionLabel\n    } = _ref2;\n    return {\n      value: key,\n      label: optionLabel\n    };\n  });\n}\n\nexport { FilterValueSelector };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/ResourceList/components/FilterControl/components/FilterValueSelector/FilterValueSelector.js"],"names":["React$1","useCallback","useI18n","Stack","Stack$1","TextField","useIsMountedRef","useIsMountedRef$1","Select","Select$1","DateSelector","DateSelector$1","FilterType","FilterValueSelector","filter","filterKey","value","onChange","onFilterKeyChange","i18n","isMounted","operatorText","type","label","showOperatorOptions","handleOperatorOptionChange","operatorKey","length","current","key","operatorOptionsMarkup","createElement","labelHidden","options","buildOperatorOptions","selectedFilterLabel","vertical","placeholder","translate","textFieldType","dateOptionType","filterValue","filterMinKey","minKey","filterMaxKey","maxKey","onFilterValueChange","map","optionLabel"],"mappings":"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","sourcesContent":["import React$1, { useCallback } from 'react';\nimport { useI18n } from '../../../../../../utilities/i18n/hooks.js';\nimport { Stack as Stack$1 } from '../../../../../Stack/Stack.js';\nimport { TextField } from '../../../../../TextField/TextField.js';\nimport { useIsMountedRef as useIsMountedRef$1 } from '../../../../../../utilities/use-is-mounted-ref.js';\nimport { Select as Select$1 } from '../../../../../Select/Select.js';\nimport { DateSelector as DateSelector$1 } from '../DateSelector/DateSelector.js';\nimport { FilterType } from '../../types.js';\n\nfunction FilterValueSelector({\n  filter,\n  filterKey,\n  value,\n  onChange,\n  onFilterKeyChange\n}) {\n  const i18n = useI18n();\n  const isMounted = useIsMountedRef$1();\n  const {\n    operatorText,\n    type,\n    label\n  } = filter;\n  const showOperatorOptions = type !== FilterType.DateSelector && operatorText && typeof operatorText !== 'string';\n  const handleOperatorOptionChange = useCallback(operatorKey => {\n    onFilterKeyChange(operatorKey);\n\n    if (!value) {\n      return;\n    }\n\n    onChange(value);\n  }, [onChange, onFilterKeyChange, value]);\n\n  if (showOperatorOptions && operatorText.length !== 0 && !isMounted.current) {\n    handleOperatorOptionChange(operatorText[0].key);\n  }\n\n  const operatorOptionsMarkup = showOperatorOptions ? /*#__PURE__*/React$1.createElement(Select$1, {\n    label: label,\n    labelHidden: true,\n    options: buildOperatorOptions(operatorText),\n    value: filterKey,\n    onChange: handleOperatorOptionChange\n  }) : null;\n  const selectedFilterLabel = typeof operatorText === 'string' ? operatorText : '';\n\n  switch (filter.type) {\n    case FilterType.Select:\n      return /*#__PURE__*/React$1.createElement(Stack$1, {\n        vertical: true\n      }, operatorOptionsMarkup, /*#__PURE__*/React$1.createElement(Select$1, {\n        label: selectedFilterLabel,\n        options: filter.options,\n        placeholder: i18n.translate('Polaris.ResourceList.FilterValueSelector.selectFilterValuePlaceholder'),\n        value: value,\n        onChange: onChange\n      }));\n\n    case FilterType.TextField:\n      return /*#__PURE__*/React$1.createElement(Stack$1, {\n        vertical: true\n      }, operatorOptionsMarkup, /*#__PURE__*/React$1.createElement(TextField, {\n        label: selectedFilterLabel,\n        value: value,\n        type: filter.textFieldType,\n        onChange: onChange\n      }));\n\n    case FilterType.DateSelector:\n      return /*#__PURE__*/React$1.createElement(DateSelector$1, {\n        dateOptionType: filter.dateOptionType,\n        filterValue: value,\n        filterKey: filterKey,\n        filterMinKey: filter.minKey,\n        filterMaxKey: filter.maxKey,\n        onFilterValueChange: onChange,\n        onFilterKeyChange: onFilterKeyChange\n      });\n\n    default:\n      return null;\n  }\n}\n\nfunction buildOperatorOptions(operatorText) {\n  if (!operatorText || typeof operatorText === 'string') {\n    return [];\n  }\n\n  return operatorText.map(({\n    key,\n    optionLabel\n  }) => {\n    return {\n      value: key,\n      label: optionLabel\n    };\n  });\n}\n\nexport { FilterValueSelector };\n"]},"metadata":{},"sourceType":"module"}