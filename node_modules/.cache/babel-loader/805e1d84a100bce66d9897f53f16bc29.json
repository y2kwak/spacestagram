{"ast":null,"code":"import { Key } from '../../types.js';\nimport React$1, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { findFirstFocusableNode } from '../../utilities/focus.js';\nimport { Portal as Portal$1 } from '../Portal/Portal.js';\nimport { useToggle as useToggle$1 } from '../../utilities/use-toggle.js';\nimport { TooltipOverlay as TooltipOverlay$1 } from './components/TooltipOverlay/TooltipOverlay.js';\n\nfunction Tooltip(_ref) {\n  let {\n    children,\n    content,\n    dismissOnMouseOut,\n    active: originalActive,\n    preferredPosition = 'below',\n    activatorWrapper = 'span',\n    accessibilityLabel\n  } = _ref;\n  const WrapperComponent = activatorWrapper;\n  const {\n    value: active,\n    setTrue: handleFocus,\n    setFalse: handleBlur\n  } = useToggle$1(Boolean(originalActive));\n  const [activatorNode, setActivatorNode] = useState(null);\n  const id = useUniqueId('TooltipContent');\n  const activatorContainer = useRef(null);\n  const mouseEntered = useRef(false);\n  useEffect(() => {\n    const firstFocusable = activatorContainer.current ? findFirstFocusableNode(activatorContainer.current) : null;\n    const accessibilityNode = firstFocusable || activatorContainer.current;\n    if (!accessibilityNode) return;\n    accessibilityNode.tabIndex = 0;\n    accessibilityNode.setAttribute('aria-describedby', id);\n    accessibilityNode.setAttribute('data-polaris-tooltip-activator', 'true');\n  }, [id, children]);\n  const handleKeyUp = useCallback(event => {\n    if (event.keyCode !== Key.Escape) return;\n    handleBlur();\n  }, [handleBlur]);\n  const portal = activatorNode ? /*#__PURE__*/React$1.createElement(Portal$1, {\n    idPrefix: \"tooltip\"\n  }, /*#__PURE__*/React$1.createElement(TooltipOverlay$1, {\n    id: id,\n    preferredPosition: preferredPosition,\n    activator: activatorNode,\n    active: active,\n    accessibilityLabel: accessibilityLabel,\n    onClose: noop,\n    preventInteraction: dismissOnMouseOut\n  }, content)) : null;\n  return /*#__PURE__*/React$1.createElement(WrapperComponent, {\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onMouseLeave: handleMouseLeave,\n    onMouseOver: handleMouseEnterFix,\n    onClick: stopPropagation,\n    ref: setActivator,\n    onKeyUp: handleKeyUp\n  }, children, portal);\n\n  function setActivator(node) {\n    const activatorContainerRef = activatorContainer;\n\n    if (node == null) {\n      activatorContainerRef.current = null;\n      setActivatorNode(null);\n      return;\n    }\n\n    node.firstElementChild instanceof HTMLElement && setActivatorNode(node.firstElementChild);\n    activatorContainerRef.current = node;\n  }\n\n  function handleMouseEnter() {\n    mouseEntered.current = true;\n    handleFocus();\n  }\n\n  function handleMouseLeave() {\n    mouseEntered.current = false;\n    handleBlur();\n  } // https://github.com/facebook/react/issues/10109\n  // Mouseenter event not triggered when cursor moves from disabled button\n\n\n  function handleMouseEnterFix() {\n    !mouseEntered.current && handleMouseEnter();\n  }\n}\n\nfunction noop() {}\n\nfunction stopPropagation(event) {\n  event.stopPropagation();\n}\n\nexport { Tooltip };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/Tooltip/Tooltip.js"],"names":["Key","React$1","useState","useRef","useEffect","useCallback","useUniqueId","findFirstFocusableNode","Portal","Portal$1","useToggle","useToggle$1","TooltipOverlay","TooltipOverlay$1","Tooltip","children","content","dismissOnMouseOut","active","originalActive","preferredPosition","activatorWrapper","accessibilityLabel","WrapperComponent","value","setTrue","handleFocus","setFalse","handleBlur","Boolean","activatorNode","setActivatorNode","id","activatorContainer","mouseEntered","firstFocusable","current","accessibilityNode","tabIndex","setAttribute","handleKeyUp","event","keyCode","Escape","portal","createElement","idPrefix","activator","onClose","noop","preventInteraction","onFocus","onBlur","onMouseLeave","handleMouseLeave","onMouseOver","handleMouseEnterFix","onClick","stopPropagation","ref","setActivator","onKeyUp","node","activatorContainerRef","firstElementChild","HTMLElement","handleMouseEnter"],"mappings":"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","sourcesContent":["import { Key } from '../../types.js';\nimport React$1, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { findFirstFocusableNode } from '../../utilities/focus.js';\nimport { Portal as Portal$1 } from '../Portal/Portal.js';\nimport { useToggle as useToggle$1 } from '../../utilities/use-toggle.js';\nimport { TooltipOverlay as TooltipOverlay$1 } from './components/TooltipOverlay/TooltipOverlay.js';\n\nfunction Tooltip({\n  children,\n  content,\n  dismissOnMouseOut,\n  active: originalActive,\n  preferredPosition = 'below',\n  activatorWrapper = 'span',\n  accessibilityLabel\n}) {\n  const WrapperComponent = activatorWrapper;\n  const {\n    value: active,\n    setTrue: handleFocus,\n    setFalse: handleBlur\n  } = useToggle$1(Boolean(originalActive));\n  const [activatorNode, setActivatorNode] = useState(null);\n  const id = useUniqueId('TooltipContent');\n  const activatorContainer = useRef(null);\n  const mouseEntered = useRef(false);\n  useEffect(() => {\n    const firstFocusable = activatorContainer.current ? findFirstFocusableNode(activatorContainer.current) : null;\n    const accessibilityNode = firstFocusable || activatorContainer.current;\n    if (!accessibilityNode) return;\n    accessibilityNode.tabIndex = 0;\n    accessibilityNode.setAttribute('aria-describedby', id);\n    accessibilityNode.setAttribute('data-polaris-tooltip-activator', 'true');\n  }, [id, children]);\n  const handleKeyUp = useCallback(event => {\n    if (event.keyCode !== Key.Escape) return;\n    handleBlur();\n  }, [handleBlur]);\n  const portal = activatorNode ? /*#__PURE__*/React$1.createElement(Portal$1, {\n    idPrefix: \"tooltip\"\n  }, /*#__PURE__*/React$1.createElement(TooltipOverlay$1, {\n    id: id,\n    preferredPosition: preferredPosition,\n    activator: activatorNode,\n    active: active,\n    accessibilityLabel: accessibilityLabel,\n    onClose: noop,\n    preventInteraction: dismissOnMouseOut\n  }, content)) : null;\n  return /*#__PURE__*/React$1.createElement(WrapperComponent, {\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onMouseLeave: handleMouseLeave,\n    onMouseOver: handleMouseEnterFix,\n    onClick: stopPropagation,\n    ref: setActivator,\n    onKeyUp: handleKeyUp\n  }, children, portal);\n\n  function setActivator(node) {\n    const activatorContainerRef = activatorContainer;\n\n    if (node == null) {\n      activatorContainerRef.current = null;\n      setActivatorNode(null);\n      return;\n    }\n\n    node.firstElementChild instanceof HTMLElement && setActivatorNode(node.firstElementChild);\n    activatorContainerRef.current = node;\n  }\n\n  function handleMouseEnter() {\n    mouseEntered.current = true;\n    handleFocus();\n  }\n\n  function handleMouseLeave() {\n    mouseEntered.current = false;\n    handleBlur();\n  } // https://github.com/facebook/react/issues/10109\n  // Mouseenter event not triggered when cursor moves from disabled button\n\n\n  function handleMouseEnterFix() {\n    !mouseEntered.current && handleMouseEnter();\n  }\n}\n\nfunction noop() {}\n\nfunction stopPropagation(event) {\n  event.stopPropagation();\n}\n\nexport { Tooltip };\n"]},"metadata":{},"sourceType":"module"}