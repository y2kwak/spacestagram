{"ast":null,"code":"import React$1 from 'react';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { classNames } from '../../utilities/css.js';\nimport { secondsToDurationTranslationKey, secondsToTimestamp, secondsToTimeComponents } from '../../utilities/duration.js';\nimport img from './illustrations/play.svg.js';\nimport styles from './VideoThumbnail.scss.js';\n\nfunction VideoThumbnail(_ref) {\n  let {\n    thumbnailUrl,\n    videoLength = 0,\n    videoProgress = 0,\n    showVideoProgress = false,\n    accessibilityLabel,\n    onClick,\n    onBeforeStartPlaying\n  } = _ref;\n  const i18n = useI18n();\n  let buttonLabel;\n\n  if (accessibilityLabel) {\n    buttonLabel = accessibilityLabel;\n  } else if (videoLength) {\n    const {\n      hours,\n      minutes,\n      seconds\n    } = secondsToTimeComponents(videoLength);\n    buttonLabel = i18n.translate('Polaris.VideoThumbnail.playButtonA11yLabel.defaultWithDuration', {\n      duration: i18n.translate(secondsToDurationTranslationKey(videoLength), {\n        hourCount: hours,\n        minuteCount: minutes,\n        secondCount: seconds\n      })\n    });\n  } else {\n    buttonLabel = i18n.translate('Polaris.VideoThumbnail.playButtonA11yLabel.default');\n  }\n\n  const timeStampMarkup = videoLength ? /*#__PURE__*/React$1.createElement(\"p\", {\n    className: classNames(styles.Timestamp, showVideoProgress && styles.withProgress)\n  }, secondsToTimestamp(videoLength)) : null;\n  let progressMarkup = null;\n\n  if (showVideoProgress) {\n    const progressValue = calculateProgress(videoLength, videoProgress);\n    const progressValuePercents = Math.round(progressValue * 100);\n    progressMarkup = /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Progress\n    }, /*#__PURE__*/React$1.createElement(\"progress\", {\n      className: styles.ProgressBar,\n      value: progressValuePercents,\n      max: \"100\"\n    }), /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Indicator,\n      style: {\n        transform: `scaleX(${progressValue})`\n      }\n    }, /*#__PURE__*/React$1.createElement(\"span\", {\n      className: styles.Label\n    }, progressValuePercents, \"%\")));\n  }\n\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Thumbnail,\n    style: {\n      backgroundImage: `url(${thumbnailUrl})`\n    }\n  }, /*#__PURE__*/React$1.createElement(\"button\", {\n    type: \"button\",\n    className: styles.PlayButton,\n    \"aria-label\": buttonLabel,\n    onClick: onClick,\n    onMouseEnter: onBeforeStartPlaying,\n    onFocus: onBeforeStartPlaying,\n    onTouchStart: onBeforeStartPlaying\n  }, /*#__PURE__*/React$1.createElement(\"img\", {\n    className: styles.PlayIcon,\n    src: img,\n    alt: \"\"\n  })), timeStampMarkup, progressMarkup);\n}\n\nfunction calculateProgress(videoLength, videoProgress) {\n  if (videoProgress > videoLength && process.env.NODE_ENV === 'development') {\n    // eslint-disable-next-line no-console\n    console.warn('Value passed to the video progress should not exceed video length. Resetting progress to 100%.');\n  }\n\n  if (videoProgress > 0 && videoLength > 0) {\n    const progress = parseFloat((videoProgress / videoLength).toFixed(2));\n    return progress > 1 ? 1 : progress;\n  }\n\n  return 0;\n}\n\nexport { VideoThumbnail };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/VideoThumbnail/VideoThumbnail.js"],"names":["React$1","useI18n","classNames","secondsToDurationTranslationKey","secondsToTimestamp","secondsToTimeComponents","img","styles","VideoThumbnail","thumbnailUrl","videoLength","videoProgress","showVideoProgress","accessibilityLabel","onClick","onBeforeStartPlaying","i18n","buttonLabel","hours","minutes","seconds","translate","duration","hourCount","minuteCount","secondCount","timeStampMarkup","createElement","className","Timestamp","withProgress","progressMarkup","progressValue","calculateProgress","progressValuePercents","Math","round","Progress","ProgressBar","value","max","Indicator","style","transform","Label","Thumbnail","backgroundImage","type","PlayButton","onMouseEnter","onFocus","onTouchStart","PlayIcon","src","alt","process","env","NODE_ENV","console","warn","progress","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import React$1 from 'react';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { classNames } from '../../utilities/css.js';\nimport { secondsToDurationTranslationKey, secondsToTimestamp, secondsToTimeComponents } from '../../utilities/duration.js';\nimport img from './illustrations/play.svg.js';\nimport styles from './VideoThumbnail.scss.js';\n\nfunction VideoThumbnail({\n  thumbnailUrl,\n  videoLength = 0,\n  videoProgress = 0,\n  showVideoProgress = false,\n  accessibilityLabel,\n  onClick,\n  onBeforeStartPlaying\n}) {\n  const i18n = useI18n();\n  let buttonLabel;\n\n  if (accessibilityLabel) {\n    buttonLabel = accessibilityLabel;\n  } else if (videoLength) {\n    const {\n      hours,\n      minutes,\n      seconds\n    } = secondsToTimeComponents(videoLength);\n    buttonLabel = i18n.translate('Polaris.VideoThumbnail.playButtonA11yLabel.defaultWithDuration', {\n      duration: i18n.translate(secondsToDurationTranslationKey(videoLength), {\n        hourCount: hours,\n        minuteCount: minutes,\n        secondCount: seconds\n      })\n    });\n  } else {\n    buttonLabel = i18n.translate('Polaris.VideoThumbnail.playButtonA11yLabel.default');\n  }\n\n  const timeStampMarkup = videoLength ? /*#__PURE__*/React$1.createElement(\"p\", {\n    className: classNames(styles.Timestamp, showVideoProgress && styles.withProgress)\n  }, secondsToTimestamp(videoLength)) : null;\n  let progressMarkup = null;\n\n  if (showVideoProgress) {\n    const progressValue = calculateProgress(videoLength, videoProgress);\n    const progressValuePercents = Math.round(progressValue * 100);\n    progressMarkup = /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Progress\n    }, /*#__PURE__*/React$1.createElement(\"progress\", {\n      className: styles.ProgressBar,\n      value: progressValuePercents,\n      max: \"100\"\n    }), /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Indicator,\n      style: {\n        transform: `scaleX(${progressValue})`\n      }\n    }, /*#__PURE__*/React$1.createElement(\"span\", {\n      className: styles.Label\n    }, progressValuePercents, \"%\")));\n  }\n\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Thumbnail,\n    style: {\n      backgroundImage: `url(${thumbnailUrl})`\n    }\n  }, /*#__PURE__*/React$1.createElement(\"button\", {\n    type: \"button\",\n    className: styles.PlayButton,\n    \"aria-label\": buttonLabel,\n    onClick: onClick,\n    onMouseEnter: onBeforeStartPlaying,\n    onFocus: onBeforeStartPlaying,\n    onTouchStart: onBeforeStartPlaying\n  }, /*#__PURE__*/React$1.createElement(\"img\", {\n    className: styles.PlayIcon,\n    src: img,\n    alt: \"\"\n  })), timeStampMarkup, progressMarkup);\n}\n\nfunction calculateProgress(videoLength, videoProgress) {\n  if (videoProgress > videoLength && process.env.NODE_ENV === 'development') {\n    // eslint-disable-next-line no-console\n    console.warn('Value passed to the video progress should not exceed video length. Resetting progress to 100%.');\n  }\n\n  if (videoProgress > 0 && videoLength > 0) {\n    const progress = parseFloat((videoProgress / videoLength).toFixed(2));\n    return progress > 1 ? 1 : progress;\n  }\n\n  return 0;\n}\n\nexport { VideoThumbnail };\n"]},"metadata":{},"sourceType":"module"}