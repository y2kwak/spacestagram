{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.colorFactory = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst hsluv_1 = require(\"hsluv\");\n\nconst base_1 = require(\"./configs/base\");\n\nfunction colorFactory(theme, scheme) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : base_1.config;\n  return Object.assign({}, ...Object.entries(theme).map(_ref => {\n    let [role, hex] = _ref;\n\n    if (typeof hex !== 'string') {\n      return null;\n    }\n\n    const base = hsluv_1.hexToHsluv(hex);\n    const variants = config[role] || [];\n    return Object.assign({}, variants.reduce((accumulator, _a) => {\n      var {\n        name\n      } = _a,\n          settings = tslib_1.__rest(_a, [\"name\"]);\n\n      const {\n        hue = base[0],\n        saturation = base[1],\n        lightness = base[2],\n        alpha = 1\n      } = settings[scheme];\n\n      const resolve = (value, baseToResolve) => {\n        return typeof value === 'number' ? value : value(baseToResolve);\n      };\n\n      const [red, green, blue] = hsluv_1.hsluvToRgb([resolve(hue, base[0]), resolve(saturation, base[1]), resolve(lightness, base[2])]).map(channel => Math.round(channel * 255));\n      return Object.assign(Object.assign({}, accumulator), {\n        [name]: `rgba(${red}, ${green}, ${blue}, ${alpha})`\n      });\n    }, {}));\n  }));\n}\n\nexports.colorFactory = colorFactory;","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris-tokens/dist-modern/color-factory.js"],"names":["Object","defineProperty","exports","value","colorFactory","tslib_1","require","hsluv_1","base_1","theme","scheme","config","assign","entries","map","role","hex","base","hexToHsluv","variants","reduce","accumulator","_a","name","settings","__rest","hue","saturation","lightness","alpha","resolve","baseToResolve","red","green","blue","hsluvToRgb","channel","Math","round"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,OAAD,CAAvB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,gBAAD,CAAtB;;AACA,SAASF,YAAT,CAAsBK,KAAtB,EAA6BC,MAA7B,EAA6D;AAAA,MAAxBC,MAAwB,uEAAfH,MAAM,CAACG,MAAQ;AACzD,SAAOX,MAAM,CAACY,MAAP,CAAc,EAAd,EAAkB,GAAGZ,MAAM,CAACa,OAAP,CAAeJ,KAAf,EAAsBK,GAAtB,CAA0B,QAAiB;AAAA,QAAhB,CAACC,IAAD,EAAOC,GAAP,CAAgB;;AACnE,QAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzB,aAAO,IAAP;AACH;;AACD,UAAMC,IAAI,GAAGV,OAAO,CAACW,UAAR,CAAmBF,GAAnB,CAAb;AACA,UAAMG,QAAQ,GAAGR,MAAM,CAACI,IAAD,CAAN,IAAgB,EAAjC;AACA,WAAOf,MAAM,CAACY,MAAP,CAAc,EAAd,EAAkBO,QAAQ,CAACC,MAAT,CAAgB,CAACC,WAAD,EAAcC,EAAd,KAAqB;AAC1D,UAAI;AAAEC,QAAAA;AAAF,UAAWD,EAAf;AAAA,UAAmBE,QAAQ,GAAGnB,OAAO,CAACoB,MAAR,CAAeH,EAAf,EAAmB,CAAC,MAAD,CAAnB,CAA9B;;AACA,YAAM;AAAEI,QAAAA,GAAG,GAAGT,IAAI,CAAC,CAAD,CAAZ;AAAiBU,QAAAA,UAAU,GAAGV,IAAI,CAAC,CAAD,CAAlC;AAAuCW,QAAAA,SAAS,GAAGX,IAAI,CAAC,CAAD,CAAvD;AAA4DY,QAAAA,KAAK,GAAG;AAApE,UAA2EL,QAAQ,CAACd,MAAD,CAAzF;;AACA,YAAMoB,OAAO,GAAG,CAAC3B,KAAD,EAAQ4B,aAAR,KAA0B;AACtC,eAAO,OAAO5B,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4B,aAAD,CAAhD;AACH,OAFD;;AAGA,YAAM,CAACC,GAAD,EAAMC,KAAN,EAAaC,IAAb,IAAqB3B,OAAO,CAAC4B,UAAR,CAAmB,CAC1CL,OAAO,CAACJ,GAAD,EAAMT,IAAI,CAAC,CAAD,CAAV,CADmC,EAE1Ca,OAAO,CAACH,UAAD,EAAaV,IAAI,CAAC,CAAD,CAAjB,CAFmC,EAG1Ca,OAAO,CAACF,SAAD,EAAYX,IAAI,CAAC,CAAD,CAAhB,CAHmC,CAAnB,EAIxBH,GAJwB,CAInBsB,OAAD,IAAaC,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,GAArB,CAJO,CAA3B;AAKA,aAAOpC,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAc,EAAd,EAAkBS,WAAlB,CAAd,EAA8C;AAAE,SAACE,IAAD,GAAS,QAAOS,GAAI,KAAIC,KAAM,KAAIC,IAAK,KAAIL,KAAM;AAAnD,OAA9C,CAAP;AACH,KAZwB,EAYtB,EAZsB,CAAlB,CAAP;AAaH,GAnB2B,CAArB,CAAP;AAoBH;;AACD3B,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.colorFactory = void 0;\nconst tslib_1 = require(\"tslib\");\nconst hsluv_1 = require(\"hsluv\");\nconst base_1 = require(\"./configs/base\");\nfunction colorFactory(theme, scheme, config = base_1.config) {\n    return Object.assign({}, ...Object.entries(theme).map(([role, hex]) => {\n        if (typeof hex !== 'string') {\n            return null;\n        }\n        const base = hsluv_1.hexToHsluv(hex);\n        const variants = config[role] || [];\n        return Object.assign({}, variants.reduce((accumulator, _a) => {\n            var { name } = _a, settings = tslib_1.__rest(_a, [\"name\"]);\n            const { hue = base[0], saturation = base[1], lightness = base[2], alpha = 1, } = settings[scheme];\n            const resolve = (value, baseToResolve) => {\n                return typeof value === 'number' ? value : value(baseToResolve);\n            };\n            const [red, green, blue] = hsluv_1.hsluvToRgb([\n                resolve(hue, base[0]),\n                resolve(saturation, base[1]),\n                resolve(lightness, base[2]),\n            ]).map((channel) => Math.round(channel * 255));\n            return Object.assign(Object.assign({}, accumulator), { [name]: `rgba(${red}, ${green}, ${blue}, ${alpha})` });\n        }, {}));\n    }));\n}\nexports.colorFactory = colorFactory;\n"]},"metadata":{},"sourceType":"script"}