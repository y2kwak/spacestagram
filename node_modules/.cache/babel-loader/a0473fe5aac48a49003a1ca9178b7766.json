{"ast":null,"code":"import React$1, { Component } from 'react';\nimport { useStickyManager } from '../../utilities/sticky-manager/hooks.js';\nimport { getRectForNode } from '../../utilities/geometry.js';\n\nclass StickyInner extends Component {\n  constructor() {\n    var _this;\n\n    super(...arguments);\n    _this = this;\n    this.state = {\n      isSticky: false,\n      style: {}\n    };\n    this.placeHolderNode = null;\n    this.stickyNode = null;\n\n    this.setPlaceHolderNode = node => {\n      this.placeHolderNode = node;\n    };\n\n    this.setStickyNode = node => {\n      this.stickyNode = node;\n    };\n\n    this.handlePositioning = function (stick) {\n      let top = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      let left = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      let width = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      const {\n        isSticky\n      } = _this.state;\n\n      if (stick && !isSticky || !stick && isSticky) {\n        _this.adjustPlaceHolderNode(stick);\n\n        _this.setState({\n          isSticky: !isSticky\n        });\n      }\n\n      const style = stick ? {\n        position: 'fixed',\n        top,\n        left,\n        width\n      } : {};\n\n      _this.setState({\n        style\n      });\n    };\n\n    this.adjustPlaceHolderNode = add => {\n      if (this.placeHolderNode && this.stickyNode) {\n        this.placeHolderNode.style.paddingBottom = add ? `${getRectForNode(this.stickyNode).height}px` : '0px';\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      boundingElement,\n      offset = false,\n      disableWhenStacked = false,\n      stickyManager\n    } = this.props;\n    if (!this.stickyNode || !this.placeHolderNode) return;\n    stickyManager.registerStickyItem({\n      stickyNode: this.stickyNode,\n      placeHolderNode: this.placeHolderNode,\n      handlePositioning: this.handlePositioning,\n      offset,\n      boundingElement,\n      disableWhenStacked\n    });\n  }\n\n  componentWillUnmount() {\n    const {\n      stickyManager\n    } = this.props;\n    if (!this.stickyNode) return;\n    stickyManager.unregisterStickyItem(this.stickyNode);\n  }\n\n  render() {\n    const {\n      style,\n      isSticky\n    } = this.state;\n    const {\n      children\n    } = this.props;\n    const childrenContent = isFunction(children) ? children(isSticky) : children;\n    return /*#__PURE__*/React$1.createElement(\"div\", null, /*#__PURE__*/React$1.createElement(\"div\", {\n      ref: this.setPlaceHolderNode\n    }), /*#__PURE__*/React$1.createElement(\"div\", {\n      ref: this.setStickyNode,\n      style: style\n    }, childrenContent));\n  }\n\n} // This should have a typeguard instead of using Function\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction Sticky(props) {\n  const stickyManager = useStickyManager();\n  return /*#__PURE__*/React$1.createElement(StickyInner, Object.assign({}, props, {\n    stickyManager: stickyManager\n  }));\n}\n\nexport { Sticky };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/Sticky/Sticky.js"],"names":["React$1","Component","useStickyManager","getRectForNode","StickyInner","constructor","state","isSticky","style","placeHolderNode","stickyNode","setPlaceHolderNode","node","setStickyNode","handlePositioning","stick","top","left","width","adjustPlaceHolderNode","setState","position","add","paddingBottom","height","componentDidMount","boundingElement","offset","disableWhenStacked","stickyManager","props","registerStickyItem","componentWillUnmount","unregisterStickyItem","render","children","childrenContent","isFunction","createElement","ref","arg","Sticky","Object","assign"],"mappings":"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","sourcesContent":["import React$1, { Component } from 'react';\nimport { useStickyManager } from '../../utilities/sticky-manager/hooks.js';\nimport { getRectForNode } from '../../utilities/geometry.js';\n\nclass StickyInner extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSticky: false,\n      style: {}\n    };\n    this.placeHolderNode = null;\n    this.stickyNode = null;\n\n    this.setPlaceHolderNode = node => {\n      this.placeHolderNode = node;\n    };\n\n    this.setStickyNode = node => {\n      this.stickyNode = node;\n    };\n\n    this.handlePositioning = (stick, top = 0, left = 0, width = 0) => {\n      const {\n        isSticky\n      } = this.state;\n\n      if (stick && !isSticky || !stick && isSticky) {\n        this.adjustPlaceHolderNode(stick);\n        this.setState({\n          isSticky: !isSticky\n        });\n      }\n\n      const style = stick ? {\n        position: 'fixed',\n        top,\n        left,\n        width\n      } : {};\n      this.setState({\n        style\n      });\n    };\n\n    this.adjustPlaceHolderNode = add => {\n      if (this.placeHolderNode && this.stickyNode) {\n        this.placeHolderNode.style.paddingBottom = add ? `${getRectForNode(this.stickyNode).height}px` : '0px';\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      boundingElement,\n      offset = false,\n      disableWhenStacked = false,\n      stickyManager\n    } = this.props;\n    if (!this.stickyNode || !this.placeHolderNode) return;\n    stickyManager.registerStickyItem({\n      stickyNode: this.stickyNode,\n      placeHolderNode: this.placeHolderNode,\n      handlePositioning: this.handlePositioning,\n      offset,\n      boundingElement,\n      disableWhenStacked\n    });\n  }\n\n  componentWillUnmount() {\n    const {\n      stickyManager\n    } = this.props;\n    if (!this.stickyNode) return;\n    stickyManager.unregisterStickyItem(this.stickyNode);\n  }\n\n  render() {\n    const {\n      style,\n      isSticky\n    } = this.state;\n    const {\n      children\n    } = this.props;\n    const childrenContent = isFunction(children) ? children(isSticky) : children;\n    return /*#__PURE__*/React$1.createElement(\"div\", null, /*#__PURE__*/React$1.createElement(\"div\", {\n      ref: this.setPlaceHolderNode\n    }), /*#__PURE__*/React$1.createElement(\"div\", {\n      ref: this.setStickyNode,\n      style: style\n    }, childrenContent));\n  }\n\n} // This should have a typeguard instead of using Function\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction Sticky(props) {\n  const stickyManager = useStickyManager();\n  return /*#__PURE__*/React$1.createElement(StickyInner, Object.assign({}, props, {\n    stickyManager: stickyManager\n  }));\n}\n\nexport { Sticky };\n"]},"metadata":{},"sourceType":"module"}