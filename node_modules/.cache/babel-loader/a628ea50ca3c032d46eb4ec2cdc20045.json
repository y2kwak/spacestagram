{"ast":null,"code":"import React$1, { useRef, useEffect, useCallback, useLayoutEffect } from 'react';\nimport { EventListener as EventListener$1 } from '../../../EventListener/EventListener.js';\nimport styles from '../../TextField.scss.js';\n\nfunction Resizer(_ref) {\n  let {\n    contents,\n    currentHeight: currentHeightProp = null,\n    minimumLines,\n    onHeightChange\n  } = _ref;\n  const contentNode = useRef(null);\n  const minimumLinesNode = useRef(null);\n  const animationFrame = useRef();\n  const currentHeight = useRef(currentHeightProp);\n\n  if (currentHeightProp !== currentHeight.current) {\n    currentHeight.current = currentHeightProp;\n  }\n\n  useEffect(() => {\n    return () => {\n      if (animationFrame.current) {\n        cancelAnimationFrame(animationFrame.current);\n      }\n    };\n  }, []);\n  const minimumLinesMarkup = minimumLines ? /*#__PURE__*/React$1.createElement(\"div\", {\n    ref: minimumLinesNode,\n    className: styles.DummyInput,\n    dangerouslySetInnerHTML: {\n      __html: getContentsForMinimumLines(minimumLines)\n    }\n  }) : null;\n  const handleHeightCheck = useCallback(() => {\n    if (animationFrame.current) {\n      cancelAnimationFrame(animationFrame.current);\n    }\n\n    animationFrame.current = requestAnimationFrame(() => {\n      if (!contentNode.current || !minimumLinesNode.current) {\n        return;\n      }\n\n      const newHeight = Math.max(contentNode.current.offsetHeight, minimumLinesNode.current.offsetHeight);\n\n      if (newHeight !== currentHeight.current) {\n        onHeightChange(newHeight);\n      }\n    });\n  }, [onHeightChange]);\n  useLayoutEffect(() => {\n    handleHeightCheck();\n  });\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    \"aria-hidden\": true,\n    className: styles.Resizer\n  }, /*#__PURE__*/React$1.createElement(EventListener$1, {\n    event: \"resize\",\n    handler: handleHeightCheck\n  }), /*#__PURE__*/React$1.createElement(\"div\", {\n    ref: contentNode,\n    className: styles.DummyInput,\n    dangerouslySetInnerHTML: {\n      __html: getFinalContents(contents)\n    }\n  }), minimumLinesMarkup);\n}\n\nconst ENTITIES_TO_REPLACE = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\\n': '<br>',\n  '\\r': ''\n};\nconst REPLACE_REGEX = new RegExp(`[${Object.keys(ENTITIES_TO_REPLACE).join()}]`, 'g');\n\nfunction replaceEntity(entity) {\n  return ENTITIES_TO_REPLACE[entity];\n}\n\nfunction getContentsForMinimumLines(minimumLines) {\n  let content = '';\n\n  for (let line = 0; line < minimumLines; line++) {\n    content += '<br>';\n  }\n\n  return content;\n}\n\nfunction getFinalContents(contents) {\n  return contents ? `${contents.replace(REPLACE_REGEX, replaceEntity)}<br>` : '<br>';\n}\n\nexport { Resizer };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/TextField/components/Resizer/Resizer.js"],"names":["React$1","useRef","useEffect","useCallback","useLayoutEffect","EventListener","EventListener$1","styles","Resizer","contents","currentHeight","currentHeightProp","minimumLines","onHeightChange","contentNode","minimumLinesNode","animationFrame","current","cancelAnimationFrame","minimumLinesMarkup","createElement","ref","className","DummyInput","dangerouslySetInnerHTML","__html","getContentsForMinimumLines","handleHeightCheck","requestAnimationFrame","newHeight","Math","max","offsetHeight","event","handler","getFinalContents","ENTITIES_TO_REPLACE","REPLACE_REGEX","RegExp","Object","keys","join","replaceEntity","entity","content","line","replace"],"mappings":"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","sourcesContent":["import React$1, { useRef, useEffect, useCallback, useLayoutEffect } from 'react';\nimport { EventListener as EventListener$1 } from '../../../EventListener/EventListener.js';\nimport styles from '../../TextField.scss.js';\n\nfunction Resizer({\n  contents,\n  currentHeight: currentHeightProp = null,\n  minimumLines,\n  onHeightChange\n}) {\n  const contentNode = useRef(null);\n  const minimumLinesNode = useRef(null);\n  const animationFrame = useRef();\n  const currentHeight = useRef(currentHeightProp);\n\n  if (currentHeightProp !== currentHeight.current) {\n    currentHeight.current = currentHeightProp;\n  }\n\n  useEffect(() => {\n    return () => {\n      if (animationFrame.current) {\n        cancelAnimationFrame(animationFrame.current);\n      }\n    };\n  }, []);\n  const minimumLinesMarkup = minimumLines ? /*#__PURE__*/React$1.createElement(\"div\", {\n    ref: minimumLinesNode,\n    className: styles.DummyInput,\n    dangerouslySetInnerHTML: {\n      __html: getContentsForMinimumLines(minimumLines)\n    }\n  }) : null;\n  const handleHeightCheck = useCallback(() => {\n    if (animationFrame.current) {\n      cancelAnimationFrame(animationFrame.current);\n    }\n\n    animationFrame.current = requestAnimationFrame(() => {\n      if (!contentNode.current || !minimumLinesNode.current) {\n        return;\n      }\n\n      const newHeight = Math.max(contentNode.current.offsetHeight, minimumLinesNode.current.offsetHeight);\n\n      if (newHeight !== currentHeight.current) {\n        onHeightChange(newHeight);\n      }\n    });\n  }, [onHeightChange]);\n  useLayoutEffect(() => {\n    handleHeightCheck();\n  });\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    \"aria-hidden\": true,\n    className: styles.Resizer\n  }, /*#__PURE__*/React$1.createElement(EventListener$1, {\n    event: \"resize\",\n    handler: handleHeightCheck\n  }), /*#__PURE__*/React$1.createElement(\"div\", {\n    ref: contentNode,\n    className: styles.DummyInput,\n    dangerouslySetInnerHTML: {\n      __html: getFinalContents(contents)\n    }\n  }), minimumLinesMarkup);\n}\nconst ENTITIES_TO_REPLACE = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\\n': '<br>',\n  '\\r': ''\n};\nconst REPLACE_REGEX = new RegExp(`[${Object.keys(ENTITIES_TO_REPLACE).join()}]`, 'g');\n\nfunction replaceEntity(entity) {\n  return ENTITIES_TO_REPLACE[entity];\n}\n\nfunction getContentsForMinimumLines(minimumLines) {\n  let content = '';\n\n  for (let line = 0; line < minimumLines; line++) {\n    content += '<br>';\n  }\n\n  return content;\n}\n\nfunction getFinalContents(contents) {\n  return contents ? `${contents.replace(REPLACE_REGEX, replaceEntity)}<br>` : '<br>';\n}\n\nexport { Resizer };\n"]},"metadata":{},"sourceType":"module"}