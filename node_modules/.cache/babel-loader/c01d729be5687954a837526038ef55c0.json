{"ast":null,"code":"import React$1 from 'react';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Spinner as Spinner$1 } from '../Spinner/Spinner.js';\nimport { ComboBox as ComboBox$1 } from './components/ComboBox/ComboBox.js';\nimport { TextField as TextField$1 } from './components/TextField/TextField.js';\nimport styles from './Autocomplete.scss.js'; // TypeScript can't generate types that correctly infer the typing of\n// subcomponents so explicitly state the subcomponents in the type definition.\n// Letting this be implicit works in this project but fails in projects that use\n// generated *.d.ts files.\n\nconst Autocomplete = function Autocomplete(_ref) {\n  let {\n    id,\n    options,\n    selected,\n    textField,\n    preferredPosition,\n    listTitle,\n    allowMultiple,\n    loading,\n    actionBefore,\n    willLoadMoreResults,\n    emptyState,\n    onSelect,\n    onLoadMoreResults\n  } = _ref;\n  const i18n = useI18n();\n  const spinnerMarkup = loading ? /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Loading\n  }, /*#__PURE__*/React$1.createElement(Spinner$1, {\n    size: \"small\",\n    accessibilityLabel: i18n.translate('Polaris.Autocomplete.spinnerAccessibilityLabel')\n  })) : null;\n  const conditionalOptions = loading && !willLoadMoreResults ? [] : options;\n  const conditionalAction = actionBefore && actionBefore !== [] ? [actionBefore] : undefined;\n  return /*#__PURE__*/React$1.createElement(ComboBox$1, {\n    id: id,\n    options: conditionalOptions,\n    selected: selected,\n    textField: textField,\n    preferredPosition: preferredPosition,\n    listTitle: listTitle,\n    allowMultiple: allowMultiple,\n    contentAfter: spinnerMarkup,\n    actionsBefore: conditionalAction,\n    onSelect: onSelect,\n    onEndReached: onLoadMoreResults,\n    emptyState: emptyState\n  });\n};\n\nAutocomplete.ComboBox = ComboBox$1;\nAutocomplete.TextField = TextField$1;\nexport { Autocomplete };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/Autocomplete/Autocomplete.js"],"names":["React$1","useI18n","Spinner","Spinner$1","ComboBox","ComboBox$1","TextField","TextField$1","styles","Autocomplete","id","options","selected","textField","preferredPosition","listTitle","allowMultiple","loading","actionBefore","willLoadMoreResults","emptyState","onSelect","onLoadMoreResults","i18n","spinnerMarkup","createElement","className","Loading","size","accessibilityLabel","translate","conditionalOptions","conditionalAction","undefined","contentAfter","actionsBefore","onEndReached"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,OAAO,IAAIC,SAApB,QAAqC,uBAArC;AACA,SAASC,QAAQ,IAAIC,UAArB,QAAuC,mCAAvC;AACA,SAASC,SAAS,IAAIC,WAAtB,QAAyC,qCAAzC;AACA,OAAOC,MAAP,MAAmB,wBAAnB,C,CAEA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG,SAASA,YAAT,OAclB;AAAA,MAdwC;AACzCC,IAAAA,EADyC;AAEzCC,IAAAA,OAFyC;AAGzCC,IAAAA,QAHyC;AAIzCC,IAAAA,SAJyC;AAKzCC,IAAAA,iBALyC;AAMzCC,IAAAA,SANyC;AAOzCC,IAAAA,aAPyC;AAQzCC,IAAAA,OARyC;AASzCC,IAAAA,YATyC;AAUzCC,IAAAA,mBAVyC;AAWzCC,IAAAA,UAXyC;AAYzCC,IAAAA,QAZyC;AAazCC,IAAAA;AAbyC,GAcxC;AACD,QAAMC,IAAI,GAAGtB,OAAO,EAApB;AACA,QAAMuB,aAAa,GAAGP,OAAO,GAAG,aAAajB,OAAO,CAACyB,aAAR,CAAsB,KAAtB,EAA6B;AACxEC,IAAAA,SAAS,EAAElB,MAAM,CAACmB;AADsD,GAA7B,EAE1C,aAAa3B,OAAO,CAACyB,aAAR,CAAsBtB,SAAtB,EAAiC;AAC/CyB,IAAAA,IAAI,EAAE,OADyC;AAE/CC,IAAAA,kBAAkB,EAAEN,IAAI,CAACO,SAAL,CAAe,gDAAf;AAF2B,GAAjC,CAF6B,CAAhB,GAKvB,IALN;AAMA,QAAMC,kBAAkB,GAAGd,OAAO,IAAI,CAACE,mBAAZ,GAAkC,EAAlC,GAAuCR,OAAlE;AACA,QAAMqB,iBAAiB,GAAGd,YAAY,IAAIA,YAAY,KAAK,EAAjC,GAAsC,CAACA,YAAD,CAAtC,GAAuDe,SAAjF;AACA,SAAO,aAAajC,OAAO,CAACyB,aAAR,CAAsBpB,UAAtB,EAAkC;AACpDK,IAAAA,EAAE,EAAEA,EADgD;AAEpDC,IAAAA,OAAO,EAAEoB,kBAF2C;AAGpDnB,IAAAA,QAAQ,EAAEA,QAH0C;AAIpDC,IAAAA,SAAS,EAAEA,SAJyC;AAKpDC,IAAAA,iBAAiB,EAAEA,iBALiC;AAMpDC,IAAAA,SAAS,EAAEA,SANyC;AAOpDC,IAAAA,aAAa,EAAEA,aAPqC;AAQpDkB,IAAAA,YAAY,EAAEV,aARsC;AASpDW,IAAAA,aAAa,EAAEH,iBATqC;AAUpDX,IAAAA,QAAQ,EAAEA,QAV0C;AAWpDe,IAAAA,YAAY,EAAEd,iBAXsC;AAYpDF,IAAAA,UAAU,EAAEA;AAZwC,GAAlC,CAApB;AAcD,CAtCD;;AAuCAX,YAAY,CAACL,QAAb,GAAwBC,UAAxB;AACAI,YAAY,CAACH,SAAb,GAAyBC,WAAzB;AAEA,SAASE,YAAT","sourcesContent":["import React$1 from 'react';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Spinner as Spinner$1 } from '../Spinner/Spinner.js';\nimport { ComboBox as ComboBox$1 } from './components/ComboBox/ComboBox.js';\nimport { TextField as TextField$1 } from './components/TextField/TextField.js';\nimport styles from './Autocomplete.scss.js';\n\n// TypeScript can't generate types that correctly infer the typing of\n// subcomponents so explicitly state the subcomponents in the type definition.\n// Letting this be implicit works in this project but fails in projects that use\n// generated *.d.ts files.\nconst Autocomplete = function Autocomplete({\n  id,\n  options,\n  selected,\n  textField,\n  preferredPosition,\n  listTitle,\n  allowMultiple,\n  loading,\n  actionBefore,\n  willLoadMoreResults,\n  emptyState,\n  onSelect,\n  onLoadMoreResults\n}) {\n  const i18n = useI18n();\n  const spinnerMarkup = loading ? /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.Loading\n  }, /*#__PURE__*/React$1.createElement(Spinner$1, {\n    size: \"small\",\n    accessibilityLabel: i18n.translate('Polaris.Autocomplete.spinnerAccessibilityLabel')\n  })) : null;\n  const conditionalOptions = loading && !willLoadMoreResults ? [] : options;\n  const conditionalAction = actionBefore && actionBefore !== [] ? [actionBefore] : undefined;\n  return /*#__PURE__*/React$1.createElement(ComboBox$1, {\n    id: id,\n    options: conditionalOptions,\n    selected: selected,\n    textField: textField,\n    preferredPosition: preferredPosition,\n    listTitle: listTitle,\n    allowMultiple: allowMultiple,\n    contentAfter: spinnerMarkup,\n    actionsBefore: conditionalAction,\n    onSelect: onSelect,\n    onEndReached: onLoadMoreResults,\n    emptyState: emptyState\n  });\n};\nAutocomplete.ComboBox = ComboBox$1;\nAutocomplete.TextField = TextField$1;\n\nexport { Autocomplete };\n"]},"metadata":{},"sourceType":"module"}