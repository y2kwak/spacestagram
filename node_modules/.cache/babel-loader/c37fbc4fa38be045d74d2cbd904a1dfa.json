{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDeepCompareRef as useDeepCompareRef$1 } from './use-deep-compare-ref.js';\n/**\n * A replacement for React's useCallback that'll allow for custom and deep compares.\n * @see {@link https://reactjs.org/docs/hooks-reference.html#usecallback}\n * @param callback Accepts a callback that's forwarded to React's useCallback\n * @param dependencies A dependency array similar to React's useCallback however it utilizes a deep compare\n * @param customCompare Opportunity to provide a custom compare function\n * @returns A memoized callback\n * @example\n * const Child = memo(function Child({onClick}) {\n *   console.log('Child has rendered.');\n *   return <button onClick={onClick}>Click me</button>;\n * });\n *\n * function ComponentExample() {\n *   const [timesClicked, setTimesClicked] = useState(0);\n *\n *   const handleClick = useDeepCallback(() => {\n *     setTimesClicked((timesClicked) => timesClicked + 1);\n *     // New reference every render\n *   }, [{}]);\n *\n *   return (\n *     <>\n *       <div>Times clicked: {timesClicked}</div>\n *       <Child onClick={handleClick} />\n *     </>\n *   );\n * }\n */\n\nfunction useDeepCallback(callback, dependencies, customCompare) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(callback, useDeepCompareRef$1(dependencies, customCompare));\n}\n\nexport { useDeepCallback };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/utilities/use-deep-callback.js"],"names":["useCallback","useDeepCompareRef","useDeepCompareRef$1","useDeepCallback","callback","dependencies","customCompare"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,iBAAiB,IAAIC,mBAA9B,QAAyD,2BAAzD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,YAAnC,EAAiDC,aAAjD,EAAgE;AAC9D;AACA,SAAON,WAAW,CAACI,QAAD,EAAWF,mBAAmB,CAACG,YAAD,EAAeC,aAAf,CAA9B,CAAlB;AACD;;AAED,SAASH,eAAT","sourcesContent":["import { useCallback } from 'react';\nimport { useDeepCompareRef as useDeepCompareRef$1 } from './use-deep-compare-ref.js';\n\n/**\n * A replacement for React's useCallback that'll allow for custom and deep compares.\n * @see {@link https://reactjs.org/docs/hooks-reference.html#usecallback}\n * @param callback Accepts a callback that's forwarded to React's useCallback\n * @param dependencies A dependency array similar to React's useCallback however it utilizes a deep compare\n * @param customCompare Opportunity to provide a custom compare function\n * @returns A memoized callback\n * @example\n * const Child = memo(function Child({onClick}) {\n *   console.log('Child has rendered.');\n *   return <button onClick={onClick}>Click me</button>;\n * });\n *\n * function ComponentExample() {\n *   const [timesClicked, setTimesClicked] = useState(0);\n *\n *   const handleClick = useDeepCallback(() => {\n *     setTimesClicked((timesClicked) => timesClicked + 1);\n *     // New reference every render\n *   }, [{}]);\n *\n *   return (\n *     <>\n *       <div>Times clicked: {timesClicked}</div>\n *       <Child onClick={handleClick} />\n *     </>\n *   );\n * }\n */\n\nfunction useDeepCallback(callback, dependencies, customCompare) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(callback, useDeepCompareRef$1(dependencies, customCompare));\n}\n\nexport { useDeepCallback };\n"]},"metadata":{},"sourceType":"module"}