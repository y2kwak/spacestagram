{"ast":null,"code":"import React$1, { useRef, useState, useCallback, useMemo, useEffect } from 'react';\nimport { objectWithoutProperties as _objectWithoutProperties } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport debounce$1 from 'lodash/debounce';\nimport { EventListener as EventListener$1 } from '../EventListener/EventListener.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { durationFast } from '@shopify/polaris-tokens';\nimport { classNames } from '../../utilities/css.js';\nimport { EnableSelectionMinor } from '@shopify/polaris-icons';\nimport { VisuallyHidden as VisuallyHidden$1 } from '../VisuallyHidden/VisuallyHidden.js';\nimport { Spinner as Spinner$1 } from '../Spinner/Spinner.js';\nimport { Badge as Badge$1 } from '../Badge/Badge.js';\nimport { Button as Button$1 } from '../Button/Button.js';\nimport { useToggle as useToggle$1 } from '../../utilities/use-toggle.js';\nimport { Stack as Stack$1 } from '../Stack/Stack.js';\nimport { CSSTransition } from 'react-transition-group';\nimport { Checkbox as Checkbox$1 } from '../Checkbox/Checkbox.js';\nimport { BulkActions as BulkActions$1 } from '../BulkActions/BulkActions.js';\nimport { EmptySearchResult as EmptySearchResult$1 } from '../EmptySearchResult/EmptySearchResult.js';\nimport styles from './IndexTable.scss.js';\nimport { Cell as Cell$1 } from './components/Cell/Cell.js';\nimport { SELECT_ALL_ITEMS, SelectionType } from '../../utilities/index-provider/types.js';\nimport { useIndexValue, useIndexSelectionChange } from '../../utilities/index-provider/hooks.js';\nimport { Row as Row$1 } from './components/Row/Row.js';\nimport { ScrollContainer as ScrollContainer$1 } from './components/ScrollContainer/ScrollContainer.js';\nimport { Sticky as Sticky$1 } from '../Sticky/Sticky.js';\nimport { AfterInitialMount as AfterInitialMount$1 } from '../AfterInitialMount/AfterInitialMount.js';\nimport { IndexProvider as IndexProvider$1 } from '../IndexProvider/IndexProvider.js';\nimport { getTableHeadingsBySelector } from './utilities/utilities.js';\nconst SCROLL_BAR_PADDING = 4;\nconst SIXTY_FPS = 1000 / 60;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\nconst SMALL_SCREEN_WIDTH = 458;\n\nvar _ref = /*#__PURE__*/React$1.createElement(Spinner$1, {\n  size: \"small\"\n});\n\nfunction IndexTableBase(_ref3) {\n  let {\n    headings,\n    bulkActions = [],\n    promotedBulkActions = [],\n    children,\n    emptyState,\n    sort\n  } = _ref3;\n  const {\n    loading,\n    bulkSelectState,\n    resourceName,\n    bulkActionsAccessibilityLabel,\n    selectMode,\n    paginatedSelectAllText,\n    itemCount,\n    hasMoreItems,\n    selectedItemsCount,\n    condensed\n  } = useIndexValue();\n  const handleSelectionChange = useIndexSelectionChange();\n  const i18n = useI18n();\n  const {\n    value: hasMoreLeftColumns,\n    toggle: toggleHasMoreLeftColumns\n  } = useToggle$1(false);\n  const onboardingScrollButtons = useRef(false);\n  const tablePosition = useRef({\n    top: 0,\n    left: 0\n  });\n  const tableHeadingRects = useRef([]);\n  const scrollableContainerElement = useRef(null);\n  const tableElement = useRef(null);\n  const condensedListElement = useRef(null);\n  const [tableInitialized, setTableInitialized] = useState(false);\n  const [isSmallScreenSelectable, setIsSmallScreenSelectable] = useState(false);\n  const [stickyWrapper, setStickyWrapper] = useState(null);\n  const tableHeadings = useRef([]);\n  const stickyTableHeadings = useRef([]);\n  const stickyHeaderWrapperElement = useRef(null);\n  const stickyHeaderCheckboxElement = useRef(null);\n  const stickyHeaderElement = useRef(null);\n  const scrollBarElement = useRef(null);\n  const scrollingWithBar = useRef(false);\n  const scrollingContainer = useRef(false);\n  const tableBodyRef = useCallback(node => {\n    if (node !== null && !tableInitialized) {\n      setTableInitialized(true);\n    }\n  }, [tableInitialized]);\n  const toggleIsSmallScreenSelectable = useCallback(() => {\n    setIsSmallScreenSelectable(value => !value);\n  }, []);\n  const handleSelectAllItemsInStore = useCallback(() => {\n    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);\n  }, [handleSelectionChange, selectedItemsCount]);\n  const calculateFirstHeaderOffset = useCallback(() => {\n    return condensed ? tableHeadingRects.current[0].offsetWidth : tableHeadingRects.current[0].offsetWidth + tableHeadingRects.current[1].offsetWidth;\n  }, [condensed]);\n  const resizeTableHeadings = useMemo(() => debounce$1(() => {\n    if (!tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n\n    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();\n    tablePosition.current = {\n      top: boundingRect.top,\n      left: boundingRect.left\n    };\n    tableHeadingRects.current = tableHeadings.current.map(heading => ({\n      offsetWidth: heading.offsetWidth || 0,\n      offsetLeft: heading.offsetLeft || 0\n    }));\n\n    if (tableHeadings.current.length === 0) {\n      return;\n    } // update left offset for first column\n\n\n    if (tableHeadings.current.length > 1) tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`; // update the min width of the checkbox to be the be the un-padded width of the first heading\n\n    if (stickyHeaderCheckboxElement == null ? void 0 : stickyHeaderCheckboxElement.current) {\n      const elementStyle = getComputedStyle(tableHeadings.current[0]);\n      const boxWidth = tableHeadings.current[0].offsetWidth;\n      stickyHeaderCheckboxElement.current.style.minWidth = `calc(${boxWidth}px - ${elementStyle.paddingLeft} - ${elementStyle.paddingRight} + 2px)`;\n    } // update sticky header min-widths\n\n\n    stickyTableHeadings.current.forEach((heading, index) => {\n      let minWidth = 0;\n\n      if (index === 0 && !isSmallScreen()) {\n        minWidth = calculateFirstHeaderOffset();\n      } else if (tableHeadingRects.current.length > index) {\n        minWidth = tableHeadingRects.current[index].offsetWidth;\n      }\n\n      heading.style.minWidth = `${minWidth}px`;\n    });\n  }, SIXTY_FPS, {\n    leading: true,\n    trailing: true,\n    maxWait: SIXTY_FPS\n  }), [calculateFirstHeaderOffset]);\n  const resizeTableScrollBar = useCallback(() => {\n    if (scrollBarElement.current && tableElement.current && tableInitialized) {\n      scrollBarElement.current.style.setProperty('--p-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);\n    }\n  }, [tableInitialized]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const debounceResizeTableScrollbar = useCallback(debounce$1(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {\n    trailing: true\n  }), [resizeTableScrollBar]);\n  const handleResize = useCallback(() => {\n    var _scrollBarElement$cur; // hide the scrollbar when resizing\n\n\n    (_scrollBarElement$cur = scrollBarElement.current) == null ? void 0 : _scrollBarElement$cur.style.setProperty('--p-scroll-bar-content-width', `0px`);\n    resizeTableHeadings();\n    debounceResizeTableScrollbar();\n  }, [debounceResizeTableScrollbar, resizeTableHeadings]);\n  const handleScrollContainerScroll = useCallback((canScrollLeft, canScrollRight) => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n\n    if (!scrollingWithBar.current) {\n      scrollingContainer.current = true;\n      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n\n    scrollingWithBar.current = false;\n\n    if (stickyHeaderElement.current) {\n      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n\n    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {\n      toggleHasMoreLeftColumns();\n    }\n\n    if (!canScrollRight) {\n      onboardingScrollButtons.current = false;\n    }\n  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);\n  const handleScrollBarScroll = useCallback(() => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n\n    if (!scrollingContainer.current) {\n      scrollingWithBar.current = true;\n      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;\n    }\n\n    scrollingContainer.current = false;\n  }, []);\n  useEffect(() => {\n    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');\n    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');\n    resizeTableHeadings();\n  }, [headings, resizeTableHeadings, stickyHeaderCheckboxElement, tableInitialized]);\n  useEffect(() => {\n    resizeTableScrollBar();\n    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);\n  }, [tableInitialized, resizeTableScrollBar, condensed]);\n  useEffect(() => {\n    if (!condensed && isSmallScreenSelectable) {\n      setIsSmallScreenSelectable(false);\n    }\n  }, [condensed, isSmallScreenSelectable]);\n  const selectable = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0);\n  const headingsMarkup = headings.map(renderHeading).reduce((acc, heading) => acc.concat(heading), []);\n  const bulkActionsSelectable = Boolean(promotedBulkActions.length > 0 || bulkActions.length > 0);\n  const stickyColumnHeaderStyle = tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n    minWidth: calculateFirstHeaderOffset()\n  } : undefined;\n  const stickyColumnHeader = /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.TableHeading,\n    key: headings[0].title,\n    style: stickyColumnHeaderStyle,\n    \"data-index-table-sticky-heading\": true\n  }, /*#__PURE__*/React$1.createElement(Stack$1, {\n    spacing: \"none\",\n    wrap: false,\n    alignment: \"center\"\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.StickyColumnHeaderCheckbox,\n    ref: stickyHeaderCheckboxElement\n  }, renderCheckboxContent()), /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles['StickyTableHeading-second-scrolling']\n  }, renderHeadingContent(headings[0]))));\n  const stickyHeadingsMarkup = headings.map(renderStickyHeading);\n  const selectedItemsCountLabel = selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;\n  const handleTogglePage = useCallback(() => {\n    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));\n  }, [bulkSelectState, handleSelectionChange]);\n  const paginatedSelectAllAction = getPaginatedSelectAllAction();\n  const loadingTransitionClassNames = {\n    enter: styles['LoadingContainer-enter'],\n    enterActive: styles['LoadingContainer-enter-active'],\n    exit: styles['LoadingContainer-exit'],\n    exitActive: styles['LoadingContainer-exit-active']\n  };\n  const loadingMarkup = /*#__PURE__*/React$1.createElement(CSSTransition, {\n    in: loading,\n    classNames: loadingTransitionClassNames,\n    timeout: durationFast,\n    appear: true,\n    unmountOnExit: true\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.LoadingPanel\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.LoadingPanelRow\n  }, _ref, /*#__PURE__*/React$1.createElement(\"span\", {\n    className: styles.LoadingPanelText\n  }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n    resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n  })))));\n  const stickyTableClassNames = classNames(styles.StickyTable, condensed && styles['StickyTable-condensed']);\n  const shouldShowBulkActions = bulkActionsSelectable && selectedItemsCount || isSmallScreenSelectable;\n  const stickyHeaderMarkup = /*#__PURE__*/React$1.createElement(\"div\", {\n    className: stickyTableClassNames,\n    role: \"presentation\"\n  }, /*#__PURE__*/React$1.createElement(Sticky$1, {\n    boundingElement: stickyWrapper\n  }, isSticky => {\n    const stickyHeaderClassNames = classNames(styles.StickyTableHeader, isSticky && styles['StickyTableHeader-isSticky']);\n    const bulkActionClassNames = classNames(styles.BulkActionsWrapper, condensed && styles['StickyTableHeader-condensed'], isSticky && styles['StickyTableHeader-isSticky']);\n    const shouldShowActions = !condensed || selectedItemsCount;\n    const promotedActions = shouldShowActions ? promotedBulkActions : [];\n    const actions = shouldShowActions ? bulkActions : [];\n    const bulkActionsMarkup = shouldShowBulkActions ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: bulkActionClassNames,\n      \"data-condensed\": condensed\n    }, loadingMarkup, /*#__PURE__*/React$1.createElement(BulkActions$1, {\n      smallScreen: condensed,\n      label: i18n.translate('Polaris.IndexTable.selected', {\n        selectedItemsCount: selectedItemsCountLabel\n      }),\n      accessibilityLabel: bulkActionsAccessibilityLabel,\n      selected: bulkSelectState,\n      selectMode: selectMode || isSmallScreenSelectable,\n      onToggleAll: handleTogglePage,\n      promotedActions: promotedActions,\n      actions: actions,\n      paginatedSelectAllText: paginatedSelectAllText,\n      paginatedSelectAllAction: paginatedSelectAllAction,\n      onSelectModeToggle: condensed ? handleSelectModeToggle : undefined\n    })) : null;\n    const stickyColumnHeaderClassNames = classNames(styles.StickyTableColumnHeader, hasMoreLeftColumns && styles['StickyTableColumnHeader-isScrolling']);\n    const headerMarkup = condensed ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.HeaderWrapper\n    }, loadingMarkup, sort, /*#__PURE__*/React$1.createElement(Button$1, {\n      icon: EnableSelectionMinor,\n      onClick: toggleIsSmallScreenSelectable\n    }, i18n.translate('Polaris.IndexTable.selectButtonText'))) : /*#__PURE__*/React$1.createElement(\"div\", {\n      className: stickyHeaderClassNames,\n      ref: stickyHeaderWrapperElement\n    }, loadingMarkup, /*#__PURE__*/React$1.createElement(\"div\", {\n      className: stickyColumnHeaderClassNames\n    }, stickyColumnHeader), /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.StickyTableHeadings,\n      ref: stickyHeaderElement\n    }, stickyHeadingsMarkup));\n    const stickyContent = bulkActionsMarkup ? bulkActionsMarkup : headerMarkup;\n    return stickyContent;\n  }));\n  const scrollBarWrapperClassNames = classNames(styles.ScrollBarContainer, condensed && styles.scrollBarContainerCondensed);\n  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles.ScrollBarContent);\n  const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/React$1.createElement(AfterInitialMount$1, null, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: scrollBarWrapperClassNames\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    onScroll: handleScrollBarScroll,\n    className: styles.ScrollBar,\n    ref: scrollBarElement\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: scrollBarClassNames\n  })))) : null;\n  const tableClassNames = classNames(styles.Table, hasMoreLeftColumns && styles['Table-scrolling'], selectMode && styles.disableTextSelection, selectMode && shouldShowBulkActions && styles.selectMode);\n  const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/React$1.createElement(EmptySearchResult$1, {\n    title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {\n      resourceNamePlural: resourceName.plural\n    }),\n    description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),\n    withIllustration: true\n  });\n  const sharedMarkup = /*#__PURE__*/React$1.createElement(React$1.Fragment, null, /*#__PURE__*/React$1.createElement(EventListener$1, {\n    event: \"resize\",\n    handler: handleResize\n  }), /*#__PURE__*/React$1.createElement(AfterInitialMount$1, null, stickyHeaderMarkup));\n  const bodyMarkup = condensed ? /*#__PURE__*/React$1.createElement(React$1.Fragment, null, sharedMarkup, /*#__PURE__*/React$1.createElement(\"ul\", {\n    \"data-selectmode\": Boolean(selectMode || isSmallScreenSelectable),\n    className: styles.CondensedList,\n    ref: condensedListElement\n  }, children)) : /*#__PURE__*/React$1.createElement(React$1.Fragment, null, sharedMarkup, /*#__PURE__*/React$1.createElement(ScrollContainer$1, {\n    scrollableContainerRef: scrollableContainerElement,\n    onScroll: handleScrollContainerScroll\n  }, /*#__PURE__*/React$1.createElement(\"table\", {\n    ref: tableElement,\n    className: tableClassNames\n  }, /*#__PURE__*/React$1.createElement(\"thead\", null, /*#__PURE__*/React$1.createElement(\"tr\", {\n    className: styles.HeadingRow\n  }, headingsMarkup)), /*#__PURE__*/React$1.createElement(\"tbody\", {\n    ref: tableBodyRef\n  }, children))));\n  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.EmptySearchResultWrapper\n  }, emptyStateMarkup);\n  return /*#__PURE__*/React$1.createElement(React$1.Fragment, null, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.IndexTable\n  }, !shouldShowBulkActions && !condensed && loadingMarkup, tableContentMarkup), scrollBarMarkup);\n\n  function renderHeading(heading, index) {\n    const isSecond = index === 0;\n    const headingContentClassName = classNames(styles.TableHeading, isSecond && styles['TableHeading-second']);\n    const stickyPositioningStyle = isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n      left: tableHeadingRects.current[0].offsetWidth\n    } : undefined;\n    const headingContent = /*#__PURE__*/React$1.createElement(\"th\", {\n      className: headingContentClassName,\n      key: heading.title,\n      \"data-index-table-heading\": true,\n      style: stickyPositioningStyle\n    }, renderHeadingContent(heading));\n    if (index !== 0) return headingContent;\n    const checkboxClassName = classNames(styles.TableHeading, index === 0 && styles['TableHeading-first']);\n    const checkboxContent = /*#__PURE__*/React$1.createElement(\"th\", {\n      className: checkboxClassName,\n      key: `${heading}-${index}`,\n      \"data-index-table-heading\": true\n    }, renderCheckboxContent());\n    return [checkboxContent, headingContent];\n  }\n\n  function renderCheckboxContent() {\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.ColumnHeaderCheckboxWrapper\n    }, /*#__PURE__*/React$1.createElement(Checkbox$1, {\n      label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n        resourceNamePlural: resourceName.plural\n      }),\n      labelHidden: true,\n      onChange: handleSelectPage,\n      checked: bulkSelectState\n    }));\n  }\n\n  function renderHeadingContent(heading) {\n    let headingContent;\n\n    if (heading.new) {\n      headingContent = /*#__PURE__*/React$1.createElement(Stack$1, {\n        wrap: false,\n        alignment: \"center\"\n      }, /*#__PURE__*/React$1.createElement(\"span\", null, heading.title), /*#__PURE__*/React$1.createElement(Badge$1, {\n        status: \"new\"\n      }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));\n    } else if (heading.hidden) {\n      headingContent = /*#__PURE__*/React$1.createElement(VisuallyHidden$1, null, heading.title);\n    } else {\n      headingContent = heading.title;\n    }\n\n    return headingContent;\n  }\n\n  function handleSelectPage(checked) {\n    handleSelectionChange(SelectionType.Page, checked);\n  }\n\n  function renderStickyHeading(heading, index) {\n    const position = index + 1;\n    const headingStyle = tableHeadingRects.current && tableHeadingRects.current.length > position ? {\n      minWidth: tableHeadingRects.current[position].offsetWidth\n    } : undefined;\n    const headingContent = renderHeadingContent(heading);\n    const stickyHeadingClassName = classNames(styles.TableHeading, index === 0 && styles['StickyTableHeading-second']);\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      className: stickyHeadingClassName,\n      key: heading.title,\n      style: headingStyle,\n      \"data-index-table-sticky-heading\": true\n    }, headingContent);\n  }\n\n  function getPaginatedSelectAllAction() {\n    if (!selectable || !hasMoreItems) {\n      return;\n    }\n\n    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount,\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    });\n    return {\n      content: actionText,\n      onAction: handleSelectAllItemsInStore\n    };\n  }\n\n  function handleSelectModeToggle(val) {\n    handleSelectionChange(SelectionType.All, false);\n    setIsSmallScreenSelectable(val);\n  }\n}\n\nconst isSmallScreen = () => {\n  return typeof window === 'undefined' ? false : window.innerWidth < SMALL_SCREEN_WIDTH;\n};\n\nfunction IndexTable(_ref2) {\n  let {\n    children,\n    selectable,\n    itemCount,\n    selectedItemsCount,\n    resourceName: passedResourceName,\n    loading,\n    hasMoreItems,\n    condensed,\n    onSelectionChange\n  } = _ref2,\n      indexTableBaseProps = _objectWithoutProperties(_ref2, [\"children\", \"selectable\", \"itemCount\", \"selectedItemsCount\", \"resourceName\", \"loading\", \"hasMoreItems\", \"condensed\", \"onSelectionChange\"]);\n\n  return /*#__PURE__*/React$1.createElement(IndexProvider$1, {\n    selectable: selectable,\n    itemCount: itemCount,\n    selectedItemsCount: selectedItemsCount,\n    resourceName: passedResourceName,\n    loading: loading,\n    hasMoreItems: hasMoreItems,\n    condensed: condensed,\n    onSelectionChange: onSelectionChange\n  }, /*#__PURE__*/React$1.createElement(IndexTableBase, indexTableBaseProps, children));\n}\n\nIndexTable.Cell = Cell$1;\nIndexTable.Row = Row$1;\nexport { IndexTable };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/IndexTable/IndexTable.js"],"names":["React$1","useRef","useState","useCallback","useMemo","useEffect","objectWithoutProperties","_objectWithoutProperties","debounce$1","EventListener","EventListener$1","useI18n","durationFast","classNames","EnableSelectionMinor","VisuallyHidden","VisuallyHidden$1","Spinner","Spinner$1","Badge","Badge$1","Button","Button$1","useToggle","useToggle$1","Stack","Stack$1","CSSTransition","Checkbox","Checkbox$1","BulkActions","BulkActions$1","EmptySearchResult","EmptySearchResult$1","styles","Cell","Cell$1","SELECT_ALL_ITEMS","SelectionType","useIndexValue","useIndexSelectionChange","Row","Row$1","ScrollContainer","ScrollContainer$1","Sticky","Sticky$1","AfterInitialMount","AfterInitialMount$1","IndexProvider","IndexProvider$1","getTableHeadingsBySelector","SCROLL_BAR_PADDING","SIXTY_FPS","SCROLL_BAR_DEBOUNCE_PERIOD","SMALL_SCREEN_WIDTH","_ref","createElement","size","IndexTableBase","headings","bulkActions","promotedBulkActions","children","emptyState","sort","loading","bulkSelectState","resourceName","bulkActionsAccessibilityLabel","selectMode","paginatedSelectAllText","itemCount","hasMoreItems","selectedItemsCount","condensed","handleSelectionChange","i18n","value","hasMoreLeftColumns","toggle","toggleHasMoreLeftColumns","onboardingScrollButtons","tablePosition","top","left","tableHeadingRects","scrollableContainerElement","tableElement","condensedListElement","tableInitialized","setTableInitialized","isSmallScreenSelectable","setIsSmallScreenSelectable","stickyWrapper","setStickyWrapper","tableHeadings","stickyTableHeadings","stickyHeaderWrapperElement","stickyHeaderCheckboxElement","stickyHeaderElement","scrollBarElement","scrollingWithBar","scrollingContainer","tableBodyRef","node","toggleIsSmallScreenSelectable","handleSelectAllItemsInStore","Page","All","calculateFirstHeaderOffset","current","offsetWidth","resizeTableHeadings","boundingRect","getBoundingClientRect","map","heading","offsetLeft","length","style","elementStyle","getComputedStyle","boxWidth","minWidth","paddingLeft","paddingRight","forEach","index","isSmallScreen","leading","trailing","maxWait","resizeTableScrollBar","setProperty","debounceResizeTableScrollbar","handleResize","_scrollBarElement$cur","handleScrollContainerScroll","canScrollLeft","canScrollRight","scrollLeft","handleScrollBarScroll","selectable","Boolean","headingsMarkup","renderHeading","reduce","acc","concat","bulkActionsSelectable","stickyColumnHeaderStyle","undefined","stickyColumnHeader","className","TableHeading","key","title","spacing","wrap","alignment","StickyColumnHeaderCheckbox","ref","renderCheckboxContent","renderHeadingContent","stickyHeadingsMarkup","renderStickyHeading","selectedItemsCountLabel","handleTogglePage","paginatedSelectAllAction","getPaginatedSelectAllAction","loadingTransitionClassNames","enter","enterActive","exit","exitActive","loadingMarkup","in","timeout","appear","unmountOnExit","LoadingPanel","LoadingPanelRow","LoadingPanelText","translate","resourceNamePlural","plural","toLocaleLowerCase","stickyTableClassNames","StickyTable","shouldShowBulkActions","stickyHeaderMarkup","role","boundingElement","isSticky","stickyHeaderClassNames","StickyTableHeader","bulkActionClassNames","BulkActionsWrapper","shouldShowActions","promotedActions","actions","bulkActionsMarkup","smallScreen","label","accessibilityLabel","selected","onToggleAll","onSelectModeToggle","handleSelectModeToggle","stickyColumnHeaderClassNames","StickyTableColumnHeader","headerMarkup","HeaderWrapper","icon","onClick","StickyTableHeadings","stickyContent","scrollBarWrapperClassNames","ScrollBarContainer","scrollBarContainerCondensed","scrollBarClassNames","ScrollBarContent","scrollBarMarkup","onScroll","ScrollBar","tableClassNames","Table","disableTextSelection","emptyStateMarkup","description","withIllustration","sharedMarkup","Fragment","event","handler","bodyMarkup","CondensedList","scrollableContainerRef","HeadingRow","tableContentMarkup","EmptySearchResultWrapper","IndexTable","isSecond","headingContentClassName","stickyPositioningStyle","headingContent","checkboxClassName","checkboxContent","ColumnHeaderCheckboxWrapper","labelHidden","onChange","handleSelectPage","checked","new","status","hidden","position","headingStyle","stickyHeadingClassName","actionText","itemsLength","content","onAction","val","window","innerWidth","_ref2","passedResourceName","onSelectionChange","indexTableBaseProps"],"mappings":"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","sourcesContent":["import React$1, { useRef, useState, useCallback, useMemo, useEffect } from 'react';\nimport { objectWithoutProperties as _objectWithoutProperties } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport debounce$1 from 'lodash/debounce';\nimport { EventListener as EventListener$1 } from '../EventListener/EventListener.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { durationFast } from '@shopify/polaris-tokens';\nimport { classNames } from '../../utilities/css.js';\nimport { EnableSelectionMinor } from '@shopify/polaris-icons';\nimport { VisuallyHidden as VisuallyHidden$1 } from '../VisuallyHidden/VisuallyHidden.js';\nimport { Spinner as Spinner$1 } from '../Spinner/Spinner.js';\nimport { Badge as Badge$1 } from '../Badge/Badge.js';\nimport { Button as Button$1 } from '../Button/Button.js';\nimport { useToggle as useToggle$1 } from '../../utilities/use-toggle.js';\nimport { Stack as Stack$1 } from '../Stack/Stack.js';\nimport { CSSTransition } from 'react-transition-group';\nimport { Checkbox as Checkbox$1 } from '../Checkbox/Checkbox.js';\nimport { BulkActions as BulkActions$1 } from '../BulkActions/BulkActions.js';\nimport { EmptySearchResult as EmptySearchResult$1 } from '../EmptySearchResult/EmptySearchResult.js';\nimport styles from './IndexTable.scss.js';\nimport { Cell as Cell$1 } from './components/Cell/Cell.js';\nimport { SELECT_ALL_ITEMS, SelectionType } from '../../utilities/index-provider/types.js';\nimport { useIndexValue, useIndexSelectionChange } from '../../utilities/index-provider/hooks.js';\nimport { Row as Row$1 } from './components/Row/Row.js';\nimport { ScrollContainer as ScrollContainer$1 } from './components/ScrollContainer/ScrollContainer.js';\nimport { Sticky as Sticky$1 } from '../Sticky/Sticky.js';\nimport { AfterInitialMount as AfterInitialMount$1 } from '../AfterInitialMount/AfterInitialMount.js';\nimport { IndexProvider as IndexProvider$1 } from '../IndexProvider/IndexProvider.js';\nimport { getTableHeadingsBySelector } from './utilities/utilities.js';\n\nconst SCROLL_BAR_PADDING = 4;\nconst SIXTY_FPS = 1000 / 60;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\nconst SMALL_SCREEN_WIDTH = 458;\n\nvar _ref = /*#__PURE__*/React$1.createElement(Spinner$1, {\n  size: \"small\"\n});\n\nfunction IndexTableBase({\n  headings,\n  bulkActions = [],\n  promotedBulkActions = [],\n  children,\n  emptyState,\n  sort\n}) {\n  const {\n    loading,\n    bulkSelectState,\n    resourceName,\n    bulkActionsAccessibilityLabel,\n    selectMode,\n    paginatedSelectAllText,\n    itemCount,\n    hasMoreItems,\n    selectedItemsCount,\n    condensed\n  } = useIndexValue();\n  const handleSelectionChange = useIndexSelectionChange();\n  const i18n = useI18n();\n  const {\n    value: hasMoreLeftColumns,\n    toggle: toggleHasMoreLeftColumns\n  } = useToggle$1(false);\n  const onboardingScrollButtons = useRef(false);\n  const tablePosition = useRef({\n    top: 0,\n    left: 0\n  });\n  const tableHeadingRects = useRef([]);\n  const scrollableContainerElement = useRef(null);\n  const tableElement = useRef(null);\n  const condensedListElement = useRef(null);\n  const [tableInitialized, setTableInitialized] = useState(false);\n  const [isSmallScreenSelectable, setIsSmallScreenSelectable] = useState(false);\n  const [stickyWrapper, setStickyWrapper] = useState(null);\n  const tableHeadings = useRef([]);\n  const stickyTableHeadings = useRef([]);\n  const stickyHeaderWrapperElement = useRef(null);\n  const stickyHeaderCheckboxElement = useRef(null);\n  const stickyHeaderElement = useRef(null);\n  const scrollBarElement = useRef(null);\n  const scrollingWithBar = useRef(false);\n  const scrollingContainer = useRef(false);\n  const tableBodyRef = useCallback(node => {\n    if (node !== null && !tableInitialized) {\n      setTableInitialized(true);\n    }\n  }, [tableInitialized]);\n  const toggleIsSmallScreenSelectable = useCallback(() => {\n    setIsSmallScreenSelectable(value => !value);\n  }, []);\n  const handleSelectAllItemsInStore = useCallback(() => {\n    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);\n  }, [handleSelectionChange, selectedItemsCount]);\n  const calculateFirstHeaderOffset = useCallback(() => {\n    return condensed ? tableHeadingRects.current[0].offsetWidth : tableHeadingRects.current[0].offsetWidth + tableHeadingRects.current[1].offsetWidth;\n  }, [condensed]);\n  const resizeTableHeadings = useMemo(() => debounce$1(() => {\n    if (!tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n\n    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();\n    tablePosition.current = {\n      top: boundingRect.top,\n      left: boundingRect.left\n    };\n    tableHeadingRects.current = tableHeadings.current.map(heading => ({\n      offsetWidth: heading.offsetWidth || 0,\n      offsetLeft: heading.offsetLeft || 0\n    }));\n\n    if (tableHeadings.current.length === 0) {\n      return;\n    } // update left offset for first column\n\n\n    if (tableHeadings.current.length > 1) tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`; // update the min width of the checkbox to be the be the un-padded width of the first heading\n\n    if (stickyHeaderCheckboxElement == null ? void 0 : stickyHeaderCheckboxElement.current) {\n      const elementStyle = getComputedStyle(tableHeadings.current[0]);\n      const boxWidth = tableHeadings.current[0].offsetWidth;\n      stickyHeaderCheckboxElement.current.style.minWidth = `calc(${boxWidth}px - ${elementStyle.paddingLeft} - ${elementStyle.paddingRight} + 2px)`;\n    } // update sticky header min-widths\n\n\n    stickyTableHeadings.current.forEach((heading, index) => {\n      let minWidth = 0;\n\n      if (index === 0 && !isSmallScreen()) {\n        minWidth = calculateFirstHeaderOffset();\n      } else if (tableHeadingRects.current.length > index) {\n        minWidth = tableHeadingRects.current[index].offsetWidth;\n      }\n\n      heading.style.minWidth = `${minWidth}px`;\n    });\n  }, SIXTY_FPS, {\n    leading: true,\n    trailing: true,\n    maxWait: SIXTY_FPS\n  }), [calculateFirstHeaderOffset]);\n  const resizeTableScrollBar = useCallback(() => {\n    if (scrollBarElement.current && tableElement.current && tableInitialized) {\n      scrollBarElement.current.style.setProperty('--p-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);\n    }\n  }, [tableInitialized]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const debounceResizeTableScrollbar = useCallback(debounce$1(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {\n    trailing: true\n  }), [resizeTableScrollBar]);\n  const handleResize = useCallback(() => {\n    var _scrollBarElement$cur;\n\n    // hide the scrollbar when resizing\n    (_scrollBarElement$cur = scrollBarElement.current) == null ? void 0 : _scrollBarElement$cur.style.setProperty('--p-scroll-bar-content-width', `0px`);\n    resizeTableHeadings();\n    debounceResizeTableScrollbar();\n  }, [debounceResizeTableScrollbar, resizeTableHeadings]);\n  const handleScrollContainerScroll = useCallback((canScrollLeft, canScrollRight) => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n\n    if (!scrollingWithBar.current) {\n      scrollingContainer.current = true;\n      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n\n    scrollingWithBar.current = false;\n\n    if (stickyHeaderElement.current) {\n      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n\n    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {\n      toggleHasMoreLeftColumns();\n    }\n\n    if (!canScrollRight) {\n      onboardingScrollButtons.current = false;\n    }\n  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);\n  const handleScrollBarScroll = useCallback(() => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n\n    if (!scrollingContainer.current) {\n      scrollingWithBar.current = true;\n      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;\n    }\n\n    scrollingContainer.current = false;\n  }, []);\n  useEffect(() => {\n    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');\n    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');\n    resizeTableHeadings();\n  }, [headings, resizeTableHeadings, stickyHeaderCheckboxElement, tableInitialized]);\n  useEffect(() => {\n    resizeTableScrollBar();\n    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);\n  }, [tableInitialized, resizeTableScrollBar, condensed]);\n  useEffect(() => {\n    if (!condensed && isSmallScreenSelectable) {\n      setIsSmallScreenSelectable(false);\n    }\n  }, [condensed, isSmallScreenSelectable]);\n  const selectable = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0);\n  const headingsMarkup = headings.map(renderHeading).reduce((acc, heading) => acc.concat(heading), []);\n  const bulkActionsSelectable = Boolean(promotedBulkActions.length > 0 || bulkActions.length > 0);\n  const stickyColumnHeaderStyle = tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n    minWidth: calculateFirstHeaderOffset()\n  } : undefined;\n  const stickyColumnHeader = /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.TableHeading,\n    key: headings[0].title,\n    style: stickyColumnHeaderStyle,\n    \"data-index-table-sticky-heading\": true\n  }, /*#__PURE__*/React$1.createElement(Stack$1, {\n    spacing: \"none\",\n    wrap: false,\n    alignment: \"center\"\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.StickyColumnHeaderCheckbox,\n    ref: stickyHeaderCheckboxElement\n  }, renderCheckboxContent()), /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles['StickyTableHeading-second-scrolling']\n  }, renderHeadingContent(headings[0]))));\n  const stickyHeadingsMarkup = headings.map(renderStickyHeading);\n  const selectedItemsCountLabel = selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;\n  const handleTogglePage = useCallback(() => {\n    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));\n  }, [bulkSelectState, handleSelectionChange]);\n  const paginatedSelectAllAction = getPaginatedSelectAllAction();\n  const loadingTransitionClassNames = {\n    enter: styles['LoadingContainer-enter'],\n    enterActive: styles['LoadingContainer-enter-active'],\n    exit: styles['LoadingContainer-exit'],\n    exitActive: styles['LoadingContainer-exit-active']\n  };\n  const loadingMarkup = /*#__PURE__*/React$1.createElement(CSSTransition, {\n    in: loading,\n    classNames: loadingTransitionClassNames,\n    timeout: durationFast,\n    appear: true,\n    unmountOnExit: true\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.LoadingPanel\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.LoadingPanelRow\n  }, _ref, /*#__PURE__*/React$1.createElement(\"span\", {\n    className: styles.LoadingPanelText\n  }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n    resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n  })))));\n  const stickyTableClassNames = classNames(styles.StickyTable, condensed && styles['StickyTable-condensed']);\n  const shouldShowBulkActions = bulkActionsSelectable && selectedItemsCount || isSmallScreenSelectable;\n  const stickyHeaderMarkup = /*#__PURE__*/React$1.createElement(\"div\", {\n    className: stickyTableClassNames,\n    role: \"presentation\"\n  }, /*#__PURE__*/React$1.createElement(Sticky$1, {\n    boundingElement: stickyWrapper\n  }, isSticky => {\n    const stickyHeaderClassNames = classNames(styles.StickyTableHeader, isSticky && styles['StickyTableHeader-isSticky']);\n    const bulkActionClassNames = classNames(styles.BulkActionsWrapper, condensed && styles['StickyTableHeader-condensed'], isSticky && styles['StickyTableHeader-isSticky']);\n    const shouldShowActions = !condensed || selectedItemsCount;\n    const promotedActions = shouldShowActions ? promotedBulkActions : [];\n    const actions = shouldShowActions ? bulkActions : [];\n    const bulkActionsMarkup = shouldShowBulkActions ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: bulkActionClassNames,\n      \"data-condensed\": condensed\n    }, loadingMarkup, /*#__PURE__*/React$1.createElement(BulkActions$1, {\n      smallScreen: condensed,\n      label: i18n.translate('Polaris.IndexTable.selected', {\n        selectedItemsCount: selectedItemsCountLabel\n      }),\n      accessibilityLabel: bulkActionsAccessibilityLabel,\n      selected: bulkSelectState,\n      selectMode: selectMode || isSmallScreenSelectable,\n      onToggleAll: handleTogglePage,\n      promotedActions: promotedActions,\n      actions: actions,\n      paginatedSelectAllText: paginatedSelectAllText,\n      paginatedSelectAllAction: paginatedSelectAllAction,\n      onSelectModeToggle: condensed ? handleSelectModeToggle : undefined\n    })) : null;\n    const stickyColumnHeaderClassNames = classNames(styles.StickyTableColumnHeader, hasMoreLeftColumns && styles['StickyTableColumnHeader-isScrolling']);\n    const headerMarkup = condensed ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.HeaderWrapper\n    }, loadingMarkup, sort, /*#__PURE__*/React$1.createElement(Button$1, {\n      icon: EnableSelectionMinor,\n      onClick: toggleIsSmallScreenSelectable\n    }, i18n.translate('Polaris.IndexTable.selectButtonText'))) : /*#__PURE__*/React$1.createElement(\"div\", {\n      className: stickyHeaderClassNames,\n      ref: stickyHeaderWrapperElement\n    }, loadingMarkup, /*#__PURE__*/React$1.createElement(\"div\", {\n      className: stickyColumnHeaderClassNames\n    }, stickyColumnHeader), /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.StickyTableHeadings,\n      ref: stickyHeaderElement\n    }, stickyHeadingsMarkup));\n    const stickyContent = bulkActionsMarkup ? bulkActionsMarkup : headerMarkup;\n    return stickyContent;\n  }));\n  const scrollBarWrapperClassNames = classNames(styles.ScrollBarContainer, condensed && styles.scrollBarContainerCondensed);\n  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles.ScrollBarContent);\n  const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/React$1.createElement(AfterInitialMount$1, null, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: scrollBarWrapperClassNames\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    onScroll: handleScrollBarScroll,\n    className: styles.ScrollBar,\n    ref: scrollBarElement\n  }, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: scrollBarClassNames\n  })))) : null;\n  const tableClassNames = classNames(styles.Table, hasMoreLeftColumns && styles['Table-scrolling'], selectMode && styles.disableTextSelection, selectMode && shouldShowBulkActions && styles.selectMode);\n  const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/React$1.createElement(EmptySearchResult$1, {\n    title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {\n      resourceNamePlural: resourceName.plural\n    }),\n    description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),\n    withIllustration: true\n  });\n  const sharedMarkup = /*#__PURE__*/React$1.createElement(React$1.Fragment, null, /*#__PURE__*/React$1.createElement(EventListener$1, {\n    event: \"resize\",\n    handler: handleResize\n  }), /*#__PURE__*/React$1.createElement(AfterInitialMount$1, null, stickyHeaderMarkup));\n  const bodyMarkup = condensed ? /*#__PURE__*/React$1.createElement(React$1.Fragment, null, sharedMarkup, /*#__PURE__*/React$1.createElement(\"ul\", {\n    \"data-selectmode\": Boolean(selectMode || isSmallScreenSelectable),\n    className: styles.CondensedList,\n    ref: condensedListElement\n  }, children)) : /*#__PURE__*/React$1.createElement(React$1.Fragment, null, sharedMarkup, /*#__PURE__*/React$1.createElement(ScrollContainer$1, {\n    scrollableContainerRef: scrollableContainerElement,\n    onScroll: handleScrollContainerScroll\n  }, /*#__PURE__*/React$1.createElement(\"table\", {\n    ref: tableElement,\n    className: tableClassNames\n  }, /*#__PURE__*/React$1.createElement(\"thead\", null, /*#__PURE__*/React$1.createElement(\"tr\", {\n    className: styles.HeadingRow\n  }, headingsMarkup)), /*#__PURE__*/React$1.createElement(\"tbody\", {\n    ref: tableBodyRef\n  }, children))));\n  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.EmptySearchResultWrapper\n  }, emptyStateMarkup);\n  return /*#__PURE__*/React$1.createElement(React$1.Fragment, null, /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.IndexTable\n  }, !shouldShowBulkActions && !condensed && loadingMarkup, tableContentMarkup), scrollBarMarkup);\n\n  function renderHeading(heading, index) {\n    const isSecond = index === 0;\n    const headingContentClassName = classNames(styles.TableHeading, isSecond && styles['TableHeading-second']);\n    const stickyPositioningStyle = isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n      left: tableHeadingRects.current[0].offsetWidth\n    } : undefined;\n    const headingContent = /*#__PURE__*/React$1.createElement(\"th\", {\n      className: headingContentClassName,\n      key: heading.title,\n      \"data-index-table-heading\": true,\n      style: stickyPositioningStyle\n    }, renderHeadingContent(heading));\n    if (index !== 0) return headingContent;\n    const checkboxClassName = classNames(styles.TableHeading, index === 0 && styles['TableHeading-first']);\n    const checkboxContent = /*#__PURE__*/React$1.createElement(\"th\", {\n      className: checkboxClassName,\n      key: `${heading}-${index}`,\n      \"data-index-table-heading\": true\n    }, renderCheckboxContent());\n    return [checkboxContent, headingContent];\n  }\n\n  function renderCheckboxContent() {\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.ColumnHeaderCheckboxWrapper\n    }, /*#__PURE__*/React$1.createElement(Checkbox$1, {\n      label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n        resourceNamePlural: resourceName.plural\n      }),\n      labelHidden: true,\n      onChange: handleSelectPage,\n      checked: bulkSelectState\n    }));\n  }\n\n  function renderHeadingContent(heading) {\n    let headingContent;\n\n    if (heading.new) {\n      headingContent = /*#__PURE__*/React$1.createElement(Stack$1, {\n        wrap: false,\n        alignment: \"center\"\n      }, /*#__PURE__*/React$1.createElement(\"span\", null, heading.title), /*#__PURE__*/React$1.createElement(Badge$1, {\n        status: \"new\"\n      }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));\n    } else if (heading.hidden) {\n      headingContent = /*#__PURE__*/React$1.createElement(VisuallyHidden$1, null, heading.title);\n    } else {\n      headingContent = heading.title;\n    }\n\n    return headingContent;\n  }\n\n  function handleSelectPage(checked) {\n    handleSelectionChange(SelectionType.Page, checked);\n  }\n\n  function renderStickyHeading(heading, index) {\n    const position = index + 1;\n    const headingStyle = tableHeadingRects.current && tableHeadingRects.current.length > position ? {\n      minWidth: tableHeadingRects.current[position].offsetWidth\n    } : undefined;\n    const headingContent = renderHeadingContent(heading);\n    const stickyHeadingClassName = classNames(styles.TableHeading, index === 0 && styles['StickyTableHeading-second']);\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      className: stickyHeadingClassName,\n      key: heading.title,\n      style: headingStyle,\n      \"data-index-table-sticky-heading\": true\n    }, headingContent);\n  }\n\n  function getPaginatedSelectAllAction() {\n    if (!selectable || !hasMoreItems) {\n      return;\n    }\n\n    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount,\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    });\n    return {\n      content: actionText,\n      onAction: handleSelectAllItemsInStore\n    };\n  }\n\n  function handleSelectModeToggle(val) {\n    handleSelectionChange(SelectionType.All, false);\n    setIsSmallScreenSelectable(val);\n  }\n}\n\nconst isSmallScreen = () => {\n  return typeof window === 'undefined' ? false : window.innerWidth < SMALL_SCREEN_WIDTH;\n};\n\nfunction IndexTable(_ref2) {\n  let {\n    children,\n    selectable,\n    itemCount,\n    selectedItemsCount,\n    resourceName: passedResourceName,\n    loading,\n    hasMoreItems,\n    condensed,\n    onSelectionChange\n  } = _ref2,\n      indexTableBaseProps = _objectWithoutProperties(_ref2, [\"children\", \"selectable\", \"itemCount\", \"selectedItemsCount\", \"resourceName\", \"loading\", \"hasMoreItems\", \"condensed\", \"onSelectionChange\"]);\n\n  return /*#__PURE__*/React$1.createElement(IndexProvider$1, {\n    selectable: selectable,\n    itemCount: itemCount,\n    selectedItemsCount: selectedItemsCount,\n    resourceName: passedResourceName,\n    loading: loading,\n    hasMoreItems: hasMoreItems,\n    condensed: condensed,\n    onSelectionChange: onSelectionChange\n  }, /*#__PURE__*/React$1.createElement(IndexTableBase, indexTableBaseProps, children));\n}\nIndexTable.Cell = Cell$1;\nIndexTable.Row = Row$1;\n\nexport { IndexTable };\n"]},"metadata":{},"sourceType":"module"}