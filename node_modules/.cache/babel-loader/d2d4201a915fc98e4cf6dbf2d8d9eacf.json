{"ast":null,"code":"import React$1, { useMemo } from 'react';\nimport { IndexContext, IndexRowContext, IndexSelectionChangeContext } from '../../utilities/index-provider/context.js';\nimport { useBulkSelectionData, useHandleBulkSelection } from '../../utilities/index-provider/hooks.js';\n\nfunction IndexProvider(_ref) {\n  let {\n    children,\n    resourceName: passedResourceName,\n    loading,\n    onSelectionChange,\n    selectedItemsCount,\n    itemCount,\n    hasMoreItems,\n    condensed\n  } = _ref;\n  const {\n    paginatedSelectAllText,\n    bulkActionsLabel,\n    bulkActionsAccessibilityLabel,\n    resourceName,\n    selectMode,\n    bulkSelectState,\n    selectable\n  } = useBulkSelectionData({\n    selectedItemsCount,\n    itemCount,\n    hasMoreItems,\n    resourceName: passedResourceName\n  });\n  const handleSelectionChange = useHandleBulkSelection({\n    onSelectionChange\n  });\n  const contextValue = useMemo(() => ({\n    itemCount,\n    selectMode,\n    selectable,\n    resourceName,\n    loading,\n    paginatedSelectAllText,\n    hasMoreItems,\n    bulkActionsLabel,\n    bulkActionsAccessibilityLabel,\n    bulkSelectState,\n    selectedItemsCount,\n    condensed\n  }), [itemCount, selectMode, selectable, resourceName, loading, paginatedSelectAllText, hasMoreItems, bulkActionsLabel, bulkActionsAccessibilityLabel, bulkSelectState, selectedItemsCount, condensed]);\n  const rowContextValue = useMemo(() => ({\n    selectMode,\n    condensed\n  }), [condensed, selectMode]);\n  return /*#__PURE__*/React$1.createElement(IndexContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React$1.createElement(IndexRowContext.Provider, {\n    value: rowContextValue\n  }, /*#__PURE__*/React$1.createElement(IndexSelectionChangeContext.Provider, {\n    value: handleSelectionChange\n  }, children)));\n}\n\nexport { IndexProvider };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/IndexProvider/IndexProvider.js"],"names":["React$1","useMemo","IndexContext","IndexRowContext","IndexSelectionChangeContext","useBulkSelectionData","useHandleBulkSelection","IndexProvider","children","resourceName","passedResourceName","loading","onSelectionChange","selectedItemsCount","itemCount","hasMoreItems","condensed","paginatedSelectAllText","bulkActionsLabel","bulkActionsAccessibilityLabel","selectMode","bulkSelectState","selectable","handleSelectionChange","contextValue","rowContextValue","createElement","Provider","value"],"mappings":"AAAA,OAAOA,OAAP,IAAkBC,OAAlB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,2BAAxC,QAA2E,2CAA3E;AACA,SAASC,oBAAT,EAA+BC,sBAA/B,QAA6D,yCAA7D;;AAEA,SAASC,aAAT,OASG;AAAA,MAToB;AACrBC,IAAAA,QADqB;AAErBC,IAAAA,YAAY,EAAEC,kBAFO;AAGrBC,IAAAA,OAHqB;AAIrBC,IAAAA,iBAJqB;AAKrBC,IAAAA,kBALqB;AAMrBC,IAAAA,SANqB;AAOrBC,IAAAA,YAPqB;AAQrBC,IAAAA;AARqB,GASpB;AACD,QAAM;AACJC,IAAAA,sBADI;AAEJC,IAAAA,gBAFI;AAGJC,IAAAA,6BAHI;AAIJV,IAAAA,YAJI;AAKJW,IAAAA,UALI;AAMJC,IAAAA,eANI;AAOJC,IAAAA;AAPI,MAQFjB,oBAAoB,CAAC;AACvBQ,IAAAA,kBADuB;AAEvBC,IAAAA,SAFuB;AAGvBC,IAAAA,YAHuB;AAIvBN,IAAAA,YAAY,EAAEC;AAJS,GAAD,CARxB;AAcA,QAAMa,qBAAqB,GAAGjB,sBAAsB,CAAC;AACnDM,IAAAA;AADmD,GAAD,CAApD;AAGA,QAAMY,YAAY,GAAGvB,OAAO,CAAC,OAAO;AAClCa,IAAAA,SADkC;AAElCM,IAAAA,UAFkC;AAGlCE,IAAAA,UAHkC;AAIlCb,IAAAA,YAJkC;AAKlCE,IAAAA,OALkC;AAMlCM,IAAAA,sBANkC;AAOlCF,IAAAA,YAPkC;AAQlCG,IAAAA,gBARkC;AASlCC,IAAAA,6BATkC;AAUlCE,IAAAA,eAVkC;AAWlCR,IAAAA,kBAXkC;AAYlCG,IAAAA;AAZkC,GAAP,CAAD,EAaxB,CAACF,SAAD,EAAYM,UAAZ,EAAwBE,UAAxB,EAAoCb,YAApC,EAAkDE,OAAlD,EAA2DM,sBAA3D,EAAmFF,YAAnF,EAAiGG,gBAAjG,EAAmHC,6BAAnH,EAAkJE,eAAlJ,EAAmKR,kBAAnK,EAAuLG,SAAvL,CAbwB,CAA5B;AAcA,QAAMS,eAAe,GAAGxB,OAAO,CAAC,OAAO;AACrCmB,IAAAA,UADqC;AAErCJ,IAAAA;AAFqC,GAAP,CAAD,EAG3B,CAACA,SAAD,EAAYI,UAAZ,CAH2B,CAA/B;AAIA,SAAO,aAAapB,OAAO,CAAC0B,aAAR,CAAsBxB,YAAY,CAACyB,QAAnC,EAA6C;AAC/DC,IAAAA,KAAK,EAAEJ;AADwD,GAA7C,EAEjB,aAAaxB,OAAO,CAAC0B,aAAR,CAAsBvB,eAAe,CAACwB,QAAtC,EAAgD;AAC9DC,IAAAA,KAAK,EAAEH;AADuD,GAAhD,EAEb,aAAazB,OAAO,CAAC0B,aAAR,CAAsBtB,2BAA2B,CAACuB,QAAlD,EAA4D;AAC1EC,IAAAA,KAAK,EAAEL;AADmE,GAA5D,EAEbf,QAFa,CAFA,CAFI,CAApB;AAOD;;AAED,SAASD,aAAT","sourcesContent":["import React$1, { useMemo } from 'react';\nimport { IndexContext, IndexRowContext, IndexSelectionChangeContext } from '../../utilities/index-provider/context.js';\nimport { useBulkSelectionData, useHandleBulkSelection } from '../../utilities/index-provider/hooks.js';\n\nfunction IndexProvider({\n  children,\n  resourceName: passedResourceName,\n  loading,\n  onSelectionChange,\n  selectedItemsCount,\n  itemCount,\n  hasMoreItems,\n  condensed\n}) {\n  const {\n    paginatedSelectAllText,\n    bulkActionsLabel,\n    bulkActionsAccessibilityLabel,\n    resourceName,\n    selectMode,\n    bulkSelectState,\n    selectable\n  } = useBulkSelectionData({\n    selectedItemsCount,\n    itemCount,\n    hasMoreItems,\n    resourceName: passedResourceName\n  });\n  const handleSelectionChange = useHandleBulkSelection({\n    onSelectionChange\n  });\n  const contextValue = useMemo(() => ({\n    itemCount,\n    selectMode,\n    selectable,\n    resourceName,\n    loading,\n    paginatedSelectAllText,\n    hasMoreItems,\n    bulkActionsLabel,\n    bulkActionsAccessibilityLabel,\n    bulkSelectState,\n    selectedItemsCount,\n    condensed\n  }), [itemCount, selectMode, selectable, resourceName, loading, paginatedSelectAllText, hasMoreItems, bulkActionsLabel, bulkActionsAccessibilityLabel, bulkSelectState, selectedItemsCount, condensed]);\n  const rowContextValue = useMemo(() => ({\n    selectMode,\n    condensed\n  }), [condensed, selectMode]);\n  return /*#__PURE__*/React$1.createElement(IndexContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React$1.createElement(IndexRowContext.Provider, {\n    value: rowContextValue\n  }, /*#__PURE__*/React$1.createElement(IndexSelectionChangeContext.Provider, {\n    value: handleSelectionChange\n  }, children)));\n}\n\nexport { IndexProvider };\n"]},"metadata":{},"sourceType":"module"}