{"ast":null,"code":"import React$1, { useState, useRef, useEffect } from 'react';\nimport { classNames, variationName } from '../../../../utilities/css.js';\nimport styles from './CSSAnimation.scss.js';\nvar TransitionStatus;\n\n(function (TransitionStatus) {\n  TransitionStatus[\"Entering\"] = \"entering\";\n  TransitionStatus[\"Entered\"] = \"entered\";\n  TransitionStatus[\"Exiting\"] = \"exiting\";\n  TransitionStatus[\"Exited\"] = \"exited\";\n})(TransitionStatus || (TransitionStatus = {}));\n\nfunction CSSAnimation(_ref) {\n  let {\n    in: inProp,\n    className,\n    type,\n    children\n  } = _ref;\n  const [transitionStatus, setTransitionStatus] = useState(inProp ? TransitionStatus.Entering : TransitionStatus.Exited);\n  const isMounted = useRef(false);\n  const node = useRef(null);\n  useEffect(() => {\n    if (!isMounted.current) return;\n    transitionStatus === TransitionStatus.Entering && changeTransitionStatus(TransitionStatus.Entered);\n  }, [transitionStatus]);\n  useEffect(() => {\n    if (!isMounted.current) return;\n    inProp && changeTransitionStatus(TransitionStatus.Entering);\n    !inProp && changeTransitionStatus(TransitionStatus.Exiting);\n  }, [inProp]);\n  useEffect(() => {\n    isMounted.current = true;\n  }, []);\n  const wrapperClassName = classNames(className, styles[variationName('start', type)], inProp && styles[variationName('end', type)]);\n  const content = transitionStatus === TransitionStatus.Exited && !inProp ? null : children;\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: wrapperClassName,\n    ref: node,\n    onTransitionEnd: handleTransitionEnd\n  }, content);\n\n  function handleTransitionEnd() {\n    transitionStatus === TransitionStatus.Exiting && changeTransitionStatus(TransitionStatus.Exited);\n  }\n\n  function changeTransitionStatus(transitionStatus) {\n    setTransitionStatus(transitionStatus); // Forcing a reflow to enable the animation\n\n    if (transitionStatus === TransitionStatus.Entering) node.current && node.current.getBoundingClientRect();\n  }\n}\n\nexport { CSSAnimation };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/Frame/components/CSSAnimation/CSSAnimation.js"],"names":["React$1","useState","useRef","useEffect","classNames","variationName","styles","TransitionStatus","CSSAnimation","in","inProp","className","type","children","transitionStatus","setTransitionStatus","Entering","Exited","isMounted","node","current","changeTransitionStatus","Entered","Exiting","wrapperClassName","content","createElement","ref","onTransitionEnd","handleTransitionEnd","getBoundingClientRect"],"mappings":"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","sourcesContent":["import React$1, { useState, useRef, useEffect } from 'react';\nimport { classNames, variationName } from '../../../../utilities/css.js';\nimport styles from './CSSAnimation.scss.js';\n\nvar TransitionStatus;\n\n(function (TransitionStatus) {\n  TransitionStatus[\"Entering\"] = \"entering\";\n  TransitionStatus[\"Entered\"] = \"entered\";\n  TransitionStatus[\"Exiting\"] = \"exiting\";\n  TransitionStatus[\"Exited\"] = \"exited\";\n})(TransitionStatus || (TransitionStatus = {}));\n\nfunction CSSAnimation({\n  in: inProp,\n  className,\n  type,\n  children\n}) {\n  const [transitionStatus, setTransitionStatus] = useState(inProp ? TransitionStatus.Entering : TransitionStatus.Exited);\n  const isMounted = useRef(false);\n  const node = useRef(null);\n  useEffect(() => {\n    if (!isMounted.current) return;\n    transitionStatus === TransitionStatus.Entering && changeTransitionStatus(TransitionStatus.Entered);\n  }, [transitionStatus]);\n  useEffect(() => {\n    if (!isMounted.current) return;\n    inProp && changeTransitionStatus(TransitionStatus.Entering);\n    !inProp && changeTransitionStatus(TransitionStatus.Exiting);\n  }, [inProp]);\n  useEffect(() => {\n    isMounted.current = true;\n  }, []);\n  const wrapperClassName = classNames(className, styles[variationName('start', type)], inProp && styles[variationName('end', type)]);\n  const content = transitionStatus === TransitionStatus.Exited && !inProp ? null : children;\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: wrapperClassName,\n    ref: node,\n    onTransitionEnd: handleTransitionEnd\n  }, content);\n\n  function handleTransitionEnd() {\n    transitionStatus === TransitionStatus.Exiting && changeTransitionStatus(TransitionStatus.Exited);\n  }\n\n  function changeTransitionStatus(transitionStatus) {\n    setTransitionStatus(transitionStatus); // Forcing a reflow to enable the animation\n\n    if (transitionStatus === TransitionStatus.Entering) node.current && node.current.getBoundingClientRect();\n  }\n}\n\nexport { CSSAnimation };\n"]},"metadata":{},"sourceType":"module"}