{"ast":null,"code":"import React$1, { PureComponent, createRef } from 'react';\nimport debounce$1 from 'lodash/debounce';\nimport { EventListener as EventListener$1 } from '../EventListener/EventListener.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { durationBase } from '@shopify/polaris-tokens';\nimport { classNames } from '../../utilities/css.js';\nimport { Popover as Popover$1 } from '../Popover/Popover.js';\nimport { ActionList as ActionList$1 } from '../ActionList/ActionList.js';\nimport { Button as Button$1 } from '../Button/Button.js';\nimport { ButtonGroup as ButtonGroup$1 } from '../ButtonGroup/ButtonGroup.js';\nimport { Transition, CSSTransition } from 'react-transition-group';\nimport { clamp as clamp$1 } from '../../utilities/clamp.js';\nimport { CheckableButton as CheckableButton$1 } from '../CheckableButton/CheckableButton.js';\nimport styles from './BulkActions.scss.js';\nimport { BulkActionButton as BulkActionButton$1 } from './components/BulkActionButton/BulkActionButton.js';\nconst MAX_PROMOTED_ACTIONS = 2;\nconst slideClasses = {\n  appear: classNames(styles.Slide, styles['Slide-appear']),\n  appearActive: classNames(styles.Slide, styles['Slide-appearing']),\n  enter: classNames(styles.Slide, styles['Slide-enter']),\n  enterActive: classNames(styles.Slide, styles['Slide-entering']),\n  exit: classNames(styles.Slide, styles['Slide-exit'])\n};\n\nclass BulkActionsInner extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      smallScreenPopoverVisible: false,\n      largeScreenPopoverVisible: false,\n      containerWidth: 0,\n      measuring: true\n    };\n    this.containerNode = null;\n    this.largeScreenButtonsNode = null;\n    this.moreActionsNode = null;\n    this.checkableWrapperNode = /*#__PURE__*/createRef();\n    this.largeScreenGroupNode = /*#__PURE__*/createRef();\n    this.smallScreenGroupNode = /*#__PURE__*/createRef();\n    this.promotedActionsWidths = [];\n    this.bulkActionsWidth = 0;\n    this.addedMoreActionsWidthForMeasuring = 0;\n    this.handleResize = debounce$1(() => {\n      const {\n        smallScreenPopoverVisible,\n        largeScreenPopoverVisible\n      } = this.state;\n\n      if (this.containerNode) {\n        const containerWidth = this.containerNode.getBoundingClientRect().width;\n\n        if (containerWidth > 0) {\n          this.setState({\n            containerWidth\n          });\n        }\n      }\n\n      if (smallScreenPopoverVisible || largeScreenPopoverVisible) {\n        this.setState({\n          smallScreenPopoverVisible: false,\n          largeScreenPopoverVisible: false\n        });\n      }\n    }, 50, {\n      trailing: true\n    });\n\n    this.setLargeScreenButtonsNode = node => {\n      this.largeScreenButtonsNode = node;\n    };\n\n    this.setContainerNode = node => {\n      this.containerNode = node;\n    };\n\n    this.setMoreActionsNode = node => {\n      this.moreActionsNode = node;\n    };\n\n    this.setSelectMode = val => {\n      const {\n        onSelectModeToggle\n      } = this.props;\n\n      if (onSelectModeToggle) {\n        onSelectModeToggle(val);\n      }\n    };\n\n    this.toggleSmallScreenPopover = () => {\n      if (this.props.onMoreActionPopoverToggle) {\n        this.props.onMoreActionPopoverToggle(this.state.smallScreenPopoverVisible);\n      }\n\n      this.setState(_ref => {\n        let {\n          smallScreenPopoverVisible\n        } = _ref;\n        return {\n          smallScreenPopoverVisible: !smallScreenPopoverVisible\n        };\n      });\n    };\n\n    this.toggleLargeScreenPopover = () => {\n      if (this.props.onMoreActionPopoverToggle) {\n        this.props.onMoreActionPopoverToggle(this.state.largeScreenPopoverVisible);\n      }\n\n      this.setState(_ref2 => {\n        let {\n          largeScreenPopoverVisible\n        } = _ref2;\n        return {\n          largeScreenPopoverVisible: !largeScreenPopoverVisible\n        };\n      });\n    };\n\n    this.handleMeasurement = width => {\n      const {\n        measuring\n      } = this.state;\n\n      if (measuring) {\n        this.promotedActionsWidths.push(width);\n      }\n    };\n  }\n\n  numberOfPromotedActionsToRender() {\n    const {\n      promotedActions\n    } = this.props;\n    const {\n      containerWidth,\n      measuring\n    } = this.state;\n\n    if (!promotedActions) {\n      return 0;\n    }\n\n    if (containerWidth >= this.bulkActionsWidth || measuring) {\n      return promotedActions.length;\n    }\n\n    let sufficientSpace = false;\n    let counter = promotedActions.length - 1;\n    let totalWidth = 0;\n\n    while (!sufficientSpace && counter >= 0) {\n      totalWidth += this.promotedActionsWidths[counter];\n      const widthWithRemovedAction = this.bulkActionsWidth - totalWidth + this.addedMoreActionsWidthForMeasuring;\n\n      if (containerWidth >= widthWithRemovedAction) {\n        sufficientSpace = true;\n      } else {\n        counter--;\n      }\n    }\n\n    return clamp$1(counter, 0, promotedActions.length);\n  }\n\n  hasActions() {\n    const {\n      promotedActions,\n      actions\n    } = this.props;\n    return Boolean(promotedActions && promotedActions.length > 0 || actions && actions.length > 0);\n  }\n\n  actionSections() {\n    const {\n      actions\n    } = this.props;\n\n    if (!actions || actions.length === 0) {\n      return;\n    }\n\n    if (instanceOfBulkActionListSectionArray(actions)) {\n      return actions;\n    }\n\n    if (instanceOfBulkActionArray(actions)) {\n      return [{\n        items: actions\n      }];\n    }\n  } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n\n  componentDidMount() {\n    const {\n      actions,\n      promotedActions\n    } = this.props;\n\n    if (promotedActions && !actions && this.moreActionsNode) {\n      this.addedMoreActionsWidthForMeasuring = this.moreActionsNode.getBoundingClientRect().width;\n    }\n\n    this.bulkActionsWidth = this.largeScreenButtonsNode ? this.largeScreenButtonsNode.getBoundingClientRect().width - this.addedMoreActionsWidthForMeasuring : 0;\n\n    if (this.containerNode) {\n      this.setState({\n        containerWidth: this.containerNode.getBoundingClientRect().width,\n        measuring: false\n      });\n    }\n  } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n\n  render() {\n    const {\n      selectMode,\n      accessibilityLabel,\n      label = '',\n      onToggleAll,\n      selected,\n      smallScreen,\n      disabled,\n      promotedActions,\n      paginatedSelectAllText = null,\n      paginatedSelectAllAction,\n      i18n\n    } = this.props;\n    const actionSections = this.actionSections();\n\n    if (promotedActions && promotedActions.length > MAX_PROMOTED_ACTIONS) {\n      // eslint-disable-next-line no-console\n      console.warn(i18n.translate('Polaris.ResourceList.BulkActions.warningMessage', {\n        maxPromotedActions: MAX_PROMOTED_ACTIONS\n      }));\n    }\n\n    const {\n      smallScreenPopoverVisible,\n      largeScreenPopoverVisible,\n      measuring\n    } = this.state;\n    const paginatedSelectAllActionMarkup = paginatedSelectAllAction ? /*#__PURE__*/React$1.createElement(Button$1, {\n      onClick: paginatedSelectAllAction.onAction,\n      plain: true,\n      disabled: disabled\n    }, paginatedSelectAllAction.content) : null;\n    const paginatedSelectAllTextMarkup = paginatedSelectAllText && paginatedSelectAllAction ? /*#__PURE__*/React$1.createElement(\"span\", {\n      \"aria-live\": \"polite\"\n    }, paginatedSelectAllText) : paginatedSelectAllText;\n    const paginatedSelectAllMarkup = paginatedSelectAllActionMarkup || paginatedSelectAllTextMarkup ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.PaginatedSelectAll\n    }, paginatedSelectAllTextMarkup, \" \", paginatedSelectAllActionMarkup) : null;\n    const cancelButton = /*#__PURE__*/React$1.createElement(Button$1, {\n      onClick: this.setSelectMode.bind(this, false),\n      disabled: disabled\n    }, i18n.translate('Polaris.Common.cancel'));\n    const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();\n    const allActionsPopover = this.hasActions() ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Popover,\n      ref: this.setMoreActionsNode\n    }, /*#__PURE__*/React$1.createElement(Popover$1, {\n      active: smallScreenPopoverVisible,\n      activator: /*#__PURE__*/React$1.createElement(BulkActionButton$1, {\n        disclosure: true,\n        onAction: this.toggleSmallScreenPopover,\n        content: i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel'),\n        disabled: disabled,\n        indicator: this.isNewBadgeInBadgeActions()\n      }),\n      onClose: this.toggleSmallScreenPopover\n    }, /*#__PURE__*/React$1.createElement(ActionList$1, {\n      items: promotedActions,\n      sections: actionSections,\n      onActionAnyItem: this.toggleSmallScreenPopover\n    }))) : null;\n    const promotedActionsMarkup = promotedActions && numberOfPromotedActionsToRender > 0 ? [...promotedActions].slice(0, numberOfPromotedActionsToRender).map((action, index) => /*#__PURE__*/React$1.createElement(BulkActionButton$1, Object.assign({\n      disabled: disabled\n    }, action, {\n      key: index,\n      handleMeasurement: this.handleMeasurement\n    }))) : null;\n    const rolledInPromotedActions = promotedActions && numberOfPromotedActionsToRender < promotedActions.length ? [...promotedActions].slice(numberOfPromotedActionsToRender) : [];\n    const activatorLabel = !promotedActions || promotedActions && numberOfPromotedActionsToRender === 0 && !measuring ? i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel') : i18n.translate('Polaris.ResourceList.BulkActions.moreActionsActivatorLabel');\n    let combinedActions = [];\n\n    if (actionSections && rolledInPromotedActions.length > 0) {\n      combinedActions = [{\n        items: rolledInPromotedActions\n      }, ...actionSections];\n    } else if (actionSections) {\n      combinedActions = actionSections;\n    } else if (rolledInPromotedActions.length > 0) {\n      combinedActions = [{\n        items: rolledInPromotedActions\n      }];\n    }\n\n    const actionsPopover = actionSections || rolledInPromotedActions.length > 0 || measuring ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Popover,\n      ref: this.setMoreActionsNode\n    }, /*#__PURE__*/React$1.createElement(Popover$1, {\n      active: largeScreenPopoverVisible,\n      activator: /*#__PURE__*/React$1.createElement(BulkActionButton$1, {\n        disclosure: true,\n        onAction: this.toggleLargeScreenPopover,\n        content: activatorLabel,\n        disabled: disabled,\n        indicator: this.isNewBadgeInBadgeActions()\n      }),\n      onClose: this.toggleLargeScreenPopover\n    }, /*#__PURE__*/React$1.createElement(ActionList$1, {\n      sections: combinedActions,\n      onActionAnyItem: this.toggleLargeScreenPopover\n    }))) : null;\n    const checkableButtonProps = {\n      accessibilityLabel,\n      label,\n      selected,\n      selectMode,\n      onToggleAll,\n      measuring,\n      disabled\n    };\n    const smallScreenGroup = smallScreen ? /*#__PURE__*/React$1.createElement(Transition, {\n      timeout: 0,\n      in: selectMode,\n      key: \"smallGroup\",\n      nodeRef: this.smallScreenGroupNode\n    }, status => {\n      const smallScreenGroupClassName = classNames(styles.Group, styles['Group-smallScreen'], styles[`Group-${status}`]);\n      return /*#__PURE__*/React$1.createElement(\"div\", {\n        className: smallScreenGroupClassName,\n        ref: this.smallScreenGroupNode\n      }, /*#__PURE__*/React$1.createElement(\"div\", {\n        className: styles.ButtonGroupWrapper\n      }, /*#__PURE__*/React$1.createElement(ButtonGroup$1, {\n        segmented: true\n      }, /*#__PURE__*/React$1.createElement(CSSTransition, {\n        nodeRef: this.checkableWrapperNode,\n        in: selectMode,\n        timeout: durationBase,\n        classNames: slideClasses,\n        appear: !selectMode\n      }, /*#__PURE__*/React$1.createElement(\"div\", {\n        className: styles.CheckableContainer,\n        ref: this.checkableWrapperNode\n      }, /*#__PURE__*/React$1.createElement(CheckableButton$1, Object.assign({}, checkableButtonProps, {\n        smallScreen: true\n      })))), allActionsPopover, cancelButton)), paginatedSelectAllMarkup);\n    }) : null;\n    const largeGroupContent = promotedActionsMarkup || actionsPopover ? /*#__PURE__*/React$1.createElement(ButtonGroup$1, {\n      segmented: true\n    }, /*#__PURE__*/React$1.createElement(CheckableButton$1, checkableButtonProps), promotedActionsMarkup, actionsPopover) : /*#__PURE__*/React$1.createElement(CheckableButton$1, checkableButtonProps);\n    const largeScreenGroup = smallScreen ? null : /*#__PURE__*/React$1.createElement(Transition, {\n      timeout: 0,\n      in: selectMode,\n      key: \"largeGroup\",\n      nodeRef: this.largeScreenGroupNode\n    }, status => {\n      const largeScreenGroupClassName = classNames(styles.Group, styles['Group-largeScreen'], !measuring && styles[`Group-${status}`], measuring && styles['Group-measuring']);\n      return /*#__PURE__*/React$1.createElement(\"div\", {\n        className: largeScreenGroupClassName,\n        ref: this.largeScreenGroupNode\n      }, /*#__PURE__*/React$1.createElement(EventListener$1, {\n        event: \"resize\",\n        handler: this.handleResize\n      }), /*#__PURE__*/React$1.createElement(\"div\", {\n        className: styles.ButtonGroupWrapper,\n        ref: this.setLargeScreenButtonsNode\n      }, largeGroupContent), paginatedSelectAllMarkup);\n    });\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      ref: this.setContainerNode\n    }, smallScreenGroup, largeScreenGroup);\n  }\n\n  isNewBadgeInBadgeActions() {\n    const actions = this.actionSections();\n    if (!actions) return false;\n\n    for (const action of actions) {\n      for (const item of action.items) {\n        var _item$badge;\n\n        if (((_item$badge = item.badge) == null ? void 0 : _item$badge.status) === 'new') return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nfunction instanceOfBulkActionListSectionArray(actions) {\n  const validList = actions.filter(action => {\n    return action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction instanceOfBulkActionArray(actions) {\n  const validList = actions.filter(action => {\n    return !action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction BulkActions(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React$1.createElement(BulkActionsInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { BulkActions };","map":{"version":3,"sources":["/Users/yewonkwak/Documents/GitHub/spacestagram/node_modules/@shopify/polaris/dist/esm/components/BulkActions/BulkActions.js"],"names":["React$1","PureComponent","createRef","debounce$1","EventListener","EventListener$1","useI18n","durationBase","classNames","Popover","Popover$1","ActionList","ActionList$1","Button","Button$1","ButtonGroup","ButtonGroup$1","Transition","CSSTransition","clamp","clamp$1","CheckableButton","CheckableButton$1","styles","BulkActionButton","BulkActionButton$1","MAX_PROMOTED_ACTIONS","slideClasses","appear","Slide","appearActive","enter","enterActive","exit","BulkActionsInner","constructor","state","smallScreenPopoverVisible","largeScreenPopoverVisible","containerWidth","measuring","containerNode","largeScreenButtonsNode","moreActionsNode","checkableWrapperNode","largeScreenGroupNode","smallScreenGroupNode","promotedActionsWidths","bulkActionsWidth","addedMoreActionsWidthForMeasuring","handleResize","getBoundingClientRect","width","setState","trailing","setLargeScreenButtonsNode","node","setContainerNode","setMoreActionsNode","setSelectMode","val","onSelectModeToggle","props","toggleSmallScreenPopover","onMoreActionPopoverToggle","toggleLargeScreenPopover","handleMeasurement","push","numberOfPromotedActionsToRender","promotedActions","length","sufficientSpace","counter","totalWidth","widthWithRemovedAction","hasActions","actions","Boolean","actionSections","instanceOfBulkActionListSectionArray","instanceOfBulkActionArray","items","componentDidMount","render","selectMode","accessibilityLabel","label","onToggleAll","selected","smallScreen","disabled","paginatedSelectAllText","paginatedSelectAllAction","i18n","console","warn","translate","maxPromotedActions","paginatedSelectAllActionMarkup","createElement","onClick","onAction","plain","content","paginatedSelectAllTextMarkup","paginatedSelectAllMarkup","className","PaginatedSelectAll","cancelButton","bind","allActionsPopover","ref","active","activator","disclosure","indicator","isNewBadgeInBadgeActions","onClose","sections","onActionAnyItem","promotedActionsMarkup","slice","map","action","index","Object","assign","key","rolledInPromotedActions","activatorLabel","combinedActions","actionsPopover","checkableButtonProps","smallScreenGroup","timeout","in","nodeRef","status","smallScreenGroupClassName","Group","ButtonGroupWrapper","segmented","CheckableContainer","largeGroupContent","largeScreenGroup","largeScreenGroupClassName","event","handler","item","_item$badge","badge","validList","filter","BulkActions"],"mappings":"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","sourcesContent":["import React$1, { PureComponent, createRef } from 'react';\nimport debounce$1 from 'lodash/debounce';\nimport { EventListener as EventListener$1 } from '../EventListener/EventListener.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { durationBase } from '@shopify/polaris-tokens';\nimport { classNames } from '../../utilities/css.js';\nimport { Popover as Popover$1 } from '../Popover/Popover.js';\nimport { ActionList as ActionList$1 } from '../ActionList/ActionList.js';\nimport { Button as Button$1 } from '../Button/Button.js';\nimport { ButtonGroup as ButtonGroup$1 } from '../ButtonGroup/ButtonGroup.js';\nimport { Transition, CSSTransition } from 'react-transition-group';\nimport { clamp as clamp$1 } from '../../utilities/clamp.js';\nimport { CheckableButton as CheckableButton$1 } from '../CheckableButton/CheckableButton.js';\nimport styles from './BulkActions.scss.js';\nimport { BulkActionButton as BulkActionButton$1 } from './components/BulkActionButton/BulkActionButton.js';\n\nconst MAX_PROMOTED_ACTIONS = 2;\nconst slideClasses = {\n  appear: classNames(styles.Slide, styles['Slide-appear']),\n  appearActive: classNames(styles.Slide, styles['Slide-appearing']),\n  enter: classNames(styles.Slide, styles['Slide-enter']),\n  enterActive: classNames(styles.Slide, styles['Slide-entering']),\n  exit: classNames(styles.Slide, styles['Slide-exit'])\n};\n\nclass BulkActionsInner extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      smallScreenPopoverVisible: false,\n      largeScreenPopoverVisible: false,\n      containerWidth: 0,\n      measuring: true\n    };\n    this.containerNode = null;\n    this.largeScreenButtonsNode = null;\n    this.moreActionsNode = null;\n    this.checkableWrapperNode = /*#__PURE__*/createRef();\n    this.largeScreenGroupNode = /*#__PURE__*/createRef();\n    this.smallScreenGroupNode = /*#__PURE__*/createRef();\n    this.promotedActionsWidths = [];\n    this.bulkActionsWidth = 0;\n    this.addedMoreActionsWidthForMeasuring = 0;\n    this.handleResize = debounce$1(() => {\n      const {\n        smallScreenPopoverVisible,\n        largeScreenPopoverVisible\n      } = this.state;\n\n      if (this.containerNode) {\n        const containerWidth = this.containerNode.getBoundingClientRect().width;\n\n        if (containerWidth > 0) {\n          this.setState({\n            containerWidth\n          });\n        }\n      }\n\n      if (smallScreenPopoverVisible || largeScreenPopoverVisible) {\n        this.setState({\n          smallScreenPopoverVisible: false,\n          largeScreenPopoverVisible: false\n        });\n      }\n    }, 50, {\n      trailing: true\n    });\n\n    this.setLargeScreenButtonsNode = node => {\n      this.largeScreenButtonsNode = node;\n    };\n\n    this.setContainerNode = node => {\n      this.containerNode = node;\n    };\n\n    this.setMoreActionsNode = node => {\n      this.moreActionsNode = node;\n    };\n\n    this.setSelectMode = val => {\n      const {\n        onSelectModeToggle\n      } = this.props;\n\n      if (onSelectModeToggle) {\n        onSelectModeToggle(val);\n      }\n    };\n\n    this.toggleSmallScreenPopover = () => {\n      if (this.props.onMoreActionPopoverToggle) {\n        this.props.onMoreActionPopoverToggle(this.state.smallScreenPopoverVisible);\n      }\n\n      this.setState(({\n        smallScreenPopoverVisible\n      }) => ({\n        smallScreenPopoverVisible: !smallScreenPopoverVisible\n      }));\n    };\n\n    this.toggleLargeScreenPopover = () => {\n      if (this.props.onMoreActionPopoverToggle) {\n        this.props.onMoreActionPopoverToggle(this.state.largeScreenPopoverVisible);\n      }\n\n      this.setState(({\n        largeScreenPopoverVisible\n      }) => ({\n        largeScreenPopoverVisible: !largeScreenPopoverVisible\n      }));\n    };\n\n    this.handleMeasurement = width => {\n      const {\n        measuring\n      } = this.state;\n\n      if (measuring) {\n        this.promotedActionsWidths.push(width);\n      }\n    };\n  }\n\n  numberOfPromotedActionsToRender() {\n    const {\n      promotedActions\n    } = this.props;\n    const {\n      containerWidth,\n      measuring\n    } = this.state;\n\n    if (!promotedActions) {\n      return 0;\n    }\n\n    if (containerWidth >= this.bulkActionsWidth || measuring) {\n      return promotedActions.length;\n    }\n\n    let sufficientSpace = false;\n    let counter = promotedActions.length - 1;\n    let totalWidth = 0;\n\n    while (!sufficientSpace && counter >= 0) {\n      totalWidth += this.promotedActionsWidths[counter];\n      const widthWithRemovedAction = this.bulkActionsWidth - totalWidth + this.addedMoreActionsWidthForMeasuring;\n\n      if (containerWidth >= widthWithRemovedAction) {\n        sufficientSpace = true;\n      } else {\n        counter--;\n      }\n    }\n\n    return clamp$1(counter, 0, promotedActions.length);\n  }\n\n  hasActions() {\n    const {\n      promotedActions,\n      actions\n    } = this.props;\n    return Boolean(promotedActions && promotedActions.length > 0 || actions && actions.length > 0);\n  }\n\n  actionSections() {\n    const {\n      actions\n    } = this.props;\n\n    if (!actions || actions.length === 0) {\n      return;\n    }\n\n    if (instanceOfBulkActionListSectionArray(actions)) {\n      return actions;\n    }\n\n    if (instanceOfBulkActionArray(actions)) {\n      return [{\n        items: actions\n      }];\n    }\n  } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n\n  componentDidMount() {\n    const {\n      actions,\n      promotedActions\n    } = this.props;\n\n    if (promotedActions && !actions && this.moreActionsNode) {\n      this.addedMoreActionsWidthForMeasuring = this.moreActionsNode.getBoundingClientRect().width;\n    }\n\n    this.bulkActionsWidth = this.largeScreenButtonsNode ? this.largeScreenButtonsNode.getBoundingClientRect().width - this.addedMoreActionsWidthForMeasuring : 0;\n\n    if (this.containerNode) {\n      this.setState({\n        containerWidth: this.containerNode.getBoundingClientRect().width,\n        measuring: false\n      });\n    }\n  } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n\n  render() {\n    const {\n      selectMode,\n      accessibilityLabel,\n      label = '',\n      onToggleAll,\n      selected,\n      smallScreen,\n      disabled,\n      promotedActions,\n      paginatedSelectAllText = null,\n      paginatedSelectAllAction,\n      i18n\n    } = this.props;\n    const actionSections = this.actionSections();\n\n    if (promotedActions && promotedActions.length > MAX_PROMOTED_ACTIONS) {\n      // eslint-disable-next-line no-console\n      console.warn(i18n.translate('Polaris.ResourceList.BulkActions.warningMessage', {\n        maxPromotedActions: MAX_PROMOTED_ACTIONS\n      }));\n    }\n\n    const {\n      smallScreenPopoverVisible,\n      largeScreenPopoverVisible,\n      measuring\n    } = this.state;\n    const paginatedSelectAllActionMarkup = paginatedSelectAllAction ? /*#__PURE__*/React$1.createElement(Button$1, {\n      onClick: paginatedSelectAllAction.onAction,\n      plain: true,\n      disabled: disabled\n    }, paginatedSelectAllAction.content) : null;\n    const paginatedSelectAllTextMarkup = paginatedSelectAllText && paginatedSelectAllAction ? /*#__PURE__*/React$1.createElement(\"span\", {\n      \"aria-live\": \"polite\"\n    }, paginatedSelectAllText) : paginatedSelectAllText;\n    const paginatedSelectAllMarkup = paginatedSelectAllActionMarkup || paginatedSelectAllTextMarkup ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.PaginatedSelectAll\n    }, paginatedSelectAllTextMarkup, \" \", paginatedSelectAllActionMarkup) : null;\n    const cancelButton = /*#__PURE__*/React$1.createElement(Button$1, {\n      onClick: this.setSelectMode.bind(this, false),\n      disabled: disabled\n    }, i18n.translate('Polaris.Common.cancel'));\n    const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();\n    const allActionsPopover = this.hasActions() ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Popover,\n      ref: this.setMoreActionsNode\n    }, /*#__PURE__*/React$1.createElement(Popover$1, {\n      active: smallScreenPopoverVisible,\n      activator: /*#__PURE__*/React$1.createElement(BulkActionButton$1, {\n        disclosure: true,\n        onAction: this.toggleSmallScreenPopover,\n        content: i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel'),\n        disabled: disabled,\n        indicator: this.isNewBadgeInBadgeActions()\n      }),\n      onClose: this.toggleSmallScreenPopover\n    }, /*#__PURE__*/React$1.createElement(ActionList$1, {\n      items: promotedActions,\n      sections: actionSections,\n      onActionAnyItem: this.toggleSmallScreenPopover\n    }))) : null;\n    const promotedActionsMarkup = promotedActions && numberOfPromotedActionsToRender > 0 ? [...promotedActions].slice(0, numberOfPromotedActionsToRender).map((action, index) => /*#__PURE__*/React$1.createElement(BulkActionButton$1, Object.assign({\n      disabled: disabled\n    }, action, {\n      key: index,\n      handleMeasurement: this.handleMeasurement\n    }))) : null;\n    const rolledInPromotedActions = promotedActions && numberOfPromotedActionsToRender < promotedActions.length ? [...promotedActions].slice(numberOfPromotedActionsToRender) : [];\n    const activatorLabel = !promotedActions || promotedActions && numberOfPromotedActionsToRender === 0 && !measuring ? i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel') : i18n.translate('Polaris.ResourceList.BulkActions.moreActionsActivatorLabel');\n    let combinedActions = [];\n\n    if (actionSections && rolledInPromotedActions.length > 0) {\n      combinedActions = [{\n        items: rolledInPromotedActions\n      }, ...actionSections];\n    } else if (actionSections) {\n      combinedActions = actionSections;\n    } else if (rolledInPromotedActions.length > 0) {\n      combinedActions = [{\n        items: rolledInPromotedActions\n      }];\n    }\n\n    const actionsPopover = actionSections || rolledInPromotedActions.length > 0 || measuring ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Popover,\n      ref: this.setMoreActionsNode\n    }, /*#__PURE__*/React$1.createElement(Popover$1, {\n      active: largeScreenPopoverVisible,\n      activator: /*#__PURE__*/React$1.createElement(BulkActionButton$1, {\n        disclosure: true,\n        onAction: this.toggleLargeScreenPopover,\n        content: activatorLabel,\n        disabled: disabled,\n        indicator: this.isNewBadgeInBadgeActions()\n      }),\n      onClose: this.toggleLargeScreenPopover\n    }, /*#__PURE__*/React$1.createElement(ActionList$1, {\n      sections: combinedActions,\n      onActionAnyItem: this.toggleLargeScreenPopover\n    }))) : null;\n    const checkableButtonProps = {\n      accessibilityLabel,\n      label,\n      selected,\n      selectMode,\n      onToggleAll,\n      measuring,\n      disabled\n    };\n    const smallScreenGroup = smallScreen ? /*#__PURE__*/React$1.createElement(Transition, {\n      timeout: 0,\n      in: selectMode,\n      key: \"smallGroup\",\n      nodeRef: this.smallScreenGroupNode\n    }, status => {\n      const smallScreenGroupClassName = classNames(styles.Group, styles['Group-smallScreen'], styles[`Group-${status}`]);\n      return /*#__PURE__*/React$1.createElement(\"div\", {\n        className: smallScreenGroupClassName,\n        ref: this.smallScreenGroupNode\n      }, /*#__PURE__*/React$1.createElement(\"div\", {\n        className: styles.ButtonGroupWrapper\n      }, /*#__PURE__*/React$1.createElement(ButtonGroup$1, {\n        segmented: true\n      }, /*#__PURE__*/React$1.createElement(CSSTransition, {\n        nodeRef: this.checkableWrapperNode,\n        in: selectMode,\n        timeout: durationBase,\n        classNames: slideClasses,\n        appear: !selectMode\n      }, /*#__PURE__*/React$1.createElement(\"div\", {\n        className: styles.CheckableContainer,\n        ref: this.checkableWrapperNode\n      }, /*#__PURE__*/React$1.createElement(CheckableButton$1, Object.assign({}, checkableButtonProps, {\n        smallScreen: true\n      })))), allActionsPopover, cancelButton)), paginatedSelectAllMarkup);\n    }) : null;\n    const largeGroupContent = promotedActionsMarkup || actionsPopover ? /*#__PURE__*/React$1.createElement(ButtonGroup$1, {\n      segmented: true\n    }, /*#__PURE__*/React$1.createElement(CheckableButton$1, checkableButtonProps), promotedActionsMarkup, actionsPopover) : /*#__PURE__*/React$1.createElement(CheckableButton$1, checkableButtonProps);\n    const largeScreenGroup = smallScreen ? null : /*#__PURE__*/React$1.createElement(Transition, {\n      timeout: 0,\n      in: selectMode,\n      key: \"largeGroup\",\n      nodeRef: this.largeScreenGroupNode\n    }, status => {\n      const largeScreenGroupClassName = classNames(styles.Group, styles['Group-largeScreen'], !measuring && styles[`Group-${status}`], measuring && styles['Group-measuring']);\n      return /*#__PURE__*/React$1.createElement(\"div\", {\n        className: largeScreenGroupClassName,\n        ref: this.largeScreenGroupNode\n      }, /*#__PURE__*/React$1.createElement(EventListener$1, {\n        event: \"resize\",\n        handler: this.handleResize\n      }), /*#__PURE__*/React$1.createElement(\"div\", {\n        className: styles.ButtonGroupWrapper,\n        ref: this.setLargeScreenButtonsNode\n      }, largeGroupContent), paginatedSelectAllMarkup);\n    });\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      ref: this.setContainerNode\n    }, smallScreenGroup, largeScreenGroup);\n  }\n\n  isNewBadgeInBadgeActions() {\n    const actions = this.actionSections();\n    if (!actions) return false;\n\n    for (const action of actions) {\n      for (const item of action.items) {\n        var _item$badge;\n\n        if (((_item$badge = item.badge) == null ? void 0 : _item$badge.status) === 'new') return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nfunction instanceOfBulkActionListSectionArray(actions) {\n  const validList = actions.filter(action => {\n    return action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction instanceOfBulkActionArray(actions) {\n  const validList = actions.filter(action => {\n    return !action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction BulkActions(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React$1.createElement(BulkActionsInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { BulkActions };\n"]},"metadata":{},"sourceType":"module"}